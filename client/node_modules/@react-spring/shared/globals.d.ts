import { SpringInterpolator, InterpolatorConfig } from './types';
import { ElementType } from 'react';
declare const window: {
    requestAnimationFrame: (cb: (time: number) => void) => number;
    cancelAnimationFrame: (id: number) => void;
};
export declare let defaultElement: string | ElementType;
/** Provide custom logic for native updates */
export declare let applyAnimatedValues: (node: any, props: any) => boolean | void;
/** Provide a custom `interpolate` function */
export declare let createAnimatedInterpolation: SpringInterpolator;
/** Provide custom logic for string interpolation */
export declare let createStringInterpolator: (config: InterpolatorConfig<string>) => (input: number) => string;
/** Provide a custom `FrameLoop` instance */
export declare let frameLoop: {
    update: () => boolean;
    controllers: Map<number, any>;
    start(controller: any): void;
    stop(controller: any): void;
};
export declare let now: () => number;
/** Provide custom color names for interpolation */
export declare let colorNames: {
    [key: string]: number;
} | null;
/** Make all animations instant and skip the frameloop entirely */
export declare let skipAnimation: boolean;
/** Intercept props before they're passed to an animated component */
export declare let getComponentProps: (props: any) => any;
/** Wrap the `style` prop with an animated node */
export declare let createAnimatedStyle: ((style: any) => any) | null;
/** Wrap the `transform` prop with an animated node */
export declare let createAnimatedTransform: ((transform: any) => any) | null;
export declare let requestAnimationFrame: typeof window.requestAnimationFrame;
export declare let cancelAnimationFrame: typeof window.cancelAnimationFrame;
export interface AnimatedGlobals {
    now?: typeof now;
    frameLoop?: typeof frameLoop;
    colorNames?: typeof colorNames;
    skipAnimation?: typeof skipAnimation;
    defaultElement?: typeof defaultElement;
    getComponentProps?: typeof getComponentProps;
    applyAnimatedValues?: typeof applyAnimatedValues;
    createStringInterpolator?: typeof createStringInterpolator;
    createAnimatedInterpolation?: typeof createAnimatedInterpolation;
    createAnimatedTransform?: typeof createAnimatedTransform;
    createAnimatedStyle?: typeof createAnimatedStyle;
    requestAnimationFrame?: typeof requestAnimationFrame;
    cancelAnimationFrame?: typeof cancelAnimationFrame;
}
export declare const assign: (globals: AnimatedGlobals) => AnimatedGlobals;
export {};

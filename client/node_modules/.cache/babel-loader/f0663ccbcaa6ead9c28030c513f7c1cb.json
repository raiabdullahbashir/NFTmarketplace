{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rinkebyCustomSchema = {\n  version: 1,\n  deploymentBlock: 0,\n  name: 'RinkebyCustom',\n  description: 'Rinkeby Custom (manual ABI specification)',\n  thumbnail: 'https://d30y9cdsu7xlg0.cloudfront.net/png/45447-200.png',\n  website: 'https://github.com/projectwyvern/wyvern-schemas',\n  fields: [{\n    name: 'Name',\n    type: 'string',\n    description: 'Name of Asset'\n  }, {\n    name: 'Description',\n    type: 'string',\n    description: 'Description of Asset'\n  }, {\n    name: 'Thumbnail',\n    type: 'string',\n    description: 'URL of asset thumbnail image'\n  }, {\n    name: 'URL',\n    type: 'string',\n    description: 'URL of asset'\n  }, {\n    name: 'Transfer',\n    type: 'abi',\n    description: 'ABI of transfer function'\n  }],\n  assetFromFields: fields => ({\n    name: fields.Name,\n    description: fields.Description,\n    thumbnail: fields.Thumbnail,\n    url: fields.URL,\n    transfer: fields.Transfer\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    return {\n      thumbnail: asset.thumbnail,\n      title: asset.name,\n      description: asset.description,\n      url: asset.url,\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => asset.transfer,\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: a => JSON.stringify(a)\n};","map":{"version":3,"sources":["../../../../src/schemas/rinkeby/rinkebyCustom/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAca,OAAA,CAAA,mBAAA,GAAiD;EAC5D,OAAO,EAAE,CADmD;EAE5D,eAAe,EAAE,CAF2C;EAG5D,IAAI,EAAE,eAHsD;EAI5D,WAAW,EAAE,2CAJ+C;EAK5D,SAAS,EAAE,yDALiD;EAM5D,OAAO,EAAE,iDANmD;EAO5D,MAAM,EAAE,CACN;IAAC,IAAI,EAAE,MAAP;IAAe,IAAI,EAAE,QAArB;IAA+B,WAAW,EAAE;EAA5C,CADM,EAEN;IAAC,IAAI,EAAE,aAAP;IAAsB,IAAI,EAAE,QAA5B;IAAsC,WAAW,EAAE;EAAnD,CAFM,EAGN;IAAC,IAAI,EAAE,WAAP;IAAoB,IAAI,EAAE,QAA1B;IAAoC,WAAW,EAAE;EAAjD,CAHM,EAIN;IAAC,IAAI,EAAE,KAAP;IAAc,IAAI,EAAE,QAApB;IAA8B,WAAW,EAAE;EAA3C,CAJM,EAKN;IAAC,IAAI,EAAE,UAAP;IAAmB,IAAI,EAAE,KAAzB;IAAgC,WAAW,EAAE;EAA7C,CALM,CAPoD;EAc5D,eAAe,EAAG,MAAD,KAAkB;IACjC,IAAI,EAAE,MAAM,CAAC,IADoB;IAEjC,WAAW,EAAE,MAAM,CAAC,WAFa;IAGjC,SAAS,EAAE,MAAM,CAAC,SAHe;IAIjC,GAAG,EAAE,MAAM,CAAC,GAJqB;IAKjC,QAAQ,EAAE,MAAM,CAAC;EALgB,CAAlB,CAd2C;EAqB5D,SAAS,EACD,KAAN,IAAc,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;IACZ,OAAO;MACL,SAAS,EAAE,KAAK,CAAC,SADZ;MAEL,KAAK,EAAE,KAAK,CAAC,IAFR;MAGL,WAAW,EAAE,KAAK,CAAC,WAHd;MAIL,GAAG,EAAE,KAAK,CAAC,GAJN;MAKL,UAAU,EAAE;IALP,CAAP;EAOH,CARe,CAtB4C;EA+B5D,SAAS,EAAE;IACT,QAAQ,EAAE,KAAK,IAAI,KAAK,CAAC,QADhB;IAET,oBAAoB,EAAE;EAFb,CA/BiD;EAmC5D,MAAM,EAAE;IACN,QAAQ,EAAE;EADJ,CAnCoD;EAsC5D,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,SAAL,CAAe,CAAf;AAtCiD,CAAjD","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rinkebyCustomSchema = {\r\n    version: 1,\r\n    deploymentBlock: 0,\r\n    name: 'RinkebyCustom',\r\n    description: 'Rinkeby Custom (manual ABI specification)',\r\n    thumbnail: 'https://d30y9cdsu7xlg0.cloudfront.net/png/45447-200.png',\r\n    website: 'https://github.com/projectwyvern/wyvern-schemas',\r\n    fields: [\r\n        { name: 'Name', type: 'string', description: 'Name of Asset' },\r\n        { name: 'Description', type: 'string', description: 'Description of Asset' },\r\n        { name: 'Thumbnail', type: 'string', description: 'URL of asset thumbnail image' },\r\n        { name: 'URL', type: 'string', description: 'URL of asset' },\r\n        { name: 'Transfer', type: 'abi', description: 'ABI of transfer function' },\r\n    ],\r\n    assetFromFields: (fields) => ({\r\n        name: fields.Name,\r\n        description: fields.Description,\r\n        thumbnail: fields.Thumbnail,\r\n        url: fields.URL,\r\n        transfer: fields.Transfer,\r\n    }),\r\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\r\n        return {\r\n            thumbnail: asset.thumbnail,\r\n            title: asset.name,\r\n            description: asset.description,\r\n            url: asset.url,\r\n            properties: [],\r\n        };\r\n    }),\r\n    functions: {\r\n        transfer: asset => asset.transfer,\r\n        assetsOfOwnerByIndex: [],\r\n    },\r\n    events: {\r\n        transfer: [],\r\n    },\r\n    hash: a => JSON.stringify(a),\r\n};\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../../types\");\n\nexports.rinkebyOwnableContractSchema = {\n  version: 1,\n  deploymentBlock: 0,\n  name: 'OwnableContract',\n  description: 'Rinkeby Ownable Smart Contract',\n  thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n  website: 'https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Ownable.sol',\n  fields: [{\n    name: 'Name',\n    type: 'string',\n    description: 'Contract Name'\n  }, {\n    name: 'Address',\n    type: 'address',\n    description: 'Contract Address'\n  }],\n  assetFromFields: fields => ({\n    name: fields.Name,\n    address: fields.Address\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    return {\n      thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\n      title: 'Ownable Contract: \"' + asset.name + '\"',\n      description: 'Ownable at address ' + asset.address,\n      url: 'https://rinkeby.etherscan.io/address/' + asset.address,\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'transferOwnership',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: 'newOwner',\n        type: 'address'\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'owner',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: asset.address,\n      inputs: [],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'owner',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: a => a.address\n};","map":{"version":3,"sources":["../../../../src/schemas/rinkeby/rinkebyOwnableContract/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAYa,OAAA,CAAA,4BAAA,GAAmE;EAC9E,OAAO,EAAE,CADqE;EAE9E,eAAe,EAAE,CAF6D;EAG9E,IAAI,EAAE,iBAHwE;EAI9E,WAAW,EAAE,gCAJiE;EAK9E,SAAS,EAAE,oHALmE;EAM9E,OAAO,EAAE,+FANqE;EAO9E,MAAM,EAAE,CACN;IAAC,IAAI,EAAE,MAAP;IAAe,IAAI,EAAE,QAArB;IAA+B,WAAW,EAAE;EAA5C,CADM,EAEN;IAAC,IAAI,EAAE,SAAP;IAAkB,IAAI,EAAE,SAAxB;IAAmC,WAAW,EAAE;EAAhD,CAFM,CAPsE;EAW9E,eAAe,EAAG,MAAD,KAAkB;IACjC,IAAI,EAAE,MAAM,CAAC,IADoB;IAEjC,OAAO,EAAE,MAAM,CAAC;EAFiB,CAAlB,CAX6D;EAe9E,SAAS,EACD,KAAN,IAAc,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;IACZ,OAAO;MACL,SAAS,EAAE,oHADN;MAEL,KAAK,EAAE,wBAAwB,KAAK,CAAC,IAA9B,GAAqC,GAFvC;MAGL,WAAW,EAAE,wBAAwB,KAAK,CAAC,OAHtC;MAIL,GAAG,EAAE,0CAA0C,KAAK,CAAC,OAJhD;MAKL,UAAU,EAAE;IALP,CAAP;EAOH,CARe,CAhB8D;EAyB9E,SAAS,EAAE;IACT,QAAQ,EAAE,KAAK,KAAK;MAClB,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADD;MAElB,IAAI,EAAE,mBAFY;MAGlB,OAAO,EAAE,KAHS;MAIlB,QAAQ,EAAE,KAJQ;MAKlB,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,UALf;MAMlB,MAAM,EAAE,KAAK,CAAC,OANI;MAOlB,MAAM,EAAE,CACN;QAAC,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,WAAzB;QAAsC,IAAI,EAAE,UAA5C;QAAwD,IAAI,EAAE;MAA9D,CADM,CAPU;MAUlB,OAAO,EAAE;IAVS,CAAL,CADN;IAaT,OAAO,EAAE,KAAK,KAAK;MACjB,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADF;MAEjB,IAAI,EAAE,OAFW;MAGjB,OAAO,EAAE,KAHQ;MAIjB,QAAQ,EAAE,IAJO;MAKjB,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,IALhB;MAMjB,MAAM,EAAE,KAAK,CAAC,OANG;MAOjB,MAAM,EAAE,EAPS;MAQjB,OAAO,EAAE,CACP;QAAC,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;QAAiC,IAAI,EAAE,OAAvC;QAAgD,IAAI,EAAE;MAAtD,CADO;IARQ,CAAL,CAbL;IAyBT,oBAAoB,EAAE;EAzBb,CAzBmE;EAoD9E,MAAM,EAAE;IACN,QAAQ,EAAE;EADJ,CApDsE;EAuD9E,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;AAvDiE,CAAnE","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Web3 = require(\"web3\");\r\nconst types_1 = require(\"../../../types\");\r\nexports.rinkebyOwnableContractSchema = {\r\n    version: 1,\r\n    deploymentBlock: 0,\r\n    name: 'OwnableContract',\r\n    description: 'Rinkeby Ownable Smart Contract',\r\n    thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\r\n    website: 'https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/ownership/Ownable.sol',\r\n    fields: [\r\n        { name: 'Name', type: 'string', description: 'Contract Name' },\r\n        { name: 'Address', type: 'address', description: 'Contract Address' },\r\n    ],\r\n    assetFromFields: (fields) => ({\r\n        name: fields.Name,\r\n        address: fields.Address,\r\n    }),\r\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\r\n        return {\r\n            thumbnail: 'https://i.redditmedia.com/NaFzmSbDX2T2RALMxy2tmGJN_gPVNH9lJggCKUDDqcc.jpg?w=320&s=3913239508209aaf6ba1188fe3d3b5fc',\r\n            title: 'Ownable Contract: \"' + asset.name + '\"',\r\n            description: 'Ownable at address ' + asset.address,\r\n            url: 'https://rinkeby.etherscan.io/address/' + asset.address,\r\n            properties: [],\r\n        };\r\n    }),\r\n    functions: {\r\n        transfer: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'transferOwnership',\r\n            payable: false,\r\n            constant: false,\r\n            stateMutability: types_1.StateMutability.Nonpayable,\r\n            target: asset.address,\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Replaceable, name: 'newOwner', type: 'address' },\r\n            ],\r\n            outputs: [],\r\n        }),\r\n        ownerOf: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'owner',\r\n            payable: false,\r\n            constant: true,\r\n            stateMutability: types_1.StateMutability.View,\r\n            target: asset.address,\r\n            inputs: [],\r\n            outputs: [\r\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\r\n            ],\r\n        }),\r\n        assetsOfOwnerByIndex: [],\r\n    },\r\n    events: {\r\n        transfer: [],\r\n    },\r\n    hash: a => a.address,\r\n};\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}
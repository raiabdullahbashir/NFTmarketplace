{"ast":null,"code":"import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\nexport const defaultState = {\n  blogPosts: initEntityState(null),\n  recentPosts: initEntityState(null),\n  tags: initEntityState(null),\n  comments: initEntityState(null)\n};\n\nconst states = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case getType(actions.getBlogPosts.request):\n      return { ...state,\n        blogPosts: entityLoadingStarted(state.blogPosts, action.payload)\n      };\n\n    case getType(actions.getBlogPosts.success):\n      return { ...state,\n        blogPosts: entityLoadingSucceeded(state.blogPosts, action.payload)\n      };\n\n    case getType(actions.getBlogPosts.failure):\n      return { ...state,\n        blogPosts: entityLoadingFailed(state.blogPosts)\n      };\n\n    case getType(actions.getRecentPosts.request):\n      return { ...state,\n        recentPosts: entityLoadingStarted(state.recentPosts, action.payload)\n      };\n\n    case getType(actions.getRecentPosts.success):\n      return { ...state,\n        recentPosts: entityLoadingSucceeded(state.recentPosts, action.payload)\n      };\n\n    case getType(actions.getRecentPosts.failure):\n      return { ...state,\n        recentPosts: entityLoadingFailed(state.recentPosts)\n      };\n\n    case getType(actions.getTags.request):\n      return { ...state,\n        tags: entityLoadingStarted(state.tags, action.payload)\n      };\n\n    case getType(actions.getTags.success):\n      return { ...state,\n        tags: entityLoadingSucceeded(state.tags, action.payload)\n      };\n\n    case getType(actions.getTags.failure):\n      return { ...state,\n        tags: entityLoadingFailed(state.tags)\n      };\n\n    case getType(actions.getComments.request):\n      return { ...state,\n        comments: entityLoadingStarted(state.comments, action.payload)\n      };\n\n    case getType(actions.getComments.success):\n      return { ...state,\n        comments: entityLoadingSucceeded(state.comments, action.payload)\n      };\n\n    case getType(actions.getComments.failure):\n      return { ...state,\n        comments: entityLoadingFailed(state.comments)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default states;","map":{"version":3,"names":["getType","actions","initEntityState","entityLoadingStarted","entityLoadingSucceeded","entityLoadingFailed","defaultState","blogPosts","recentPosts","tags","comments","states","state","action","type","getBlogPosts","request","payload","success","failure","getRecentPosts","getTags","getComments"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/src/store/reducers/blogs.js"],"sourcesContent":["import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  blogPosts: initEntityState(null),\n  recentPosts: initEntityState(null),\n  tags: initEntityState(null),\n  comments: initEntityState(null)\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getBlogPosts.request):\n      return { ...state, blogPosts: entityLoadingStarted(state.blogPosts, action.payload) };\n    case getType(actions.getBlogPosts.success):\n      return { ...state, blogPosts: entityLoadingSucceeded(state.blogPosts, action.payload) };\n    case getType(actions.getBlogPosts.failure):\n      return { ...state, blogPosts: entityLoadingFailed(state.blogPosts) };\n    \n    case getType(actions.getRecentPosts.request):\n      return { ...state, recentPosts: entityLoadingStarted(state.recentPosts, action.payload) };\n    case getType(actions.getRecentPosts.success):\n      return { ...state, recentPosts: entityLoadingSucceeded(state.recentPosts, action.payload) };\n    case getType(actions.getRecentPosts.failure):\n      return { ...state, recentPosts: entityLoadingFailed(state.recentPosts) };\n    \n    case getType(actions.getTags.request):\n      return { ...state, tags: entityLoadingStarted(state.tags, action.payload) };\n    case getType(actions.getTags.success):\n      return { ...state, tags: entityLoadingSucceeded(state.tags, action.payload) };\n    case getType(actions.getTags.failure):\n      return { ...state, tags: entityLoadingFailed(state.tags) };\n    \n    case getType(actions.getComments.request):\n      return { ...state, comments: entityLoadingStarted(state.comments, action.payload) };\n    case getType(actions.getComments.success):\n      return { ...state, comments: entityLoadingSucceeded(state.comments, action.payload) };\n    case getType(actions.getComments.failure):\n      return { ...state, comments: entityLoadingFailed(state.comments) };\n\n    default:\n      return state;\n  }\n};\n\nexport default states;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
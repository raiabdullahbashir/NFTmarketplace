{"ast":null,"code":"import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\nexport const fetchAuthorList = authorId => async dispatch => {\n  dispatch(actions.getAuthorList.request(Canceler.cancel));\n\n  try {\n    let filter = authorId ? 'id=' + authorId : '';\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.authors}?${filter}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getAuthorList.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorList.failure(err));\n  }\n};\nexport const fetchAuthorRanking = () => async dispatch => {\n  dispatch(actions.getAuthorRanking.request(Canceler.cancel));\n\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.authorsSales}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getAuthorRanking.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorRanking.failure(err));\n  }\n};","map":{"version":3,"names":["Axios","Canceler","actions","api","fetchAuthorList","authorId","dispatch","getAuthorList","request","cancel","filter","data","get","baseUrl","authors","cancelToken","token","params","success","err","failure","fetchAuthorRanking","getAuthorRanking","authorsSales"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/src/store/actions/thunks/authorList.js"],"sourcesContent":["import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\n\nexport const fetchAuthorList = (authorId) => async (dispatch) => {\n\n  dispatch(actions.getAuthorList.request(Canceler.cancel));\n\n  try {\n    let filter = authorId ? 'id='+authorId : '';\n    const { data } = await Axios.get(`${api.baseUrl}${api.authors}?${filter}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getAuthorList.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorList.failure(err));\n  }\n};\n\nexport const fetchAuthorRanking = () => async (dispatch) => {\n\n  dispatch(actions.getAuthorRanking.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.authorsSales}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getAuthorRanking.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorRanking.failure(err));\n  }\n};\n"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,qBAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;EAE/DA,QAAQ,CAACJ,OAAO,CAACK,aAAR,CAAsBC,OAAtB,CAA8BP,QAAQ,CAACQ,MAAvC,CAAD,CAAR;;EAEA,IAAI;IACF,IAAIC,MAAM,GAAGL,QAAQ,GAAG,QAAMA,QAAT,GAAoB,EAAzC;IACA,MAAM;MAAEM;IAAF,IAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAET,GAAG,CAACU,OAAQ,GAAEV,GAAG,CAACW,OAAQ,IAAGJ,MAAO,EAAjD,EAAoD;MACzEK,WAAW,EAAEd,QAAQ,CAACe,KADmD;MAEzEC,MAAM,EAAE;IAFiE,CAApD,CAAvB;IAKAX,QAAQ,CAACJ,OAAO,CAACK,aAAR,CAAsBW,OAAtB,CAA8BP,IAA9B,CAAD,CAAR;EACD,CARD,CAQE,OAAOQ,GAAP,EAAY;IACZb,QAAQ,CAACJ,OAAO,CAACK,aAAR,CAAsBa,OAAtB,CAA8BD,GAA9B,CAAD,CAAR;EACD;AACF,CAfM;AAiBP,OAAO,MAAME,kBAAkB,GAAG,MAAM,MAAOf,QAAP,IAAoB;EAE1DA,QAAQ,CAACJ,OAAO,CAACoB,gBAAR,CAAyBd,OAAzB,CAAiCP,QAAQ,CAACQ,MAA1C,CAAD,CAAR;;EAEA,IAAI;IACF,MAAM;MAAEE;IAAF,IAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAET,GAAG,CAACU,OAAQ,GAAEV,GAAG,CAACoB,YAAa,EAA5C,EAA+C;MACpER,WAAW,EAAEd,QAAQ,CAACe,KAD8C;MAEpEC,MAAM,EAAE;IAF4D,CAA/C,CAAvB;IAKAX,QAAQ,CAACJ,OAAO,CAACoB,gBAAR,CAAyBJ,OAAzB,CAAiCP,IAAjC,CAAD,CAAR;EACD,CAPD,CAOE,OAAOQ,GAAP,EAAY;IACZb,QAAQ,CAACJ,OAAO,CAACoB,gBAAR,CAAyBF,OAAzB,CAAiCD,GAAjC,CAAD,CAAR;EACD;AACF,CAdM"},"metadata":{},"sourceType":"module"}
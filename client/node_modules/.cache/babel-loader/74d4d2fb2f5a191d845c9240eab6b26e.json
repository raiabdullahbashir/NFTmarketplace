{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiab\\\\Documents\\\\Logics Yard\\\\NFT code daniyal\\\\NFT code\\\\src\\\\components\\\\components\\\\ColumnNewMint.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as selectors from '../../store/selectors';\nimport * as actions from '../../store/actions/thunks';\nimport { clearNfts, clearFilter } from '../../store/actions';\nimport NftMintCard from './NftMintCard';\nimport { shuffleArray } from '../../store/utils'; //react functional component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColumnNewRedux = _ref => {\n  _s();\n\n  let {\n    showLoadMore = true,\n    shuffle = false,\n    authorId = null,\n    onSelectNft\n  } = _ref;\n  const dispatch = useDispatch();\n  const nftItems = useSelector(selectors.nftItems);\n  const nfts = nftItems ? shuffle ? shuffleArray(nftItems) : nftItems : [];\n  const [height, setHeight] = useState(0);\n\n  const onImgLoad = _ref2 => {\n    let {\n      target: img\n    } = _ref2;\n    let currentHeight = height;\n\n    if (currentHeight < img.offsetHeight) {\n      setHeight(img.offsetHeight);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(actions.fetchNftsBreakdown(authorId));\n  }, [dispatch, authorId]); //will run when component unmounted\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearFilter());\n      dispatch(clearNfts());\n    };\n  }, [dispatch]);\n\n  const loadMore = () => {\n    dispatch(actions.fetchNftsBreakdown(authorId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [nfts && nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(NftMintCard, {\n      nft: nft,\n      onImgLoad: onImgLoad,\n      height: height,\n      onSelectNft: onSelectNft\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)), showLoadMore && nfts.length <= 20 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer-single\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: loadMore,\n        className: \"btn-main lead m-auto\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ColumnNewRedux, \"NL/NF/+kNKso3HKw64Vj35B4aYI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ColumnNewRedux;\nexport default _c2 = /*#__PURE__*/memo(ColumnNewRedux);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColumnNewRedux\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useEffect","useState","useSelector","useDispatch","selectors","actions","clearNfts","clearFilter","NftMintCard","shuffleArray","ColumnNewRedux","showLoadMore","shuffle","authorId","onSelectNft","dispatch","nftItems","nfts","height","setHeight","onImgLoad","target","img","currentHeight","offsetHeight","fetchNftsBreakdown","loadMore","map","nft","index","length"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/src/components/components/ColumnNewMint.js"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as selectors from '../../store/selectors';\nimport * as actions from '../../store/actions/thunks';\nimport { clearNfts, clearFilter } from '../../store/actions';\nimport NftMintCard from './NftMintCard';\nimport { shuffleArray } from '../../store/utils';\n\n//react functional component\nconst ColumnNewRedux = ({ showLoadMore = true, shuffle = false, authorId = null, onSelectNft }) => {\n\n    const dispatch = useDispatch();\n    const nftItems = useSelector(selectors.nftItems);\n    const nfts = nftItems ? shuffle ? shuffleArray(nftItems) : nftItems : [];\n    const [height, setHeight] = useState(0);\n\n    const onImgLoad = ({target:img}) => {\n        let currentHeight = height;\n        if(currentHeight < img.offsetHeight) {\n            setHeight(img.offsetHeight);\n        }\n    }\n    \n    useEffect(() => {\n        dispatch(actions.fetchNftsBreakdown(authorId));\n    }, [dispatch, authorId]);\n\n    //will run when component unmounted\n    useEffect(() => {\n        return () => {\n            dispatch(clearFilter());\n            dispatch(clearNfts());\n        }\n    },[dispatch]);\n\n    const loadMore = () => {\n        dispatch(actions.fetchNftsBreakdown(authorId));\n    }\n\n    return (\n        <div className='row'>\n            {nfts && nfts.map( (nft, index) => (\n                <NftMintCard nft={nft} key={index} onImgLoad={onImgLoad} height={height} onSelectNft={onSelectNft} />\n            ))}\n            { showLoadMore && nfts.length <= 20 &&\n                <div className='col-lg-12'>\n                    <div className=\"spacer-single\"></div>\n                    <span onClick={loadMore} className=\"btn-main lead m-auto\">Load More</span>\n                </div>\n            }\n        </div>              \n    );\n};\n\nexport default memo(ColumnNewRedux);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,qBAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,mBAA7B,C,CAEA;;;;AACA,MAAMC,cAAc,GAAG,QAA4E;EAAA;;EAAA,IAA3E;IAAEC,YAAY,GAAG,IAAjB;IAAuBC,OAAO,GAAG,KAAjC;IAAwCC,QAAQ,GAAG,IAAnD;IAAyDC;EAAzD,CAA2E;EAE/F,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAMa,QAAQ,GAAGd,WAAW,CAACE,SAAS,CAACY,QAAX,CAA5B;EACA,MAAMC,IAAI,GAAGD,QAAQ,GAAGJ,OAAO,GAAGH,YAAY,CAACO,QAAD,CAAf,GAA4BA,QAAtC,GAAiD,EAAtE;EACA,MAAM,CAACE,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC;;EAEA,MAAMmB,SAAS,GAAG,SAAkB;IAAA,IAAjB;MAACC,MAAM,EAACC;IAAR,CAAiB;IAChC,IAAIC,aAAa,GAAGL,MAApB;;IACA,IAAGK,aAAa,GAAGD,GAAG,CAACE,YAAvB,EAAqC;MACjCL,SAAS,CAACG,GAAG,CAACE,YAAL,CAAT;IACH;EACJ,CALD;;EAOAxB,SAAS,CAAC,MAAM;IACZe,QAAQ,CAACV,OAAO,CAACoB,kBAAR,CAA2BZ,QAA3B,CAAD,CAAR;EACH,CAFQ,EAEN,CAACE,QAAD,EAAWF,QAAX,CAFM,CAAT,CAd+F,CAkB/F;;EACAb,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACTe,QAAQ,CAACR,WAAW,EAAZ,CAAR;MACAQ,QAAQ,CAACT,SAAS,EAAV,CAAR;IACH,CAHD;EAIH,CALQ,EAKP,CAACS,QAAD,CALO,CAAT;;EAOA,MAAMW,QAAQ,GAAG,MAAM;IACnBX,QAAQ,CAACV,OAAO,CAACoB,kBAAR,CAA2BZ,QAA3B,CAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,WACKI,IAAI,IAAIA,IAAI,CAACU,GAAL,CAAU,CAACC,GAAD,EAAMC,KAAN,kBACf,QAAC,WAAD;MAAa,GAAG,EAAED,GAAlB;MAAmC,SAAS,EAAER,SAA9C;MAAyD,MAAM,EAAEF,MAAjE;MAAyE,WAAW,EAAEJ;IAAtF,GAA4Be,KAA5B;MAAA;MAAA;MAAA;IAAA,QADK,CADb,EAIMlB,YAAY,IAAIM,IAAI,CAACa,MAAL,IAAe,EAA/B,iBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAM,OAAO,EAAEJ,QAAf;QAAyB,SAAS,EAAC,sBAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CA3CD;;GAAMhB,c;UAEeP,W,EACAD,W;;;KAHfQ,c;AA6CN,kCAAeX,IAAI,CAACW,cAAD,CAAnB"},"metadata":{},"sourceType":"module"}
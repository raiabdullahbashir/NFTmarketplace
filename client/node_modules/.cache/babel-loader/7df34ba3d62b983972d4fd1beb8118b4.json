{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiab\\\\Documents\\\\Logics Yard\\\\NFT code daniyal\\\\NFT code\\\\client\\\\src\\\\components\\\\components\\\\ItemsOnSell.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as selectors from '../../store/selectors';\nimport * as actions from '../../store/actions/thunks';\nimport { clearNfts, clearFilter } from '../../store/actions';\nimport NftCard from './NftCard';\nimport { shuffleArray } from '../../store/utils';\nimport { ethers } from \"ethers\";\nimport { Buffer } from 'buffer';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 8px;\n`; //react functional component\n\n_c = Outer;\n\nconst ItemsOnSell = _ref => {\n  _s();\n\n  let {\n    marketplace,\n    nft\n  } = _ref;\n  // const dispatch = useDispatch();\n  // const nftItems = useSelector(selectors.nftItems);\n  // const [height, setHeight] = useState(0);\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const loadMarketplaceItems = async () => {\n    // Load all unsold items\n    const itemCount = await marketplace.itemCount();\n    let items = [];\n\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i);\n      console.log(item.tokenId);\n\n      if (!item.sold) {\n        // get uri url from nft contract\n        const uri = await nft.tokenURI(item.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n        const response = await fetch(uri);\n        const metadata = await response.json(); // get total price of item (item price + fee)\n\n        const totalPrice = await marketplace.getTotalPrice(item.itemId); // Add item to items array\n\n        const img = new Buffer.from(metadata.image.buffer).toString(\"base64\");\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          image: img\n        });\n      }\n    }\n\n    setItems(items);\n    setLoading(false);\n  };\n\n  const buyMarketItem = async item => {\n    await (await marketplace.purchaseItem(item.itemId, {\n      value: item.totalPrice\n    })).wait();\n    loadMarketplaceItems();\n  };\n\n  useEffect(() => {\n    loadMarketplaceItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: '120px',\n        marginBottom: '120px'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: items.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft__item m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft__item_wrap\",\n            style: {\n              height: '16rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Outer, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    maxHeight: '14rem'\n                  },\n                  src: \"data:image/png;base64,\" + item.image,\n                  className: \"lazy nft__item_preview\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft__item_info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft__item_price\",\n              children: [ethers.utils.formatEther(item.totalPrice), \" ETH\", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => buyMarketItem(item),\n                children: \"Buy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft__item_like\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-heart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemsOnSell, \"X0A+44AtCQpjgFsTFhgdow3TGVs=\");\n\n_c2 = ItemsOnSell;\nexport default ItemsOnSell;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Outer\");\n$RefreshReg$(_c2, \"ItemsOnSell\");","map":{"version":3,"names":["React","memo","useEffect","useState","useSelector","useDispatch","selectors","actions","clearNfts","clearFilter","NftCard","shuffleArray","ethers","Buffer","styled","Outer","div","ItemsOnSell","marketplace","nft","items","setItems","loading","setLoading","loadMarketplaceItems","itemCount","i","item","console","log","tokenId","sold","uri","tokenURI","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","img","from","image","buffer","toString","push","seller","name","description","buyMarketItem","purchaseItem","value","wait","padding","marginTop","marginBottom","length","map","idx","height","maxHeight","utils","formatEther"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/src/components/components/ItemsOnSell.js"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../../store/selectors';\r\nimport * as actions from '../../store/actions/thunks';\r\nimport { clearNfts, clearFilter } from '../../store/actions';\r\nimport NftCard from './NftCard';\r\nimport { shuffleArray } from '../../store/utils';\r\nimport { ethers } from \"ethers\"\r\nimport { Buffer } from 'buffer';\r\nimport styled from \"styled-components\";\r\n\r\nconst Outer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n`;\r\n//react functional component\r\nconst ItemsOnSell = ({ marketplace, nft }) => {\r\n\r\n  // const dispatch = useDispatch();\r\n  // const nftItems = useSelector(selectors.nftItems);\r\n  // const [height, setHeight] = useState(0);\r\n\r\n  const [items, setItems] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const loadMarketplaceItems = async () => {\r\n    // Load all unsold items\r\n    const itemCount = await marketplace.itemCount()\r\n    \r\n    let items = []\r\n    for (let i = 1; i <= itemCount; i++) {\r\n      const item = await marketplace.items(i)\r\n     console.log(item.tokenId) \r\n      if (!item.sold) {\r\n        // get uri url from nft contract\r\n        const uri = await nft.tokenURI(item.tokenId)\r\n        // use uri to fetch the nft metadata stored on ipfs \r\n        const response = await fetch(uri)\r\n        const metadata = await response.json()\r\n        // get total price of item (item price + fee)\r\n        const totalPrice = await marketplace.getTotalPrice(item.itemId)\r\n        // Add item to items array\r\n        const img = new Buffer.from(metadata.image.buffer).toString(\"base64\")\r\n        items.push({\r\n          totalPrice,\r\n          itemId: item.itemId,\r\n          seller: item.seller,\r\n          name: metadata.name,\r\n          description: metadata.description,\r\n          image: img\r\n        })\r\n      }\r\n    }\r\n\r\n    setItems(items)\r\n    setLoading(false)\r\n  }\r\n\r\n  const buyMarketItem = async (item) => {\r\n    await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\r\n    loadMarketplaceItems()\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    loadMarketplaceItems()\r\n  },[] );\r\n  if (loading) return (\r\n    <main style={{ padding: \"1rem 0\" }}>\r\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\r\n    </main>\r\n  )\r\n\r\n  return (\r\n    <div className='row'>\r\n      {items.length > 0 ?\r\n        <>\r\n          {items.map((item, idx) => (\r\n            <div key={idx} className='d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4'>\r\n              <div className=\"nft__item m-0\">\r\n\r\n                <div className=\"nft__item_wrap\" style={{ height: '16rem' }}>\r\n                  <Outer>\r\n                    <span>\r\n                      <img style={{maxHeight: '14rem'}} src={\"data:image/png;base64,\" + item.image} className=\"lazy nft__item_preview\" alt=\"\" />\r\n                    </span>\r\n                  </Outer>\r\n                </div>\r\n\r\n                <div className=\"nft__item_info\">\r\n                  <span >\r\n                    <h4>{item.name}</h4>\r\n                  </span>\r\n                  {\r\n                    <div className=\"nft__item_price\">\r\n                      {ethers.utils.formatEther(item.totalPrice)} ETH\r\n                      <span onClick={()=> buyMarketItem(item) }>Buy</span>\r\n\r\n                    </div>\r\n\r\n                  }\r\n\r\n                  <div className=\"nft__item_like\">\r\n                    <i className=\"fa fa-heart\"></i><span>50</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </>\r\n        : (<div></div>)\r\n\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemsOnSell;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
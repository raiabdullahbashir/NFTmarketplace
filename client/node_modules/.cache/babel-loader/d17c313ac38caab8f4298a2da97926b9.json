{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file event.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\nvar utils = require('../utils/utils');\n\nvar coder = require('../solidity/coder');\n\nvar formatters = require('./formatters');\n\nvar sha3 = require('../utils/sha3');\n\nvar Filter = require('./filter');\n\nvar watches = require('./methods/watches');\n/**\n * This prototype should be used to create event filters\n */\n\n\nvar SolidityEvent = function (requestManager, json, address) {\n  this._requestManager = requestManager;\n  this._params = json.inputs;\n  this._name = utils.transformToFullName(json);\n  this._address = address;\n  this._anonymous = json.anonymous;\n};\n/**\n * Should be used to get filtered param types\n *\n * @method types\n * @param {Bool} decide if returned typed should be indexed\n * @return {Array} array of types\n */\n\n\nSolidityEvent.prototype.types = function (indexed) {\n  return this._params.filter(function (i) {\n    return i.indexed === indexed;\n  }).map(function (i) {\n    return i.type;\n  });\n};\n/**\n * Should be used to get event display name\n *\n * @method displayName\n * @return {String} event display name\n */\n\n\nSolidityEvent.prototype.displayName = function () {\n  return utils.extractDisplayName(this._name);\n};\n/**\n * Should be used to get event type name\n *\n * @method typeName\n * @return {String} event type name\n */\n\n\nSolidityEvent.prototype.typeName = function () {\n  return utils.extractTypeName(this._name);\n};\n/**\n * Should be used to get event signature\n *\n * @method signature\n * @return {String} event signature\n */\n\n\nSolidityEvent.prototype.signature = function () {\n  return sha3(this._name);\n};\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method encode\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\n\n\nSolidityEvent.prototype.encode = function (indexed, options) {\n  indexed = indexed || {};\n  options = options || {};\n  var result = {};\n  ['fromBlock', 'toBlock'].filter(function (f) {\n    return options[f] !== undefined;\n  }).forEach(function (f) {\n    result[f] = formatters.inputBlockNumberFormatter(options[f]);\n  });\n  result.topics = [];\n  result.address = this._address;\n\n  if (!this._anonymous) {\n    result.topics.push('0x' + this.signature());\n  }\n\n  var indexedTopics = this._params.filter(function (i) {\n    return i.indexed === true;\n  }).map(function (i) {\n    var value = indexed[i.name];\n\n    if (value === undefined || value === null) {\n      return null;\n    }\n\n    if (utils.isArray(value)) {\n      return value.map(function (v) {\n        return '0x' + coder.encodeParam(i.type, v);\n      });\n    }\n\n    return '0x' + coder.encodeParam(i.type, value);\n  });\n\n  result.topics = result.topics.concat(indexedTopics);\n  return result;\n};\n/**\n * Should be used to decode indexed params and options\n *\n * @method decode\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\n\n\nSolidityEvent.prototype.decode = function (data) {\n  data.data = data.data || '';\n  data.topics = data.topics || [];\n  var argTopics = this._anonymous ? data.topics : data.topics.slice(1);\n  var indexedData = argTopics.map(function (topics) {\n    return topics.slice(2);\n  }).join(\"\");\n  var indexedParams = coder.decodeParams(this.types(true), indexedData);\n  var notIndexedData = data.data.slice(2);\n  var notIndexedParams = coder.decodeParams(this.types(false), notIndexedData);\n  var result = formatters.outputLogFormatter(data);\n  result.event = this.displayName();\n  result.address = data.address;\n  result.args = this._params.reduce(function (acc, current) {\n    acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();\n    return acc;\n  }, {});\n  delete result.data;\n  delete result.topics;\n  return result;\n};\n/**\n * Should be used to create new filter object from event\n *\n * @method execute\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} filter object\n */\n\n\nSolidityEvent.prototype.execute = function (indexed, options, callback) {\n  if (utils.isFunction(arguments[arguments.length - 1])) {\n    callback = arguments[arguments.length - 1];\n    if (arguments.length === 2) options = null;\n\n    if (arguments.length === 1) {\n      options = null;\n      indexed = {};\n    }\n  }\n\n  var o = this.encode(indexed, options);\n  var formatter = this.decode.bind(this);\n  return new Filter(o, 'eth', this._requestManager, watches.eth(), formatter, callback);\n};\n/**\n * Should be used to attach event to contract object\n *\n * @method attachToContract\n * @param {Contract}\n */\n\n\nSolidityEvent.prototype.attachToContract = function (contract) {\n  var execute = this.execute.bind(this);\n  var displayName = this.displayName();\n\n  if (!contract[displayName]) {\n    contract[displayName] = execute;\n  }\n\n  contract[displayName][this.typeName()] = this.execute.bind(this, contract);\n};\n\nmodule.exports = SolidityEvent;","map":{"version":3,"names":["utils","require","coder","formatters","sha3","Filter","watches","SolidityEvent","requestManager","json","address","_requestManager","_params","inputs","_name","transformToFullName","_address","_anonymous","anonymous","prototype","types","indexed","filter","i","map","type","displayName","extractDisplayName","typeName","extractTypeName","signature","encode","options","result","f","undefined","forEach","inputBlockNumberFormatter","topics","push","indexedTopics","value","name","isArray","v","encodeParam","concat","decode","data","argTopics","slice","indexedData","join","indexedParams","decodeParams","notIndexedData","notIndexedParams","outputLogFormatter","event","args","reduce","acc","current","shift","execute","callback","isFunction","arguments","length","o","formatter","bind","eth","attachToContract","contract","module","exports"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/node_modules/@0xproject/assert/node_modules/web3/lib/web3/event.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file event.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\n\nvar utils = require('../utils/utils');\nvar coder = require('../solidity/coder');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\nvar Filter = require('./filter');\nvar watches = require('./methods/watches');\n\n/**\n * This prototype should be used to create event filters\n */\nvar SolidityEvent = function (requestManager, json, address) {\n    this._requestManager = requestManager;\n    this._params = json.inputs;\n    this._name = utils.transformToFullName(json);\n    this._address = address;\n    this._anonymous = json.anonymous;\n};\n\n/**\n * Should be used to get filtered param types\n *\n * @method types\n * @param {Bool} decide if returned typed should be indexed\n * @return {Array} array of types\n */\nSolidityEvent.prototype.types = function (indexed) {\n    return this._params.filter(function (i) {\n        return i.indexed === indexed;\n    }).map(function (i) {\n        return i.type;\n    });\n};\n\n/**\n * Should be used to get event display name\n *\n * @method displayName\n * @return {String} event display name\n */\nSolidityEvent.prototype.displayName = function () {\n    return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get event type name\n *\n * @method typeName\n * @return {String} event type name\n */\nSolidityEvent.prototype.typeName = function () {\n    return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be used to get event signature\n *\n * @method signature\n * @return {String} event signature\n */\nSolidityEvent.prototype.signature = function () {\n    return sha3(this._name);\n};\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method encode\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nSolidityEvent.prototype.encode = function (indexed, options) {\n    indexed = indexed || {};\n    options = options || {};\n    var result = {};\n\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n\n    result.topics = [];\n\n    result.address = this._address;\n    if (!this._anonymous) {\n        result.topics.push('0x' + this.signature());\n    }\n\n    var indexedTopics = this._params.filter(function (i) {\n        return i.indexed === true;\n    }).map(function (i) {\n        var value = indexed[i.name];\n        if (value === undefined || value === null) {\n            return null;\n        }\n\n        if (utils.isArray(value)) {\n            return value.map(function (v) {\n                return '0x' + coder.encodeParam(i.type, v);\n            });\n        }\n        return '0x' + coder.encodeParam(i.type, value);\n    });\n\n    result.topics = result.topics.concat(indexedTopics);\n\n    return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method decode\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nSolidityEvent.prototype.decode = function (data) {\n\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n\n\n    var argTopics = this._anonymous ? data.topics : data.topics.slice(1);\n    var indexedData = argTopics.map(function (topics) { return topics.slice(2); }).join(\"\");\n    var indexedParams = coder.decodeParams(this.types(true), indexedData);\n\n    var notIndexedData = data.data.slice(2);\n    var notIndexedParams = coder.decodeParams(this.types(false), notIndexedData);\n\n    var result = formatters.outputLogFormatter(data);\n    result.event = this.displayName();\n    result.address = data.address;\n\n    result.args = this._params.reduce(function (acc, current) {\n        acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();\n        return acc;\n    }, {});\n\n    delete result.data;\n    delete result.topics;\n\n    return result;\n};\n\n/**\n * Should be used to create new filter object from event\n *\n * @method execute\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} filter object\n */\nSolidityEvent.prototype.execute = function (indexed, options, callback) {\n\n    if (utils.isFunction(arguments[arguments.length - 1])) {\n        callback = arguments[arguments.length - 1];\n        if(arguments.length === 2)\n            options = null;\n        if(arguments.length === 1) {\n            options = null;\n            indexed = {};\n        }\n    }\n\n    var o = this.encode(indexed, options);\n    var formatter = this.decode.bind(this);\n    return new Filter(o, 'eth', this._requestManager, watches.eth(), formatter, callback);\n};\n\n/**\n * Should be used to attach event to contract object\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityEvent.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    var displayName = this.displayName();\n    if (!contract[displayName]) {\n        contract[displayName] = execute;\n    }\n    contract[displayName][this.typeName()] = this.execute.bind(this, contract);\n};\n\nmodule.exports = SolidityEvent;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../../types\");\n\nconst ERC1155_1 = require(\"../../ERC1155\");\n\nexports.EnjinItemSchema = Object.assign({}, ERC1155_1.ERC1155Schema, {\n  version: 1,\n  deploymentBlock: 0,\n  name: 'Enjin',\n  description: 'Items conforming to the Enjin implementation of the ERC1155 spec.',\n  website: 'https://enjincoin.io/',\n  functions: Object.assign({}, ERC1155_1.ERC1155Schema.functions, {\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'ownerOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_id',\n        type: 'uint256',\n        value: asset.id\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'owner',\n        type: 'address'\n      }]\n    }),\n    // Parameters are flipped from 1155\n    countOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'balanceOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_id',\n        type: 'uint256',\n        value: asset.id\n      }, {\n        kind: types_1.FunctionInputKind.Owner,\n        name: '_owner',\n        type: 'address'\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Count,\n        name: 'balance',\n        type: 'uint'\n      }],\n      assetFromOutputs: outputs => outputs.balance\n    }),\n    assetsOfOwnerByIndex: []\n  })\n});","map":{"version":3,"sources":["../../../../src/schemas/main/EnjinItem/index.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAMA,MAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEa,OAAA,CAAA,eAAA,GAAe,MAAA,CAAA,MAAA,CAAA,EAAA,EACvB,SAAA,CAAA,aADuB,EACV;EAChB,OAAO,EAAE,CADO;EAEhB,eAAe,EAAE,CAFD;EAGhB,IAAI,EAAE,OAHU;EAIhB,WAAW,EAAE,mEAJG;EAKhB,OAAO,EAAE,uBALO;EAMhB,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACJ,SAAA,CAAA,aAAA,CAAc,SADV,EACmB;IAC1B,OAAO,EAAE,KAAK,KAAK;MACjB,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADF;MAEjB,IAAI,EAAE,SAFW;MAGjB,OAAO,EAAE,KAHQ;MAIjB,QAAQ,EAAE,IAJO;MAKjB,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,IALhB;MAMjB,MAAM,EAAE,KAAK,CAAC,OANG;MAOjB,MAAM,EAAE,CACN;QAAC,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KAAzB;QAAgC,IAAI,EAAE,KAAtC;QAA6C,IAAI,EAAE,SAAnD;QAA8D,KAAK,EAAE,KAAK,CAAC;MAA3E,CADM,CAPS;MAUjB,OAAO,EAAE,CACP;QAAC,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;QAAiC,IAAI,EAAE,OAAvC;QAAgD,IAAI,EAAE;MAAtD,CADO;IAVQ,CAAL,CADY;IAe1B;IACA,OAAO,EAAE,KAAK,KAAK;MACjB,IAAI,EAAE,IAAI,CAAC,OAAL,CAAa,QADF;MAEjB,IAAI,EAAE,WAFW;MAGjB,OAAO,EAAE,KAHQ;MAIjB,QAAQ,EAAE,IAJO;MAKjB,eAAe,EAAE,OAAA,CAAA,eAAA,CAAgB,IALhB;MAMjB,MAAM,EAAE,KAAK,CAAC,OANG;MAOjB,MAAM,EAAE,CACN;QAAC,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KAAzB;QAAgC,IAAI,EAAE,KAAtC;QAA6C,IAAI,EAAE,SAAnD;QAA8D,KAAK,EAAE,KAAK,CAAC;MAA3E,CADM,EAEN;QAAC,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KAAzB;QAAgC,IAAI,EAAE,QAAtC;QAAgD,IAAI,EAAE;MAAtD,CAFM,CAPS;MAWjB,OAAO,EAAE,CACP;QAAC,IAAI,EAAE,OAAA,CAAA,kBAAA,CAAmB,KAA1B;QAAiC,IAAI,EAAE,SAAvC;QAAkD,IAAI,EAAE;MAAxD,CADO,CAXQ;MAcjB,gBAAgB,EAAG,OAAD,IAAkB,OAAO,CAAC;IAd3B,CAAL,CAhBY;IAgC1B,oBAAoB,EAAE;EAhCI,CADnB;AANO,CADU,CAAf","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Web3 = require(\"web3\");\r\nconst types_1 = require(\"../../../types\");\r\nconst ERC1155_1 = require(\"../../ERC1155\");\r\nexports.EnjinItemSchema = Object.assign({}, ERC1155_1.ERC1155Schema, { version: 1, deploymentBlock: 0, name: 'Enjin', description: 'Items conforming to the Enjin implementation of the ERC1155 spec.', website: 'https://enjincoin.io/', functions: Object.assign({}, ERC1155_1.ERC1155Schema.functions, { ownerOf: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'ownerOf',\r\n            payable: false,\r\n            constant: true,\r\n            stateMutability: types_1.StateMutability.View,\r\n            target: asset.address,\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_id', type: 'uint256', value: asset.id },\r\n            ],\r\n            outputs: [\r\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\r\n            ],\r\n        }), \r\n        // Parameters are flipped from 1155\r\n        countOf: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'balanceOf',\r\n            payable: false,\r\n            constant: true,\r\n            stateMutability: types_1.StateMutability.View,\r\n            target: asset.address,\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_id', type: 'uint256', value: asset.id },\r\n                { kind: types_1.FunctionInputKind.Owner, name: '_owner', type: 'address' },\r\n            ],\r\n            outputs: [\r\n                { kind: types_1.FunctionOutputKind.Count, name: 'balance', type: 'uint' },\r\n            ],\r\n            assetFromOutputs: (outputs) => outputs.balance,\r\n        }), assetsOfOwnerByIndex: [] }) });\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}
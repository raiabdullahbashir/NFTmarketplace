{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../types\");\n\nexports.ERC721Schema = {\n  version: 2,\n  deploymentBlock: 0,\n  name: 'ERC721',\n  description: 'Items conforming to the ERC721 spec, using transferFrom.',\n  thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\n  website: 'http://erc721.org/',\n  fields: [{\n    name: 'ID',\n    type: 'uint256',\n    description: 'Asset Token ID'\n  }, {\n    name: 'Address',\n    type: 'address',\n    description: 'Asset Contract Address'\n  }],\n  assetFromFields: fields => ({\n    id: fields.ID,\n    address: fields.Address\n  }),\n  assetToFields: asset => ({\n    ID: asset.id,\n    Address: asset.address\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    return {\n      title: 'ERC721 Asset: Token ID ' + asset.id + ' at ' + asset.address,\n      description: '',\n      url: '',\n      thumbnail: '',\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'transferFrom',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Owner,\n        name: '_from',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: '_to',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset.id\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'ownerOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset.id\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'owner',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: asset => asset.address + '-' + asset.id\n};\nexports.ERC721v3Schema = {\n  version: 3,\n  deploymentBlock: 0,\n  name: 'ERC721v3',\n  description: 'Items conforming to the ERC721 v3 spec, using safeTransferFrom.',\n  thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\n  website: 'http://erc721.org/',\n  fields: [{\n    name: 'ID',\n    type: 'uint256',\n    description: 'Asset Token ID'\n  }, {\n    name: 'Address',\n    type: 'address',\n    description: 'Asset Contract Address'\n  }],\n  assetFromFields: fields => ({\n    id: fields.ID,\n    address: fields.Address\n  }),\n  assetToFields: asset => ({\n    ID: asset.id,\n    Address: asset.address\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    return {\n      title: 'ERC721 Asset: Token ID ' + asset.id + ' at ' + asset.address,\n      description: '',\n      url: '',\n      thumbnail: '',\n      properties: []\n    };\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'safeTransferFrom',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Owner,\n        name: '_from',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: '_to',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset.id\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'ownerOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: asset.address,\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset.id\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'owner',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: asset => asset.address + '-' + asset.id\n};","map":{"version":3,"sources":["../../../src/schemas/ERC721/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Web3 = require(\"web3\");\r\nconst types_1 = require(\"../../types\");\r\nexports.ERC721Schema = {\r\n    version: 2,\r\n    deploymentBlock: 0,\r\n    name: 'ERC721',\r\n    description: 'Items conforming to the ERC721 spec, using transferFrom.',\r\n    thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\r\n    website: 'http://erc721.org/',\r\n    fields: [\r\n        { name: 'ID', type: 'uint256', description: 'Asset Token ID' },\r\n        { name: 'Address', type: 'address', description: 'Asset Contract Address' },\r\n    ],\r\n    assetFromFields: (fields) => ({\r\n        id: fields.ID,\r\n        address: fields.Address,\r\n    }),\r\n    assetToFields: asset => ({\r\n        ID: asset.id,\r\n        Address: asset.address,\r\n    }),\r\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\r\n        return {\r\n            title: 'ERC721 Asset: Token ID ' + asset.id + ' at ' + asset.address,\r\n            description: '',\r\n            url: '',\r\n            thumbnail: '',\r\n            properties: [],\r\n        };\r\n    }),\r\n    functions: {\r\n        transfer: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'transferFrom',\r\n            payable: false,\r\n            constant: false,\r\n            stateMutability: types_1.StateMutability.Nonpayable,\r\n            target: asset.address,\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\r\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\r\n            ],\r\n            outputs: [],\r\n        }),\r\n        ownerOf: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'ownerOf',\r\n            payable: false,\r\n            constant: true,\r\n            stateMutability: types_1.StateMutability.View,\r\n            target: asset.address,\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\r\n            ],\r\n            outputs: [\r\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\r\n            ],\r\n        }),\r\n        assetsOfOwnerByIndex: [],\r\n    },\r\n    events: {\r\n        transfer: [],\r\n    },\r\n    hash: asset => asset.address + '-' + asset.id,\r\n};\r\nexports.ERC721v3Schema = {\r\n    version: 3,\r\n    deploymentBlock: 0,\r\n    name: 'ERC721v3',\r\n    description: 'Items conforming to the ERC721 v3 spec, using safeTransferFrom.',\r\n    thumbnail: 'https://opensea.io/static/images/opensea-icon.png',\r\n    website: 'http://erc721.org/',\r\n    fields: [\r\n        { name: 'ID', type: 'uint256', description: 'Asset Token ID' },\r\n        { name: 'Address', type: 'address', description: 'Asset Contract Address' },\r\n    ],\r\n    assetFromFields: (fields) => ({\r\n        id: fields.ID,\r\n        address: fields.Address,\r\n    }),\r\n    assetToFields: asset => ({\r\n        ID: asset.id,\r\n        Address: asset.address,\r\n    }),\r\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\r\n        return {\r\n            title: 'ERC721 Asset: Token ID ' + asset.id + ' at ' + asset.address,\r\n            description: '',\r\n            url: '',\r\n            thumbnail: '',\r\n            properties: [],\r\n        };\r\n    }),\r\n    functions: {\r\n        transfer: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'safeTransferFrom',\r\n            payable: false,\r\n            constant: false,\r\n            stateMutability: types_1.StateMutability.Nonpayable,\r\n            target: asset.address,\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Owner, name: '_from', type: 'address' },\r\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\r\n            ],\r\n            outputs: [],\r\n        }),\r\n        ownerOf: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'ownerOf',\r\n            payable: false,\r\n            constant: true,\r\n            stateMutability: types_1.StateMutability.View,\r\n            target: asset.address,\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset.id },\r\n            ],\r\n            outputs: [\r\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\r\n            ],\r\n        }),\r\n        assetsOfOwnerByIndex: [],\r\n    },\r\n    events: {\r\n        transfer: [],\r\n    },\r\n    hash: asset => asset.address + '-' + asset.id,\r\n};\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}
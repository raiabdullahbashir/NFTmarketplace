{"ast":null,"code":"import { Vector } from \"./Vector\";\nexport class Vector3d extends Vector {\n  constructor(xOrCoords, y, z) {\n    super(xOrCoords, y);\n\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.z = xOrCoords.z;\n    } else if (z !== undefined) {\n      this.z = z;\n    } else {\n      throw new Error(\"tsParticles - Vector not initialized correctly\");\n    }\n  }\n\n  static clone(source) {\n    return Vector3d.create(source.x, source.y, source.z);\n  }\n\n  static create(x, y, z) {\n    return new Vector3d(x, y, z);\n  }\n\n  static get origin() {\n    return Vector3d.create(0, 0, 0);\n  }\n\n  add(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n  }\n\n  addTo(v) {\n    super.addTo(v);\n\n    if (v instanceof Vector3d) {\n      this.z += v.z;\n    }\n  }\n\n  sub(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n  }\n\n  subFrom(v) {\n    super.subFrom(v);\n\n    if (v instanceof Vector3d) {\n      this.z -= v.z;\n    }\n  }\n\n  mult(n) {\n    return Vector3d.create(this.x * n, this.y * n, this.z * n);\n  }\n\n  multTo(n) {\n    super.multTo(n);\n    this.z *= n;\n  }\n\n  div(n) {\n    return Vector3d.create(this.x / n, this.y / n, this.z / n);\n  }\n\n  divTo(n) {\n    super.divTo(n);\n    this.z /= n;\n  }\n\n  copy() {\n    return Vector3d.clone(this);\n  }\n\n  setTo(v) {\n    super.setTo(v);\n    const v3d = v;\n\n    if (v3d.z !== undefined) {\n      this.z = v3d.z;\n    }\n  }\n\n}","map":{"version":3,"names":["Vector","Vector3d","constructor","xOrCoords","y","z","undefined","Error","clone","source","create","x","origin","add","v","addTo","sub","subFrom","mult","n","multTo","div","divTo","copy","setTo","v3d"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/node_modules/tsparticles/esm/Core/Utils/Vector3d.js"],"sourcesContent":["import { Vector } from \"./Vector\";\nexport class Vector3d extends Vector {\n    constructor(xOrCoords, y, z) {\n        super(xOrCoords, y);\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.z = xOrCoords.z;\n        }\n        else if (z !== undefined) {\n            this.z = z;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector not initialized correctly\");\n        }\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    add(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n    }\n    addTo(v) {\n        super.addTo(v);\n        if (v instanceof Vector3d) {\n            this.z += v.z;\n        }\n    }\n    sub(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n    }\n    subFrom(v) {\n        super.subFrom(v);\n        if (v instanceof Vector3d) {\n            this.z -= v.z;\n        }\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        super.multTo(n);\n        this.z *= n;\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        super.divTo(n);\n        this.z /= n;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    setTo(v) {\n        super.setTo(v);\n        const v3d = v;\n        if (v3d.z !== undefined) {\n            this.z = v3d.z;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
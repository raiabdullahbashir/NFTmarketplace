{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar json_schemas_1 = require(\"@0xproject/json-schemas\");\n\nvar data = {\n  type: 'string',\n  pattern: '^0x[0-9a-f]*$'\n};\nvar orderSchema = {\n  id: '/Order',\n  properties: {\n    exchange: {\n      $ref: '/Address'\n    },\n    maker: {\n      $ref: '/Address'\n    },\n    taker: {\n      $ref: '/Address'\n    },\n    makerRelayerFee: {\n      $ref: '/Number'\n    },\n    takerRelayerFee: {\n      $ref: '/Number'\n    },\n    makerProtocolFee: {\n      $ref: '/Number'\n    },\n    takerProtocolFee: {\n      $ref: '/Number'\n    },\n    feeRecipient: {\n      $ref: '/Address'\n    },\n    feeMethod: {\n      $ref: '/Number'\n    },\n    side: {\n      $ref: '/Number'\n    },\n    saleKind: {\n      $ref: '/Number'\n    },\n    target: {\n      $ref: '/Address'\n    },\n    howToCall: {\n      $ref: '/Number'\n    },\n    calldata: data,\n    replacementPattern: data,\n    staticTarget: {\n      $ref: '/Address'\n    },\n    staticExtradata: data,\n    paymentToken: {\n      $ref: '/Address'\n    },\n    basePrice: {\n      $ref: '/Number'\n    },\n    extra: {\n      $ref: '/Number'\n    },\n    listingTime: {\n      $ref: '/Number'\n    },\n    expirationTime: {\n      $ref: '/Number'\n    },\n    salt: {\n      $ref: '/Number'\n    }\n  },\n  required: ['exchange', 'maker', 'taker', 'makerRelayerFee', 'takerRelayerFee', 'makerProtocolFee', 'takerProtocolFee', 'feeRecipient', 'feeMethod', 'side', 'saleKind', 'target', 'howToCall', 'calldata', 'replacementPattern', 'staticTarget', 'staticExtradata', 'paymentToken', 'basePrice', 'extra', 'listingTime', 'expirationTime', 'salt'],\n  type: 'object'\n};\nvar signedOrderSchema = {\n  id: '/SignedOrder',\n  allOf: [{\n    $ref: '/Order'\n  }, {\n    properties: {\n      ecSignature: {\n        $ref: '/ECSignature'\n      }\n    },\n    required: ['ecSignature']\n  }]\n};\nexports.schemas = {\n  numberSchema: json_schemas_1.schemas.numberSchema,\n  addressSchema: json_schemas_1.schemas.addressSchema,\n  ecSignatureSchema: json_schemas_1.schemas.ecSignatureSchema,\n  ecSignatureParameterSchema: json_schemas_1.schemas.ecSignatureParameterSchema,\n  orderHashSchema: json_schemas_1.schemas.orderHashSchema,\n  orderSchema: orderSchema,\n  signedOrderSchema: signedOrderSchema\n};","map":{"version":3,"sources":["../src/schemas.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAM,IAAI,GAAG;EAAC,IAAI,EAAE,QAAP;EAAiB,OAAO,EAAE;AAA1B,CAAb;AAEA,IAAM,WAAW,GAAG;EAChB,EAAE,EAAE,QADY;EAEhB,UAAU,EAAE;IACR,QAAQ,EAAE;MAAE,IAAI,EAAE;IAAR,CADF;IAER,KAAK,EAAE;MAAE,IAAI,EAAE;IAAR,CAFC;IAGR,KAAK,EAAE;MAAE,IAAI,EAAE;IAAR,CAHC;IAIR,eAAe,EAAE;MAAE,IAAI,EAAE;IAAR,CAJT;IAKR,eAAe,EAAE;MAAE,IAAI,EAAE;IAAR,CALT;IAMR,gBAAgB,EAAE;MAAE,IAAI,EAAE;IAAR,CANV;IAOR,gBAAgB,EAAE;MAAE,IAAI,EAAE;IAAR,CAPV;IAQR,YAAY,EAAE;MAAE,IAAI,EAAE;IAAR,CARN;IASR,SAAS,EAAE;MAAE,IAAI,EAAE;IAAR,CATH;IAUR,IAAI,EAAE;MAAE,IAAI,EAAE;IAAR,CAVE;IAWR,QAAQ,EAAE;MAAE,IAAI,EAAE;IAAR,CAXF;IAYR,MAAM,EAAE;MAAE,IAAI,EAAE;IAAR,CAZA;IAaR,SAAS,EAAE;MAAE,IAAI,EAAE;IAAR,CAbH;IAcR,QAAQ,EAAE,IAdF;IAeR,kBAAkB,EAAE,IAfZ;IAgBR,YAAY,EAAE;MAAE,IAAI,EAAE;IAAR,CAhBN;IAiBR,eAAe,EAAE,IAjBT;IAkBR,YAAY,EAAE;MAAE,IAAI,EAAE;IAAR,CAlBN;IAmBR,SAAS,EAAE;MAAE,IAAI,EAAE;IAAR,CAnBH;IAoBR,KAAK,EAAE;MAAE,IAAI,EAAE;IAAR,CApBC;IAqBR,WAAW,EAAE;MAAE,IAAI,EAAE;IAAR,CArBL;IAsBR,cAAc,EAAE;MAAE,IAAI,EAAE;IAAR,CAtBR;IAuBR,IAAI,EAAE;MAAE,IAAI,EAAE;IAAR;EAvBE,CAFI;EA2BhB,QAAQ,EAAE,CACN,UADM,EAEN,OAFM,EAGN,OAHM,EAIN,iBAJM,EAKN,iBALM,EAMN,kBANM,EAON,kBAPM,EAQN,cARM,EASN,WATM,EAUN,MAVM,EAWN,UAXM,EAYN,QAZM,EAaN,WAbM,EAcN,UAdM,EAeN,oBAfM,EAgBN,cAhBM,EAiBN,iBAjBM,EAkBN,cAlBM,EAmBN,WAnBM,EAoBN,OApBM,EAqBN,aArBM,EAsBN,gBAtBM,EAuBN,MAvBM,CA3BM;EAoDhB,IAAI,EAAE;AApDU,CAApB;AAuDA,IAAM,iBAAiB,GAAG;EACtB,EAAE,EAAE,cADkB;EAEtB,KAAK,EAAE,CACH;IAAE,IAAI,EAAE;EAAR,CADG,EAEH;IACI,UAAU,EAAE;MACR,WAAW,EAAE;QAAE,IAAI,EAAE;MAAR;IADL,CADhB;IAII,QAAQ,EAAE,CAAC,aAAD;EAJd,CAFG;AAFe,CAA1B;AAaa,OAAA,CAAA,OAAA,GAAU;EACnB,YAAY,EAAE,cAAA,CAAA,OAAA,CAAc,YADT;EAEnB,aAAa,EAAE,cAAA,CAAA,OAAA,CAAc,aAFV;EAGnB,iBAAiB,EAAE,cAAA,CAAA,OAAA,CAAc,iBAHd;EAInB,0BAA0B,EAAE,cAAA,CAAA,OAAA,CAAc,0BAJvB;EAKnB,eAAe,EAAE,cAAA,CAAA,OAAA,CAAc,eALZ;EAMnB,WAAW,EAAA,WANQ;EAOnB,iBAAiB,EAAA;AAPE,CAAV","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar json_schemas_1 = require(\"@0xproject/json-schemas\");\r\nvar data = { type: 'string', pattern: '^0x[0-9a-f]*$' };\r\nvar orderSchema = {\r\n    id: '/Order',\r\n    properties: {\r\n        exchange: { $ref: '/Address' },\r\n        maker: { $ref: '/Address' },\r\n        taker: { $ref: '/Address' },\r\n        makerRelayerFee: { $ref: '/Number' },\r\n        takerRelayerFee: { $ref: '/Number' },\r\n        makerProtocolFee: { $ref: '/Number' },\r\n        takerProtocolFee: { $ref: '/Number' },\r\n        feeRecipient: { $ref: '/Address' },\r\n        feeMethod: { $ref: '/Number' },\r\n        side: { $ref: '/Number' },\r\n        saleKind: { $ref: '/Number' },\r\n        target: { $ref: '/Address' },\r\n        howToCall: { $ref: '/Number' },\r\n        calldata: data,\r\n        replacementPattern: data,\r\n        staticTarget: { $ref: '/Address' },\r\n        staticExtradata: data,\r\n        paymentToken: { $ref: '/Address' },\r\n        basePrice: { $ref: '/Number' },\r\n        extra: { $ref: '/Number' },\r\n        listingTime: { $ref: '/Number' },\r\n        expirationTime: { $ref: '/Number' },\r\n        salt: { $ref: '/Number' },\r\n    },\r\n    required: [\r\n        'exchange',\r\n        'maker',\r\n        'taker',\r\n        'makerRelayerFee',\r\n        'takerRelayerFee',\r\n        'makerProtocolFee',\r\n        'takerProtocolFee',\r\n        'feeRecipient',\r\n        'feeMethod',\r\n        'side',\r\n        'saleKind',\r\n        'target',\r\n        'howToCall',\r\n        'calldata',\r\n        'replacementPattern',\r\n        'staticTarget',\r\n        'staticExtradata',\r\n        'paymentToken',\r\n        'basePrice',\r\n        'extra',\r\n        'listingTime',\r\n        'expirationTime',\r\n        'salt',\r\n    ],\r\n    type: 'object',\r\n};\r\nvar signedOrderSchema = {\r\n    id: '/SignedOrder',\r\n    allOf: [\r\n        { $ref: '/Order' },\r\n        {\r\n            properties: {\r\n                ecSignature: { $ref: '/ECSignature' },\r\n            },\r\n            required: ['ecSignature'],\r\n        },\r\n    ],\r\n};\r\nexports.schemas = {\r\n    numberSchema: json_schemas_1.schemas.numberSchema,\r\n    addressSchema: json_schemas_1.schemas.addressSchema,\r\n    ecSignatureSchema: json_schemas_1.schemas.ecSignatureSchema,\r\n    ecSignatureParameterSchema: json_schemas_1.schemas.ecSignatureParameterSchema,\r\n    orderHashSchema: json_schemas_1.schemas.orderHashSchema,\r\n    orderSchema: orderSchema,\r\n    signedOrderSchema: signedOrderSchema,\r\n};\r\n//# sourceMappingURL=schemas.js.map"]},"metadata":{},"sourceType":"script"}
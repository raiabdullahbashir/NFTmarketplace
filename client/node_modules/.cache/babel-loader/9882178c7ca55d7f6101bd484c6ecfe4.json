{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeProxyCall = exports.encodeTransferCall = exports.encodeAtomicizedTransfer = exports.encodeDefaultCall = exports.encodeBuy = exports.encodeAtomicizedBuy = exports.encodeAtomicizedSell = exports.encodeSell = exports.encodeCall = exports.encodeReplacementPattern = exports.AbiType = void 0;\n\nvar bignumber_js_1 = require(\"bignumber.js\");\n\nvar ethABI = __importStar(require(\"ethereumjs-abi\"));\n\nvar wyvern_js_1 = require(\"wyvern-js\");\n\nvar types_1 = require(\"wyvern-schemas/dist/types\");\n\nvar wyvern_schemas_1 = require(\"wyvern-schemas\");\n\nObject.defineProperty(exports, \"AbiType\", {\n  enumerable: true,\n  get: function () {\n    return wyvern_schemas_1.AbiType;\n  }\n});\n\nvar Proxy_1 = require(\"../abi/Proxy\");\n\nvar types_2 = require(\"../types\");\n\nexports.encodeReplacementPattern = wyvern_js_1.WyvernProtocol.encodeReplacementPattern;\n\nvar encodeCall = function (abi, parameters) {\n  var inputTypes = abi.inputs.map(function (i) {\n    return i.type;\n  });\n  return \"0x\" + Buffer.concat([ethABI.methodID(abi.name, inputTypes), ethABI.rawEncode(inputTypes, parameters)]).toString(\"hex\");\n};\n\nexports.encodeCall = encodeCall;\n\nvar encodeSell = function (schema, asset, address) {\n  var transfer = schema.functions.transfer(asset);\n  return {\n    target: transfer.target,\n    calldata: (0, exports.encodeDefaultCall)(transfer, address),\n    replacementPattern: (0, exports.encodeReplacementPattern)(transfer)\n  };\n};\n\nexports.encodeSell = encodeSell;\n\nvar encodeAtomicizedSell = function (schemas, assets, address, wyvernProtocol, networkName) {\n  var atomicizer = wyvernProtocol.wyvernAtomicizer;\n\n  var _a = encodeAtomicizedCalldata(atomicizer, schemas, assets, address, types_2.OrderSide.Sell),\n      atomicizedCalldata = _a.atomicizedCalldata,\n      atomicizedReplacementPattern = _a.atomicizedReplacementPattern;\n\n  return {\n    calldata: atomicizedCalldata,\n    replacementPattern: atomicizedReplacementPattern,\n    target: wyvern_js_1.WyvernProtocol.getAtomicizerContractAddress(networkName)\n  };\n};\n\nexports.encodeAtomicizedSell = encodeAtomicizedSell;\n\nvar encodeAtomicizedBuy = function (schemas, assets, address, wyvernProtocol, networkName) {\n  var atomicizer = wyvernProtocol.wyvernAtomicizer;\n\n  var _a = encodeAtomicizedCalldata(atomicizer, schemas, assets, address, types_2.OrderSide.Buy),\n      atomicizedCalldata = _a.atomicizedCalldata,\n      atomicizedReplacementPattern = _a.atomicizedReplacementPattern;\n\n  return {\n    calldata: atomicizedCalldata,\n    replacementPattern: atomicizedReplacementPattern,\n    target: wyvern_js_1.WyvernProtocol.getAtomicizerContractAddress(networkName)\n  };\n};\n\nexports.encodeAtomicizedBuy = encodeAtomicizedBuy;\n\nvar encodeBuy = function (schema, asset, address) {\n  var transfer = schema.functions.transfer(asset);\n  var replaceables = transfer.inputs.filter(function (i) {\n    return i.kind === types_1.FunctionInputKind.Replaceable;\n  });\n  var ownerInputs = transfer.inputs.filter(function (i) {\n    return i.kind === types_1.FunctionInputKind.Owner;\n  }); // Validate\n\n  if (replaceables.length !== 1) {\n    throw new Error(\"Only 1 input can match transfer destination, but instead \" + replaceables.length + \" did\");\n  } // Compute calldata\n\n\n  var parameters = transfer.inputs.map(function (input) {\n    switch (input.kind) {\n      case types_1.FunctionInputKind.Replaceable:\n        return address;\n\n      case types_1.FunctionInputKind.Owner:\n        return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n\n      default:\n        try {\n          return input.value.toString();\n        } catch (e) {\n          console.error(schema);\n          console.error(asset);\n          throw e;\n        }\n\n    }\n  });\n  var calldata = (0, exports.encodeCall)(transfer, parameters); // Compute replacement pattern\n\n  var replacementPattern = \"0x\";\n\n  if (ownerInputs.length > 0) {\n    replacementPattern = (0, exports.encodeReplacementPattern)(transfer, types_1.FunctionInputKind.Owner);\n  }\n\n  return {\n    target: transfer.target,\n    calldata: calldata,\n    replacementPattern: replacementPattern\n  };\n};\n\nexports.encodeBuy = encodeBuy;\n\nvar encodeDefaultCall = function (abi, address) {\n  var parameters = abi.inputs.map(function (input) {\n    switch (input.kind) {\n      case types_1.FunctionInputKind.Replaceable:\n        return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n\n      case types_1.FunctionInputKind.Owner:\n        return address;\n\n      case types_1.FunctionInputKind.Asset:\n      default:\n        return input.value;\n    }\n  });\n  return (0, exports.encodeCall)(abi, parameters);\n};\n\nexports.encodeDefaultCall = encodeDefaultCall;\n/**\n * Encode the atomicized transfer of many assets\n * @param schema Wyvern Schema for the assets\n * @param assets List of assets to transfer\n * @param from Current address owning the assets\n * @param to Destination address\n * @param atomicizer Wyvern Atomicizer instance\n */\n\nfunction encodeAtomicizedTransfer(schemas, assets, from, to, wyvernProtocol, networkName) {\n  var atomicizer = wyvernProtocol.wyvernAtomicizer;\n  var transactions = assets.map(function (asset, i) {\n    var schema = schemas[i];\n    var transfer = schema.functions.transfer(asset);\n    var calldata = encodeTransferCall(transfer, from, to);\n    return {\n      calldata: calldata,\n      address: transfer.target,\n      value: new bignumber_js_1.BigNumber(0)\n    };\n  });\n  var atomicizedCalldata = atomicizer.atomicize.getABIEncodedTransactionData(transactions.map(function (t) {\n    return t.address;\n  }), transactions.map(function (t) {\n    return t.value;\n  }), transactions.map(function (t) {\n    return new bignumber_js_1.BigNumber((t.calldata.length - 2) / 2);\n  }), // subtract 2 for '0x', divide by 2 for hex\n  transactions.map(function (t) {\n    return t.calldata;\n  }).reduce(function (x, current) {\n    return x + current.slice(2);\n  }, \"0x\") // cut off the '0x'\n  );\n  return {\n    calldata: atomicizedCalldata,\n    target: wyvern_js_1.WyvernProtocol.getAtomicizerContractAddress(networkName)\n  };\n}\n\nexports.encodeAtomicizedTransfer = encodeAtomicizedTransfer;\n/**\n * Encode a transfer call for a Wyvern schema function\n * @param transferAbi Annotated Wyvern ABI\n * @param from From address\n * @param to To address\n */\n\nfunction encodeTransferCall(transferAbi, from, to) {\n  var parameters = transferAbi.inputs.map(function (input) {\n    switch (input.kind) {\n      case types_1.FunctionInputKind.Replaceable:\n        return to;\n\n      case types_1.FunctionInputKind.Owner:\n        return from;\n\n      case types_1.FunctionInputKind.Asset:\n      default:\n        if (input.value == null) {\n          throw new Error(\"Unsupported function input kind: \".concat(input.kind));\n        }\n\n        return input.value;\n    }\n  });\n  return (0, exports.encodeCall)(transferAbi, parameters);\n}\n\nexports.encodeTransferCall = encodeTransferCall;\n/**\n * Encode a call to a user's proxy contract\n * @param address The address for the proxy to call\n * @param howToCall How to call the addres\n * @param calldata The data to use in the call\n * @param shouldAssert Whether to assert success in the proxy call\n */\n\nfunction encodeProxyCall(address, howToCall, calldata, shouldAssert) {\n  if (shouldAssert === void 0) {\n    shouldAssert = true;\n  }\n\n  var abi = shouldAssert ? Proxy_1.proxyAssertABI : Proxy_1.proxyABI;\n  return (0, exports.encodeCall)(abi, [address, howToCall, Buffer.from(calldata.slice(2), \"hex\")]);\n}\n\nexports.encodeProxyCall = encodeProxyCall; // Helpers for atomicizer\n\nfunction encodeAtomicizedCalldata(atomicizer, schemas, assets, address, side) {\n  var encoder = side === types_2.OrderSide.Sell ? exports.encodeSell : exports.encodeBuy;\n\n  try {\n    var transactions = assets.map(function (asset, i) {\n      var schema = schemas[i];\n\n      var _a = encoder(schema, asset, address),\n          target = _a.target,\n          calldata = _a.calldata;\n\n      return {\n        calldata: calldata,\n        abi: schema.functions.transfer(asset),\n        address: target,\n        value: new bignumber_js_1.BigNumber(0)\n      };\n    });\n    var atomicizedCalldata = atomicizer.atomicize.getABIEncodedTransactionData(transactions.map(function (t) {\n      return t.address;\n    }), transactions.map(function (t) {\n      return t.value;\n    }), transactions.map(function (t) {\n      return new bignumber_js_1.BigNumber((t.calldata.length - 2) / 2);\n    }), // subtract 2 for '0x', divide by 2 for hex\n    transactions.map(function (t) {\n      return t.calldata;\n    }).reduce(function (x, y) {\n      return x + y.slice(2);\n    }) // cut off the '0x'\n    );\n    var kind = side === types_2.OrderSide.Buy ? types_1.FunctionInputKind.Owner : undefined;\n    var atomicizedReplacementPattern = wyvern_js_1.WyvernProtocol.encodeAtomicizedReplacementPattern(transactions.map(function (t) {\n      return t.abi;\n    }), kind);\n\n    if (!atomicizedCalldata || !atomicizedReplacementPattern) {\n      throw new Error(\"Invalid calldata: \".concat(atomicizedCalldata, \", \").concat(atomicizedReplacementPattern));\n    }\n\n    return {\n      atomicizedCalldata: atomicizedCalldata,\n      atomicizedReplacementPattern: atomicizedReplacementPattern\n    };\n  } catch (error) {\n    console.error({\n      schemas: schemas,\n      assets: assets,\n      address: address,\n      side: side\n    });\n    throw new Error(\"Failed to construct your order: likely something strange about this type of item. OpenSea has been notified. Please contact us in Discord! Original error: \".concat(error));\n  }\n}","map":{"version":3,"sources":["../../src/utils/schema.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeProxyCall = exports.encodeTransferCall = exports.encodeAtomicizedTransfer = exports.encodeDefaultCall = exports.encodeBuy = exports.encodeAtomicizedBuy = exports.encodeAtomicizedSell = exports.encodeSell = exports.encodeCall = exports.encodeReplacementPattern = exports.AbiType = void 0;\nvar bignumber_js_1 = require(\"bignumber.js\");\nvar ethABI = __importStar(require(\"ethereumjs-abi\"));\nvar wyvern_js_1 = require(\"wyvern-js\");\nvar types_1 = require(\"wyvern-schemas/dist/types\");\nvar wyvern_schemas_1 = require(\"wyvern-schemas\");\nObject.defineProperty(exports, \"AbiType\", { enumerable: true, get: function () { return wyvern_schemas_1.AbiType; } });\nvar Proxy_1 = require(\"../abi/Proxy\");\nvar types_2 = require(\"../types\");\nexports.encodeReplacementPattern = wyvern_js_1.WyvernProtocol.encodeReplacementPattern;\nvar encodeCall = function (abi, parameters) {\n    var inputTypes = abi.inputs.map(function (i) { return i.type; });\n    return (\"0x\" +\n        Buffer.concat([\n            ethABI.methodID(abi.name, inputTypes),\n            ethABI.rawEncode(inputTypes, parameters),\n        ]).toString(\"hex\"));\n};\nexports.encodeCall = encodeCall;\nvar encodeSell = function (schema, asset, address) {\n    var transfer = schema.functions.transfer(asset);\n    return {\n        target: transfer.target,\n        calldata: (0, exports.encodeDefaultCall)(transfer, address),\n        replacementPattern: (0, exports.encodeReplacementPattern)(transfer),\n    };\n};\nexports.encodeSell = encodeSell;\nvar encodeAtomicizedSell = function (schemas, assets, address, wyvernProtocol, networkName) {\n    var atomicizer = wyvernProtocol.wyvernAtomicizer;\n    var _a = encodeAtomicizedCalldata(atomicizer, schemas, assets, address, types_2.OrderSide.Sell), atomicizedCalldata = _a.atomicizedCalldata, atomicizedReplacementPattern = _a.atomicizedReplacementPattern;\n    return {\n        calldata: atomicizedCalldata,\n        replacementPattern: atomicizedReplacementPattern,\n        target: wyvern_js_1.WyvernProtocol.getAtomicizerContractAddress(networkName),\n    };\n};\nexports.encodeAtomicizedSell = encodeAtomicizedSell;\nvar encodeAtomicizedBuy = function (schemas, assets, address, wyvernProtocol, networkName) {\n    var atomicizer = wyvernProtocol.wyvernAtomicizer;\n    var _a = encodeAtomicizedCalldata(atomicizer, schemas, assets, address, types_2.OrderSide.Buy), atomicizedCalldata = _a.atomicizedCalldata, atomicizedReplacementPattern = _a.atomicizedReplacementPattern;\n    return {\n        calldata: atomicizedCalldata,\n        replacementPattern: atomicizedReplacementPattern,\n        target: wyvern_js_1.WyvernProtocol.getAtomicizerContractAddress(networkName),\n    };\n};\nexports.encodeAtomicizedBuy = encodeAtomicizedBuy;\nvar encodeBuy = function (schema, asset, address) {\n    var transfer = schema.functions.transfer(asset);\n    var replaceables = transfer.inputs.filter(function (i) { return i.kind === types_1.FunctionInputKind.Replaceable; });\n    var ownerInputs = transfer.inputs.filter(function (i) { return i.kind === types_1.FunctionInputKind.Owner; });\n    // Validate\n    if (replaceables.length !== 1) {\n        throw new Error(\"Only 1 input can match transfer destination, but instead \" +\n            replaceables.length +\n            \" did\");\n    }\n    // Compute calldata\n    var parameters = transfer.inputs.map(function (input) {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Replaceable:\n                return address;\n            case types_1.FunctionInputKind.Owner:\n                return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n            default:\n                try {\n                    return input.value.toString();\n                }\n                catch (e) {\n                    console.error(schema);\n                    console.error(asset);\n                    throw e;\n                }\n        }\n    });\n    var calldata = (0, exports.encodeCall)(transfer, parameters);\n    // Compute replacement pattern\n    var replacementPattern = \"0x\";\n    if (ownerInputs.length > 0) {\n        replacementPattern = (0, exports.encodeReplacementPattern)(transfer, types_1.FunctionInputKind.Owner);\n    }\n    return {\n        target: transfer.target,\n        calldata: calldata,\n        replacementPattern: replacementPattern,\n    };\n};\nexports.encodeBuy = encodeBuy;\nvar encodeDefaultCall = function (abi, address) {\n    var parameters = abi.inputs.map(function (input) {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Replaceable:\n                return wyvern_js_1.WyvernProtocol.generateDefaultValue(input.type);\n            case types_1.FunctionInputKind.Owner:\n                return address;\n            case types_1.FunctionInputKind.Asset:\n            default:\n                return input.value;\n        }\n    });\n    return (0, exports.encodeCall)(abi, parameters);\n};\nexports.encodeDefaultCall = encodeDefaultCall;\n/**\n * Encode the atomicized transfer of many assets\n * @param schema Wyvern Schema for the assets\n * @param assets List of assets to transfer\n * @param from Current address owning the assets\n * @param to Destination address\n * @param atomicizer Wyvern Atomicizer instance\n */\nfunction encodeAtomicizedTransfer(schemas, assets, from, to, wyvernProtocol, networkName) {\n    var atomicizer = wyvernProtocol.wyvernAtomicizer;\n    var transactions = assets.map(function (asset, i) {\n        var schema = schemas[i];\n        var transfer = schema.functions.transfer(asset);\n        var calldata = encodeTransferCall(transfer, from, to);\n        return {\n            calldata: calldata,\n            address: transfer.target,\n            value: new bignumber_js_1.BigNumber(0),\n        };\n    });\n    var atomicizedCalldata = atomicizer.atomicize.getABIEncodedTransactionData(transactions.map(function (t) { return t.address; }), transactions.map(function (t) { return t.value; }), transactions.map(function (t) { return new bignumber_js_1.BigNumber((t.calldata.length - 2) / 2); }), // subtract 2 for '0x', divide by 2 for hex\n    transactions\n        .map(function (t) { return t.calldata; })\n        .reduce(function (x, current) { return x + current.slice(2); }, \"0x\") // cut off the '0x'\n    );\n    return {\n        calldata: atomicizedCalldata,\n        target: wyvern_js_1.WyvernProtocol.getAtomicizerContractAddress(networkName),\n    };\n}\nexports.encodeAtomicizedTransfer = encodeAtomicizedTransfer;\n/**\n * Encode a transfer call for a Wyvern schema function\n * @param transferAbi Annotated Wyvern ABI\n * @param from From address\n * @param to To address\n */\nfunction encodeTransferCall(transferAbi, from, to) {\n    var parameters = transferAbi.inputs.map(function (input) {\n        switch (input.kind) {\n            case types_1.FunctionInputKind.Replaceable:\n                return to;\n            case types_1.FunctionInputKind.Owner:\n                return from;\n            case types_1.FunctionInputKind.Asset:\n            default:\n                if (input.value == null) {\n                    throw new Error(\"Unsupported function input kind: \".concat(input.kind));\n                }\n                return input.value;\n        }\n    });\n    return (0, exports.encodeCall)(transferAbi, parameters);\n}\nexports.encodeTransferCall = encodeTransferCall;\n/**\n * Encode a call to a user's proxy contract\n * @param address The address for the proxy to call\n * @param howToCall How to call the addres\n * @param calldata The data to use in the call\n * @param shouldAssert Whether to assert success in the proxy call\n */\nfunction encodeProxyCall(address, howToCall, calldata, shouldAssert) {\n    if (shouldAssert === void 0) { shouldAssert = true; }\n    var abi = shouldAssert ? Proxy_1.proxyAssertABI : Proxy_1.proxyABI;\n    return (0, exports.encodeCall)(abi, [\n        address,\n        howToCall,\n        Buffer.from(calldata.slice(2), \"hex\"),\n    ]);\n}\nexports.encodeProxyCall = encodeProxyCall;\n// Helpers for atomicizer\nfunction encodeAtomicizedCalldata(atomicizer, schemas, assets, address, side) {\n    var encoder = side === types_2.OrderSide.Sell ? exports.encodeSell : exports.encodeBuy;\n    try {\n        var transactions = assets.map(function (asset, i) {\n            var schema = schemas[i];\n            var _a = encoder(schema, asset, address), target = _a.target, calldata = _a.calldata;\n            return {\n                calldata: calldata,\n                abi: schema.functions.transfer(asset),\n                address: target,\n                value: new bignumber_js_1.BigNumber(0),\n            };\n        });\n        var atomicizedCalldata = atomicizer.atomicize.getABIEncodedTransactionData(transactions.map(function (t) { return t.address; }), transactions.map(function (t) { return t.value; }), transactions.map(function (t) { return new bignumber_js_1.BigNumber((t.calldata.length - 2) / 2); }), // subtract 2 for '0x', divide by 2 for hex\n        transactions.map(function (t) { return t.calldata; }).reduce(function (x, y) { return x + y.slice(2); }) // cut off the '0x'\n        );\n        var kind = side === types_2.OrderSide.Buy ? types_1.FunctionInputKind.Owner : undefined;\n        var atomicizedReplacementPattern = wyvern_js_1.WyvernProtocol.encodeAtomicizedReplacementPattern(transactions.map(function (t) { return t.abi; }), kind);\n        if (!atomicizedCalldata || !atomicizedReplacementPattern) {\n            throw new Error(\"Invalid calldata: \".concat(atomicizedCalldata, \", \").concat(atomicizedReplacementPattern));\n        }\n        return {\n            atomicizedCalldata: atomicizedCalldata,\n            atomicizedReplacementPattern: atomicizedReplacementPattern,\n        };\n    }\n    catch (error) {\n        console.error({ schemas: schemas, assets: assets, address: address, side: side });\n        throw new Error(\"Failed to construct your order: likely something strange about this type of item. OpenSea has been notified. Please contact us in Discord! Original error: \".concat(error));\n    }\n}\n//# sourceMappingURL=schema.js.map"]},"metadata":{},"sourceType":"script"}
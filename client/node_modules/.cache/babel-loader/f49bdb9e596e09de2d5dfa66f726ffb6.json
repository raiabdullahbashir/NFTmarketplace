{"ast":null,"code":"import { Range } from \"./Range\";\nexport class Rectangle extends Range {\n  constructor(x, y, width, height) {\n    super(x, y);\n    this.size = {\n      height: height,\n      width: width\n    };\n  }\n\n  contains(point) {\n    const w = this.size.width,\n          h = this.size.height,\n          pos = this.position;\n    return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n  }\n\n  intersects(range) {\n    const rect = range,\n          circle = range,\n          w = this.size.width,\n          h = this.size.height,\n          pos1 = this.position,\n          pos2 = range.position;\n\n    if (circle.radius !== undefined) {\n      return circle.intersects(this);\n    }\n\n    if (!rect.size) {\n      return false;\n    }\n\n    const size2 = rect.size,\n          w2 = size2.width,\n          h2 = size2.height;\n    return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n  }\n\n}","map":{"version":3,"names":["Range","Rectangle","constructor","x","y","width","height","size","contains","point","w","h","pos","position","intersects","range","rect","circle","pos1","pos2","radius","undefined","size2","w2","h2"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/node_modules/tsparticles/esm/Core/Utils/Rectangle.js"],"sourcesContent":["import { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        const rect = range, circle = range, w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position;\n        if (circle.radius !== undefined) {\n            return circle.intersects(this);\n        }\n        if (!rect.size) {\n            return false;\n        }\n        const size2 = rect.size, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAO,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;EACjCE,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcC,MAAd,EAAsB;IAC7B,MAAMH,CAAN,EAASC,CAAT;IACA,KAAKG,IAAL,GAAY;MACRD,MAAM,EAAEA,MADA;MAERD,KAAK,EAAEA;IAFC,CAAZ;EAIH;;EACDG,QAAQ,CAACC,KAAD,EAAQ;IACZ,MAAMC,CAAC,GAAG,KAAKH,IAAL,CAAUF,KAApB;IAAA,MAA2BM,CAAC,GAAG,KAAKJ,IAAL,CAAUD,MAAzC;IAAA,MAAiDM,GAAG,GAAG,KAAKC,QAA5D;IACA,OAAOJ,KAAK,CAACN,CAAN,IAAWS,GAAG,CAACT,CAAf,IAAoBM,KAAK,CAACN,CAAN,IAAWS,GAAG,CAACT,CAAJ,GAAQO,CAAvC,IAA4CD,KAAK,CAACL,CAAN,IAAWQ,GAAG,CAACR,CAA3D,IAAgEK,KAAK,CAACL,CAAN,IAAWQ,GAAG,CAACR,CAAJ,GAAQO,CAA1F;EACH;;EACDG,UAAU,CAACC,KAAD,EAAQ;IACd,MAAMC,IAAI,GAAGD,KAAb;IAAA,MAAoBE,MAAM,GAAGF,KAA7B;IAAA,MAAoCL,CAAC,GAAG,KAAKH,IAAL,CAAUF,KAAlD;IAAA,MAAyDM,CAAC,GAAG,KAAKJ,IAAL,CAAUD,MAAvE;IAAA,MAA+EY,IAAI,GAAG,KAAKL,QAA3F;IAAA,MAAqGM,IAAI,GAAGJ,KAAK,CAACF,QAAlH;;IACA,IAAII,MAAM,CAACG,MAAP,KAAkBC,SAAtB,EAAiC;MAC7B,OAAOJ,MAAM,CAACH,UAAP,CAAkB,IAAlB,CAAP;IACH;;IACD,IAAI,CAACE,IAAI,CAACT,IAAV,EAAgB;MACZ,OAAO,KAAP;IACH;;IACD,MAAMe,KAAK,GAAGN,IAAI,CAACT,IAAnB;IAAA,MAAyBgB,EAAE,GAAGD,KAAK,CAACjB,KAApC;IAAA,MAA2CmB,EAAE,GAAGF,KAAK,CAAChB,MAAtD;IACA,OAAOa,IAAI,CAAChB,CAAL,GAASe,IAAI,CAACf,CAAL,GAASO,CAAlB,IAAuBS,IAAI,CAAChB,CAAL,GAASoB,EAAT,GAAcL,IAAI,CAACf,CAA1C,IAA+CgB,IAAI,CAACf,CAAL,GAASc,IAAI,CAACd,CAAL,GAASO,CAAjE,IAAsEQ,IAAI,CAACf,CAAL,GAASoB,EAAT,GAAcN,IAAI,CAACd,CAAhG;EACH;;AAtBgC"},"metadata":{},"sourceType":"module"}
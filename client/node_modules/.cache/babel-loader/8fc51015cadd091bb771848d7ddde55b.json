{"ast":null,"code":"import { createSelector, createStructuredSelector } from \"reselect\"; //Store Selectors\n\nexport const nftBreakdownState = state => state.NFT.nftBreakdown;\nexport const nftShowcaseState = state => state.NFT.nftShowcase;\nexport const nftDetailState = state => state.NFT.nftDetail;\nexport const hotCollectionsState = state => state.hotCollection.hotCollections;\nexport const authorsState = state => state.authors.authorList;\nexport const authorRankingsState = state => state.authors.authorRanking; //blogs\n\nexport const blogsState = state => state.blogs.blogPosts;\nexport const recentPostsState = state => state.blogs.recentPosts;\nexport const tagsState = state => state.blogs.tags;\nexport const commentsState = state => state.blogs.comments;\nexport const auctionedNfts = createSelector(nftBreakdownState, nfts => {\n  if (!nfts.data) {\n    return [];\n  }\n\n  const acutioned = nfts.data.filter(nft => !!nft.deadline);\n  return acutioned;\n});\nexport const nftFilter = createStructuredSelector({\n  categories: state => state.filters.selectedCategories,\n  status: state => state.filters.selectedStatus,\n  itemsType: state => state.filters.selectedItemsType,\n  collections: state => state.filters.selectedCollections,\n  nftTitle: state => state.filters.filterNftTitle\n});\nexport const nftItems = createSelector(nftFilter, nftBreakdownState, (filters, nfts) => {\n  let {\n    data\n  } = nfts;\n  const {\n    categories,\n    status,\n    itemsType,\n    collections,\n    nftTitle\n  } = filters;\n\n  if (!data) {\n    return [];\n  }\n\n  if (categories.size) {\n    data = data.filter(nft => categories.has(nft.category));\n  }\n\n  if (status.size) {\n    data = data.filter(nft => status.has(nft.status));\n  }\n\n  if (itemsType.size) {\n    data = data.filter(nft => itemsType.has(nft.item_type));\n  }\n\n  if (collections.size) {\n    data = data.filter(nft => collections.has(nft.collections));\n  }\n\n  if (nftTitle.trim().length) {\n    let pattern = new RegExp(`${nftTitle.trim()}`, 'gi');\n    console.log(pattern);\n    data = data.filter(nft => nft.title.match(pattern));\n  }\n\n  return data;\n});","map":{"version":3,"names":["createSelector","createStructuredSelector","nftBreakdownState","state","NFT","nftBreakdown","nftShowcaseState","nftShowcase","nftDetailState","nftDetail","hotCollectionsState","hotCollection","hotCollections","authorsState","authors","authorList","authorRankingsState","authorRanking","blogsState","blogs","blogPosts","recentPostsState","recentPosts","tagsState","tags","commentsState","comments","auctionedNfts","nfts","data","acutioned","filter","nft","deadline","nftFilter","categories","filters","selectedCategories","status","selectedStatus","itemsType","selectedItemsType","collections","selectedCollections","nftTitle","filterNftTitle","nftItems","size","has","category","item_type","trim","length","pattern","RegExp","console","log","title","match"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/src/store/selectors/index.js"],"sourcesContent":["import { createSelector, createStructuredSelector } from \"reselect\";\n\n\n//Store Selectors\nexport const nftBreakdownState = (state) => state.NFT.nftBreakdown;\nexport const nftShowcaseState = (state) => state.NFT.nftShowcase;\nexport const nftDetailState = (state) => state.NFT.nftDetail;\nexport const hotCollectionsState = (state) => state.hotCollection.hotCollections;\nexport const authorsState = (state) => state.authors.authorList;\nexport const authorRankingsState = (state) => state.authors.authorRanking;\n\n//blogs\nexport const blogsState = (state) => state.blogs.blogPosts;\nexport const recentPostsState = (state) => state.blogs.recentPosts;\nexport const tagsState = (state) => state.blogs.tags;\nexport const commentsState = (state) => state.blogs.comments;\n\nexport const auctionedNfts = createSelector(nftBreakdownState, ( nfts ) => {\n    if(!nfts.data) {\n        return [];\n    }\n    const acutioned = nfts.data.filter(nft => !!nft.deadline);\n    return acutioned;\n});\n\nexport const nftFilter = createStructuredSelector({\n    categories: (state) => state.filters.selectedCategories,\n    status: (state) => state.filters.selectedStatus,\n    itemsType: (state) => state.filters.selectedItemsType,\n    collections: (state) => state.filters.selectedCollections,\n    nftTitle: (state) => state.filters.filterNftTitle\n});\n\nexport const nftItems = createSelector(nftFilter, nftBreakdownState, ( filters, nfts ) => {\n    let { data } = nfts;\n    const { categories, status, itemsType, collections, nftTitle } = filters;\n    \n    if(!data) {\n        return [];\n    }\n\n    if(categories.size) {\n        data = data.filter( nft => categories.has(nft.category));\n    }\n    if(status.size) {\n        data = data.filter( nft => status.has(nft.status));\n    }\n    if(itemsType.size) {\n        data = data.filter( nft => itemsType.has(nft.item_type));\n    }\n    if(collections.size) {\n        data = data.filter( nft => collections.has(nft.collections));\n    }\n    if(nftTitle.trim().length) {\n        let pattern = new RegExp(`${nftTitle.trim()}`, 'gi');\n        console.log(pattern)\n        data = data.filter( nft => nft.title.match(pattern));\n    }\n\n    return data;\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
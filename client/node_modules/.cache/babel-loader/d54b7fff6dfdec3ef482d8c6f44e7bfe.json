{"ast":null,"code":"\"use strict\";\n/* Sourced from 0x.js */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require(\"lodash\");\n\nvar types_1 = require(\"../types\");\n\nvar constants_1 = require(\"./constants\");\n\nvar contractCallErrorTransformer = function (error) {\n  if (_.includes(error.message, constants_1.constants.INVALID_JUMP_PATTERN)) {\n    return new Error(types_1.WyvernProtocolError.InvalidJump);\n  }\n\n  if (_.includes(error.message, constants_1.constants.OUT_OF_GAS_PATTERN)) {\n    return new Error(types_1.WyvernProtocolError.OutOfGas);\n  }\n\n  return error;\n};\n\nvar schemaErrorTransformer = function (error) {\n  if (_.includes(error.message, constants_1.constants.INVALID_TAKER_FORMAT)) {\n    var errMsg = 'Order taker must be of type string. If you want anyone to be able to fill an order - pass ZeroEx.NULL_ADDRESS';\n    return new Error(errMsg);\n  }\n\n  return error;\n};\n/**\r\n * Source: https://stackoverflow.com/a/29837695/3546986\r\n */\n\n\nvar asyncErrorHandlerFactory = function (errorTransformer) {\n  var asyncErrorHandlingDecorator = function (target, key, descriptor) {\n    var originalMethod = descriptor.value; // Do not use arrow syntax here. Use a function expression in\n    // order to use the correct value of `this` in this method\n    // tslint:disable-next-line:only-arrow-functions\n\n    descriptor.value = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        var result, error_1, transformedError;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n\n              return [4\n              /*yield*/\n              , originalMethod.apply(this, args)];\n\n            case 1:\n              result = _a.sent();\n              return [2\n              /*return*/\n              , result];\n\n            case 2:\n              error_1 = _a.sent();\n              transformedError = errorTransformer(error_1);\n              throw transformedError;\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    return descriptor;\n  };\n\n  return asyncErrorHandlingDecorator;\n};\n\nvar syncErrorHandlerFactory = function (errorTransformer) {\n  var syncErrorHandlingDecorator = function (target, key, descriptor) {\n    var originalMethod = descriptor.value; // Do not use arrow syntax here. Use a function expression in\n    // order to use the correct value of `this` in this method\n    // tslint:disable-next-line:only-arrow-functions\n\n    descriptor.value = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      try {\n        var result = originalMethod.apply(this, args);\n        return result;\n      } catch (error) {\n        var transformedError = errorTransformer(error);\n        throw transformedError;\n      }\n    };\n\n    return descriptor;\n  };\n\n  return syncErrorHandlingDecorator;\n}; // _.flow(f, g) = f âˆ˜ g\n\n\nvar wyvernProtocolErrorTransformer = _.flow(schemaErrorTransformer, contractCallErrorTransformer);\n\nexports.decorators = {\n  asyncWyvernProtocolErrorHandler: asyncErrorHandlerFactory(wyvernProtocolErrorTransformer),\n  syncWyvernProtocolErrorHandler: syncErrorHandlerFactory(wyvernProtocolErrorTransformer)\n};","map":{"version":3,"sources":["../../src/utils/decorators.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/* Sourced from 0x.js */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require(\"lodash\");\r\nvar types_1 = require(\"../types\");\r\nvar constants_1 = require(\"./constants\");\r\nvar contractCallErrorTransformer = function (error) {\r\n    if (_.includes(error.message, constants_1.constants.INVALID_JUMP_PATTERN)) {\r\n        return new Error(types_1.WyvernProtocolError.InvalidJump);\r\n    }\r\n    if (_.includes(error.message, constants_1.constants.OUT_OF_GAS_PATTERN)) {\r\n        return new Error(types_1.WyvernProtocolError.OutOfGas);\r\n    }\r\n    return error;\r\n};\r\nvar schemaErrorTransformer = function (error) {\r\n    if (_.includes(error.message, constants_1.constants.INVALID_TAKER_FORMAT)) {\r\n        var errMsg = 'Order taker must be of type string. If you want anyone to be able to fill an order - pass ZeroEx.NULL_ADDRESS';\r\n        return new Error(errMsg);\r\n    }\r\n    return error;\r\n};\r\n/**\r\n * Source: https://stackoverflow.com/a/29837695/3546986\r\n */\r\nvar asyncErrorHandlerFactory = function (errorTransformer) {\r\n    var asyncErrorHandlingDecorator = function (target, key, descriptor) {\r\n        var originalMethod = descriptor.value;\r\n        // Do not use arrow syntax here. Use a function expression in\r\n        // order to use the correct value of `this` in this method\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var result, error_1, transformedError;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            _a.trys.push([0, 2, , 3]);\r\n                            return [4 /*yield*/, originalMethod.apply(this, args)];\r\n                        case 1:\r\n                            result = _a.sent();\r\n                            return [2 /*return*/, result];\r\n                        case 2:\r\n                            error_1 = _a.sent();\r\n                            transformedError = errorTransformer(error_1);\r\n                            throw transformedError;\r\n                        case 3: return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        return descriptor;\r\n    };\r\n    return asyncErrorHandlingDecorator;\r\n};\r\nvar syncErrorHandlerFactory = function (errorTransformer) {\r\n    var syncErrorHandlingDecorator = function (target, key, descriptor) {\r\n        var originalMethod = descriptor.value;\r\n        // Do not use arrow syntax here. Use a function expression in\r\n        // order to use the correct value of `this` in this method\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                var result = originalMethod.apply(this, args);\r\n                return result;\r\n            }\r\n            catch (error) {\r\n                var transformedError = errorTransformer(error);\r\n                throw transformedError;\r\n            }\r\n        };\r\n        return descriptor;\r\n    };\r\n    return syncErrorHandlingDecorator;\r\n};\r\n// _.flow(f, g) = f âˆ˜ g\r\nvar wyvernProtocolErrorTransformer = _.flow(schemaErrorTransformer, contractCallErrorTransformer);\r\nexports.decorators = {\r\n    asyncWyvernProtocolErrorHandler: asyncErrorHandlerFactory(wyvernProtocolErrorTransformer),\r\n    syncWyvernProtocolErrorHandler: syncErrorHandlerFactory(wyvernProtocolErrorTransformer),\r\n};\r\n//# sourceMappingURL=decorators.js.map"]},"metadata":{},"sourceType":"script"}
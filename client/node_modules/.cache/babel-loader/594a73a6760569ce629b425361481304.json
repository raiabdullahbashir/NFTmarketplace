{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file function.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\nvar coder = require('../solidity/coder');\n\nvar utils = require('../utils/utils');\n\nvar errors = require('./errors');\n\nvar formatters = require('./formatters');\n\nvar sha3 = require('../utils/sha3');\n/**\n * This prototype should be used to call/sendTransaction to solidity functions\n */\n\n\nvar SolidityFunction = function (eth, json, address) {\n  this._eth = eth;\n  this._inputTypes = json.inputs.map(function (i) {\n    return i.type;\n  });\n  this._outputTypes = json.outputs.map(function (i) {\n    return i.type;\n  });\n  this._constant = json.stateMutability === \"view\" || json.stateMutability === \"pure\" || json.constant;\n  this._payable = json.stateMutability === \"payable\" || json.payable;\n  this._name = utils.transformToFullName(json);\n  this._address = address;\n};\n\nSolidityFunction.prototype.extractCallback = function (args) {\n  if (utils.isFunction(args[args.length - 1])) {\n    return args.pop(); // modify the args array!\n  }\n};\n\nSolidityFunction.prototype.extractDefaultBlock = function (args) {\n  if (args.length > this._inputTypes.length && !utils.isObject(args[args.length - 1])) {\n    return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!\n  }\n};\n/**\n * Should be called to check if the number of arguments is correct\n *\n * @method validateArgs\n * @param {Array} arguments\n * @throws {Error} if it is not\n */\n\n\nSolidityFunction.prototype.validateArgs = function (args) {\n  var inputArgs = args.filter(function (a) {\n    // filter the options object but not arguments that are arrays\n    return !(utils.isObject(a) === true && utils.isArray(a) === false && utils.isBigNumber(a) === false);\n  });\n\n  if (inputArgs.length !== this._inputTypes.length) {\n    throw errors.InvalidNumberOfSolidityArgs();\n  }\n};\n/**\n * Should be used to create payload from arguments\n *\n * @method toPayload\n * @param {Array} solidity function params\n * @param {Object} optional payload options\n */\n\n\nSolidityFunction.prototype.toPayload = function (args) {\n  var options = {};\n\n  if (args.length > this._inputTypes.length && utils.isObject(args[args.length - 1])) {\n    options = args[args.length - 1];\n  }\n\n  this.validateArgs(args);\n  options.to = this._address;\n  options.data = '0x' + this.signature() + coder.encodeParams(this._inputTypes, args);\n  return options;\n};\n/**\n * Should be used to get function signature\n *\n * @method signature\n * @return {String} function signature\n */\n\n\nSolidityFunction.prototype.signature = function () {\n  return sha3(this._name).slice(0, 8);\n};\n\nSolidityFunction.prototype.unpackOutput = function (output) {\n  if (!output) {\n    return;\n  }\n\n  output = output.length >= 2 ? output.slice(2) : output;\n  var result = coder.decodeParams(this._outputTypes, output);\n  return result.length === 1 ? result[0] : result;\n};\n/**\n * Calls a contract function.\n *\n * @method call\n * @param {...Object} Contract function arguments\n * @param {function} If the last argument is a function, the contract function\n *   call will be asynchronous, and the callback will be passed the\n *   error and result.\n * @return {String} output bytes\n */\n\n\nSolidityFunction.prototype.call = function () {\n  var args = Array.prototype.slice.call(arguments).filter(function (a) {\n    return a !== undefined;\n  });\n  var callback = this.extractCallback(args);\n  var defaultBlock = this.extractDefaultBlock(args);\n  var payload = this.toPayload(args);\n\n  if (!callback) {\n    var output = this._eth.call(payload, defaultBlock);\n\n    return this.unpackOutput(output);\n  }\n\n  var self = this;\n\n  this._eth.call(payload, defaultBlock, function (error, output) {\n    if (error) return callback(error, null);\n    var unpacked = null;\n\n    try {\n      unpacked = self.unpackOutput(output);\n    } catch (e) {\n      error = e;\n    }\n\n    callback(error, unpacked);\n  });\n};\n/**\n * Should be used to sendTransaction to solidity function\n *\n * @method sendTransaction\n */\n\n\nSolidityFunction.prototype.sendTransaction = function () {\n  var args = Array.prototype.slice.call(arguments).filter(function (a) {\n    return a !== undefined;\n  });\n  var callback = this.extractCallback(args);\n  var payload = this.toPayload(args);\n\n  if (payload.value > 0 && !this._payable) {\n    throw new Error('Cannot send value to non-payable function');\n  }\n\n  if (!callback) {\n    return this._eth.sendTransaction(payload);\n  }\n\n  this._eth.sendTransaction(payload, callback);\n};\n/**\n * Should be used to estimateGas of solidity function\n *\n * @method estimateGas\n */\n\n\nSolidityFunction.prototype.estimateGas = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var callback = this.extractCallback(args);\n  var payload = this.toPayload(args);\n\n  if (!callback) {\n    return this._eth.estimateGas(payload);\n  }\n\n  this._eth.estimateGas(payload, callback);\n};\n/**\n * Return the encoded data of the call\n *\n * @method getData\n * @return {String} the encoded data\n */\n\n\nSolidityFunction.prototype.getData = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var payload = this.toPayload(args);\n  return payload.data;\n};\n/**\n * Should be used to get function display name\n *\n * @method displayName\n * @return {String} display name of the function\n */\n\n\nSolidityFunction.prototype.displayName = function () {\n  return utils.extractDisplayName(this._name);\n};\n/**\n * Should be used to get function type name\n *\n * @method typeName\n * @return {String} type name of the function\n */\n\n\nSolidityFunction.prototype.typeName = function () {\n  return utils.extractTypeName(this._name);\n};\n/**\n * Should be called to get rpc requests from solidity function\n *\n * @method request\n * @returns {Object}\n */\n\n\nSolidityFunction.prototype.request = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var callback = this.extractCallback(args);\n  var payload = this.toPayload(args);\n  var format = this.unpackOutput.bind(this);\n  return {\n    method: this._constant ? 'eth_call' : 'eth_sendTransaction',\n    callback: callback,\n    params: [payload],\n    format: format\n  };\n};\n/**\n * Should be called to execute function\n *\n * @method execute\n */\n\n\nSolidityFunction.prototype.execute = function () {\n  var transaction = !this._constant; // send transaction\n\n  if (transaction) {\n    return this.sendTransaction.apply(this, Array.prototype.slice.call(arguments));\n  } // call\n\n\n  return this.call.apply(this, Array.prototype.slice.call(arguments));\n};\n/**\n * Should be called to attach function to contract\n *\n * @method attachToContract\n * @param {Contract}\n */\n\n\nSolidityFunction.prototype.attachToContract = function (contract) {\n  var execute = this.execute.bind(this);\n  execute.request = this.request.bind(this);\n  execute.call = this.call.bind(this);\n  execute.sendTransaction = this.sendTransaction.bind(this);\n  execute.estimateGas = this.estimateGas.bind(this);\n  execute.getData = this.getData.bind(this);\n  var displayName = this.displayName();\n\n  if (!contract[displayName]) {\n    contract[displayName] = execute;\n  }\n\n  contract[displayName][this.typeName()] = execute; // circular!!!!\n};\n\nmodule.exports = SolidityFunction;","map":{"version":3,"names":["coder","require","utils","errors","formatters","sha3","SolidityFunction","eth","json","address","_eth","_inputTypes","inputs","map","i","type","_outputTypes","outputs","_constant","stateMutability","constant","_payable","payable","_name","transformToFullName","_address","prototype","extractCallback","args","isFunction","length","pop","extractDefaultBlock","isObject","inputDefaultBlockNumberFormatter","validateArgs","inputArgs","filter","a","isArray","isBigNumber","InvalidNumberOfSolidityArgs","toPayload","options","to","data","signature","encodeParams","slice","unpackOutput","output","result","decodeParams","call","Array","arguments","undefined","callback","defaultBlock","payload","self","error","unpacked","e","sendTransaction","value","Error","estimateGas","getData","displayName","extractDisplayName","typeName","extractTypeName","request","format","bind","method","params","execute","transaction","apply","attachToContract","contract","module","exports"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/node_modules/wyvern-schemas/node_modules/web3/lib/web3/function.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file function.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar coder = require('../solidity/coder');\nvar utils = require('../utils/utils');\nvar errors = require('./errors');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\n\n/**\n * This prototype should be used to call/sendTransaction to solidity functions\n */\nvar SolidityFunction = function (eth, json, address) {\n    this._eth = eth;\n    this._inputTypes = json.inputs.map(function (i) {\n        return i.type;\n    });\n    this._outputTypes = json.outputs.map(function (i) {\n        return i.type;\n    });\n    this._constant = (json.stateMutability === \"view\" || json.stateMutability === \"pure\" || json.constant);\n    this._payable = (json.stateMutability === \"payable\" || json.payable);\n    this._name = utils.transformToFullName(json);\n    this._address = address;\n};\n\nSolidityFunction.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\nSolidityFunction.prototype.extractDefaultBlock = function (args) {\n    if (args.length > this._inputTypes.length && !utils.isObject(args[args.length -1])) {\n        return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!\n    }\n};\n\n/**\n * Should be called to check if the number of arguments is correct\n *\n * @method validateArgs\n * @param {Array} arguments\n * @throws {Error} if it is not\n */\nSolidityFunction.prototype.validateArgs = function (args) {\n    var inputArgs = args.filter(function (a) {\n      // filter the options object but not arguments that are arrays\n      return !( (utils.isObject(a) === true) &&\n                (utils.isArray(a) === false) &&\n                (utils.isBigNumber(a) === false)\n              );\n    });\n    if (inputArgs.length !== this._inputTypes.length) {\n        throw errors.InvalidNumberOfSolidityArgs();\n    }\n};\n\n/**\n * Should be used to create payload from arguments\n *\n * @method toPayload\n * @param {Array} solidity function params\n * @param {Object} optional payload options\n */\nSolidityFunction.prototype.toPayload = function (args) {\n    var options = {};\n    if (args.length > this._inputTypes.length && utils.isObject(args[args.length -1])) {\n        options = args[args.length - 1];\n    }\n    this.validateArgs(args);\n    options.to = this._address;\n    options.data = '0x' + this.signature() + coder.encodeParams(this._inputTypes, args);\n    return options;\n};\n\n/**\n * Should be used to get function signature\n *\n * @method signature\n * @return {String} function signature\n */\nSolidityFunction.prototype.signature = function () {\n    return sha3(this._name).slice(0, 8);\n};\n\n\nSolidityFunction.prototype.unpackOutput = function (output) {\n    if (!output) {\n        return;\n    }\n\n    output = output.length >= 2 ? output.slice(2) : output;\n    var result = coder.decodeParams(this._outputTypes, output);\n    return result.length === 1 ? result[0] : result;\n};\n\n/**\n * Calls a contract function.\n *\n * @method call\n * @param {...Object} Contract function arguments\n * @param {function} If the last argument is a function, the contract function\n *   call will be asynchronous, and the callback will be passed the\n *   error and result.\n * @return {String} output bytes\n */\nSolidityFunction.prototype.call = function () {\n    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n    var callback = this.extractCallback(args);\n    var defaultBlock = this.extractDefaultBlock(args);\n    var payload = this.toPayload(args);\n\n\n    if (!callback) {\n        var output = this._eth.call(payload, defaultBlock);\n        return this.unpackOutput(output);\n    }\n\n    var self = this;\n    this._eth.call(payload, defaultBlock, function (error, output) {\n        if (error) return callback(error, null);\n\n        var unpacked = null;\n        try {\n            unpacked = self.unpackOutput(output);\n        }\n        catch (e) {\n            error = e;\n        }\n\n        callback(error, unpacked);\n    });\n};\n\n/**\n * Should be used to sendTransaction to solidity function\n *\n * @method sendTransaction\n */\nSolidityFunction.prototype.sendTransaction = function () {\n    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n\n    if (payload.value > 0 && !this._payable) {\n        throw new Error('Cannot send value to non-payable function');\n    }\n\n    if (!callback) {\n        return this._eth.sendTransaction(payload);\n    }\n\n    this._eth.sendTransaction(payload, callback);\n};\n\n/**\n * Should be used to estimateGas of solidity function\n *\n * @method estimateGas\n */\nSolidityFunction.prototype.estimateGas = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n\n    if (!callback) {\n        return this._eth.estimateGas(payload);\n    }\n\n    this._eth.estimateGas(payload, callback);\n};\n\n/**\n * Return the encoded data of the call\n *\n * @method getData\n * @return {String} the encoded data\n */\nSolidityFunction.prototype.getData = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var payload = this.toPayload(args);\n\n    return payload.data;\n};\n\n/**\n * Should be used to get function display name\n *\n * @method displayName\n * @return {String} display name of the function\n */\nSolidityFunction.prototype.displayName = function () {\n    return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get function type name\n *\n * @method typeName\n * @return {String} type name of the function\n */\nSolidityFunction.prototype.typeName = function () {\n    return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be called to get rpc requests from solidity function\n *\n * @method request\n * @returns {Object}\n */\nSolidityFunction.prototype.request = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n    var format = this.unpackOutput.bind(this);\n\n    return {\n        method: this._constant ? 'eth_call' : 'eth_sendTransaction',\n        callback: callback,\n        params: [payload],\n        format: format\n    };\n};\n\n/**\n * Should be called to execute function\n *\n * @method execute\n */\nSolidityFunction.prototype.execute = function () {\n    var transaction = !this._constant;\n\n    // send transaction\n    if (transaction) {\n        return this.sendTransaction.apply(this, Array.prototype.slice.call(arguments));\n    }\n\n    // call\n    return this.call.apply(this, Array.prototype.slice.call(arguments));\n};\n\n/**\n * Should be called to attach function to contract\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityFunction.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    execute.request = this.request.bind(this);\n    execute.call = this.call.bind(this);\n    execute.sendTransaction = this.sendTransaction.bind(this);\n    execute.estimateGas = this.estimateGas.bind(this);\n    execute.getData = this.getData.bind(this);\n    var displayName = this.displayName();\n    if (!contract[displayName]) {\n        contract[displayName] = execute;\n    }\n    contract[displayName][this.typeName()] = execute; // circular!!!!\n};\n\nmodule.exports = SolidityFunction;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,gBAAD,CAAnB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,eAAD,CAAlB;AAEA;AACA;AACA;;;AACA,IAAIK,gBAAgB,GAAG,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,OAArB,EAA8B;EACjD,KAAKC,IAAL,GAAYH,GAAZ;EACA,KAAKI,WAAL,GAAmBH,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAgB,UAAUC,CAAV,EAAa;IAC5C,OAAOA,CAAC,CAACC,IAAT;EACH,CAFkB,CAAnB;EAGA,KAAKC,YAAL,GAAoBR,IAAI,CAACS,OAAL,CAAaJ,GAAb,CAAiB,UAAUC,CAAV,EAAa;IAC9C,OAAOA,CAAC,CAACC,IAAT;EACH,CAFmB,CAApB;EAGA,KAAKG,SAAL,GAAkBV,IAAI,CAACW,eAAL,KAAyB,MAAzB,IAAmCX,IAAI,CAACW,eAAL,KAAyB,MAA5D,IAAsEX,IAAI,CAACY,QAA7F;EACA,KAAKC,QAAL,GAAiBb,IAAI,CAACW,eAAL,KAAyB,SAAzB,IAAsCX,IAAI,CAACc,OAA5D;EACA,KAAKC,KAAL,GAAarB,KAAK,CAACsB,mBAAN,CAA0BhB,IAA1B,CAAb;EACA,KAAKiB,QAAL,GAAgBhB,OAAhB;AACH,CAZD;;AAcAH,gBAAgB,CAACoB,SAAjB,CAA2BC,eAA3B,GAA6C,UAAUC,IAAV,EAAgB;EACzD,IAAI1B,KAAK,CAAC2B,UAAN,CAAiBD,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,CAArB,CAAJ,EAA6C;IACzC,OAAOF,IAAI,CAACG,GAAL,EAAP,CADyC,CACtB;EACtB;AACJ,CAJD;;AAMAzB,gBAAgB,CAACoB,SAAjB,CAA2BM,mBAA3B,GAAiD,UAAUJ,IAAV,EAAgB;EAC7D,IAAIA,IAAI,CAACE,MAAL,GAAc,KAAKnB,WAAL,CAAiBmB,MAA/B,IAAyC,CAAC5B,KAAK,CAAC+B,QAAN,CAAeL,IAAI,CAACA,IAAI,CAACE,MAAL,GAAa,CAAd,CAAnB,CAA9C,EAAoF;IAChF,OAAO1B,UAAU,CAAC8B,gCAAX,CAA4CN,IAAI,CAACG,GAAL,EAA5C,CAAP,CADgF,CAChB;EACnE;AACJ,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,gBAAgB,CAACoB,SAAjB,CAA2BS,YAA3B,GAA0C,UAAUP,IAAV,EAAgB;EACtD,IAAIQ,SAAS,GAAGR,IAAI,CAACS,MAAL,CAAY,UAAUC,CAAV,EAAa;IACvC;IACA,OAAO,EAAIpC,KAAK,CAAC+B,QAAN,CAAeK,CAAf,MAAsB,IAAvB,IACCpC,KAAK,CAACqC,OAAN,CAAcD,CAAd,MAAqB,KADtB,IAECpC,KAAK,CAACsC,WAAN,CAAkBF,CAAlB,MAAyB,KAF7B,CAAP;EAID,CANe,CAAhB;;EAOA,IAAIF,SAAS,CAACN,MAAV,KAAqB,KAAKnB,WAAL,CAAiBmB,MAA1C,EAAkD;IAC9C,MAAM3B,MAAM,CAACsC,2BAAP,EAAN;EACH;AACJ,CAXD;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnC,gBAAgB,CAACoB,SAAjB,CAA2BgB,SAA3B,GAAuC,UAAUd,IAAV,EAAgB;EACnD,IAAIe,OAAO,GAAG,EAAd;;EACA,IAAIf,IAAI,CAACE,MAAL,GAAc,KAAKnB,WAAL,CAAiBmB,MAA/B,IAAyC5B,KAAK,CAAC+B,QAAN,CAAeL,IAAI,CAACA,IAAI,CAACE,MAAL,GAAa,CAAd,CAAnB,CAA7C,EAAmF;IAC/Ea,OAAO,GAAGf,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,CAAd;EACH;;EACD,KAAKK,YAAL,CAAkBP,IAAlB;EACAe,OAAO,CAACC,EAAR,GAAa,KAAKnB,QAAlB;EACAkB,OAAO,CAACE,IAAR,GAAe,OAAO,KAAKC,SAAL,EAAP,GAA0B9C,KAAK,CAAC+C,YAAN,CAAmB,KAAKpC,WAAxB,EAAqCiB,IAArC,CAAzC;EACA,OAAOe,OAAP;AACH,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;;;AACArC,gBAAgB,CAACoB,SAAjB,CAA2BoB,SAA3B,GAAuC,YAAY;EAC/C,OAAOzC,IAAI,CAAC,KAAKkB,KAAN,CAAJ,CAAiByB,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAP;AACH,CAFD;;AAKA1C,gBAAgB,CAACoB,SAAjB,CAA2BuB,YAA3B,GAA0C,UAAUC,MAAV,EAAkB;EACxD,IAAI,CAACA,MAAL,EAAa;IACT;EACH;;EAEDA,MAAM,GAAGA,MAAM,CAACpB,MAAP,IAAiB,CAAjB,GAAqBoB,MAAM,CAACF,KAAP,CAAa,CAAb,CAArB,GAAuCE,MAAhD;EACA,IAAIC,MAAM,GAAGnD,KAAK,CAACoD,YAAN,CAAmB,KAAKpC,YAAxB,EAAsCkC,MAAtC,CAAb;EACA,OAAOC,MAAM,CAACrB,MAAP,KAAkB,CAAlB,GAAsBqB,MAAM,CAAC,CAAD,CAA5B,GAAkCA,MAAzC;AACH,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA7C,gBAAgB,CAACoB,SAAjB,CAA2B2B,IAA3B,GAAkC,YAAY;EAC1C,IAAIzB,IAAI,GAAG0B,KAAK,CAAC5B,SAAN,CAAgBsB,KAAhB,CAAsBK,IAAtB,CAA2BE,SAA3B,EAAsClB,MAAtC,CAA6C,UAAUC,CAAV,EAAa;IAAC,OAAOA,CAAC,KAAKkB,SAAb;EAAyB,CAApF,CAAX;EACA,IAAIC,QAAQ,GAAG,KAAK9B,eAAL,CAAqBC,IAArB,CAAf;EACA,IAAI8B,YAAY,GAAG,KAAK1B,mBAAL,CAAyBJ,IAAzB,CAAnB;EACA,IAAI+B,OAAO,GAAG,KAAKjB,SAAL,CAAed,IAAf,CAAd;;EAGA,IAAI,CAAC6B,QAAL,EAAe;IACX,IAAIP,MAAM,GAAG,KAAKxC,IAAL,CAAU2C,IAAV,CAAeM,OAAf,EAAwBD,YAAxB,CAAb;;IACA,OAAO,KAAKT,YAAL,CAAkBC,MAAlB,CAAP;EACH;;EAED,IAAIU,IAAI,GAAG,IAAX;;EACA,KAAKlD,IAAL,CAAU2C,IAAV,CAAeM,OAAf,EAAwBD,YAAxB,EAAsC,UAAUG,KAAV,EAAiBX,MAAjB,EAAyB;IAC3D,IAAIW,KAAJ,EAAW,OAAOJ,QAAQ,CAACI,KAAD,EAAQ,IAAR,CAAf;IAEX,IAAIC,QAAQ,GAAG,IAAf;;IACA,IAAI;MACAA,QAAQ,GAAGF,IAAI,CAACX,YAAL,CAAkBC,MAAlB,CAAX;IACH,CAFD,CAGA,OAAOa,CAAP,EAAU;MACNF,KAAK,GAAGE,CAAR;IACH;;IAEDN,QAAQ,CAACI,KAAD,EAAQC,QAAR,CAAR;EACH,CAZD;AAaH,CA1BD;AA4BA;AACA;AACA;AACA;AACA;;;AACAxD,gBAAgB,CAACoB,SAAjB,CAA2BsC,eAA3B,GAA6C,YAAY;EACrD,IAAIpC,IAAI,GAAG0B,KAAK,CAAC5B,SAAN,CAAgBsB,KAAhB,CAAsBK,IAAtB,CAA2BE,SAA3B,EAAsClB,MAAtC,CAA6C,UAAUC,CAAV,EAAa;IAAC,OAAOA,CAAC,KAAKkB,SAAb;EAAyB,CAApF,CAAX;EACA,IAAIC,QAAQ,GAAG,KAAK9B,eAAL,CAAqBC,IAArB,CAAf;EACA,IAAI+B,OAAO,GAAG,KAAKjB,SAAL,CAAed,IAAf,CAAd;;EAEA,IAAI+B,OAAO,CAACM,KAAR,GAAgB,CAAhB,IAAqB,CAAC,KAAK5C,QAA/B,EAAyC;IACrC,MAAM,IAAI6C,KAAJ,CAAU,2CAAV,CAAN;EACH;;EAED,IAAI,CAACT,QAAL,EAAe;IACX,OAAO,KAAK/C,IAAL,CAAUsD,eAAV,CAA0BL,OAA1B,CAAP;EACH;;EAED,KAAKjD,IAAL,CAAUsD,eAAV,CAA0BL,OAA1B,EAAmCF,QAAnC;AACH,CAdD;AAgBA;AACA;AACA;AACA;AACA;;;AACAnD,gBAAgB,CAACoB,SAAjB,CAA2ByC,WAA3B,GAAyC,YAAY;EACjD,IAAIvC,IAAI,GAAG0B,KAAK,CAAC5B,SAAN,CAAgBsB,KAAhB,CAAsBK,IAAtB,CAA2BE,SAA3B,CAAX;EACA,IAAIE,QAAQ,GAAG,KAAK9B,eAAL,CAAqBC,IAArB,CAAf;EACA,IAAI+B,OAAO,GAAG,KAAKjB,SAAL,CAAed,IAAf,CAAd;;EAEA,IAAI,CAAC6B,QAAL,EAAe;IACX,OAAO,KAAK/C,IAAL,CAAUyD,WAAV,CAAsBR,OAAtB,CAAP;EACH;;EAED,KAAKjD,IAAL,CAAUyD,WAAV,CAAsBR,OAAtB,EAA+BF,QAA/B;AACH,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;;;AACAnD,gBAAgB,CAACoB,SAAjB,CAA2B0C,OAA3B,GAAqC,YAAY;EAC7C,IAAIxC,IAAI,GAAG0B,KAAK,CAAC5B,SAAN,CAAgBsB,KAAhB,CAAsBK,IAAtB,CAA2BE,SAA3B,CAAX;EACA,IAAII,OAAO,GAAG,KAAKjB,SAAL,CAAed,IAAf,CAAd;EAEA,OAAO+B,OAAO,CAACd,IAAf;AACH,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;;;AACAvC,gBAAgB,CAACoB,SAAjB,CAA2B2C,WAA3B,GAAyC,YAAY;EACjD,OAAOnE,KAAK,CAACoE,kBAAN,CAAyB,KAAK/C,KAA9B,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAjB,gBAAgB,CAACoB,SAAjB,CAA2B6C,QAA3B,GAAsC,YAAY;EAC9C,OAAOrE,KAAK,CAACsE,eAAN,CAAsB,KAAKjD,KAA3B,CAAP;AACH,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAjB,gBAAgB,CAACoB,SAAjB,CAA2B+C,OAA3B,GAAqC,YAAY;EAC7C,IAAI7C,IAAI,GAAG0B,KAAK,CAAC5B,SAAN,CAAgBsB,KAAhB,CAAsBK,IAAtB,CAA2BE,SAA3B,CAAX;EACA,IAAIE,QAAQ,GAAG,KAAK9B,eAAL,CAAqBC,IAArB,CAAf;EACA,IAAI+B,OAAO,GAAG,KAAKjB,SAAL,CAAed,IAAf,CAAd;EACA,IAAI8C,MAAM,GAAG,KAAKzB,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAAb;EAEA,OAAO;IACHC,MAAM,EAAE,KAAK1D,SAAL,GAAiB,UAAjB,GAA8B,qBADnC;IAEHuC,QAAQ,EAAEA,QAFP;IAGHoB,MAAM,EAAE,CAAClB,OAAD,CAHL;IAIHe,MAAM,EAAEA;EAJL,CAAP;AAMH,CAZD;AAcA;AACA;AACA;AACA;AACA;;;AACApE,gBAAgB,CAACoB,SAAjB,CAA2BoD,OAA3B,GAAqC,YAAY;EAC7C,IAAIC,WAAW,GAAG,CAAC,KAAK7D,SAAxB,CAD6C,CAG7C;;EACA,IAAI6D,WAAJ,EAAiB;IACb,OAAO,KAAKf,eAAL,CAAqBgB,KAArB,CAA2B,IAA3B,EAAiC1B,KAAK,CAAC5B,SAAN,CAAgBsB,KAAhB,CAAsBK,IAAtB,CAA2BE,SAA3B,CAAjC,CAAP;EACH,CAN4C,CAQ7C;;;EACA,OAAO,KAAKF,IAAL,CAAU2B,KAAV,CAAgB,IAAhB,EAAsB1B,KAAK,CAAC5B,SAAN,CAAgBsB,KAAhB,CAAsBK,IAAtB,CAA2BE,SAA3B,CAAtB,CAAP;AACH,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;;;AACAjD,gBAAgB,CAACoB,SAAjB,CAA2BuD,gBAA3B,GAA8C,UAAUC,QAAV,EAAoB;EAC9D,IAAIJ,OAAO,GAAG,KAAKA,OAAL,CAAaH,IAAb,CAAkB,IAAlB,CAAd;EACAG,OAAO,CAACL,OAAR,GAAkB,KAAKA,OAAL,CAAaE,IAAb,CAAkB,IAAlB,CAAlB;EACAG,OAAO,CAACzB,IAAR,GAAe,KAAKA,IAAL,CAAUsB,IAAV,CAAe,IAAf,CAAf;EACAG,OAAO,CAACd,eAAR,GAA0B,KAAKA,eAAL,CAAqBW,IAArB,CAA0B,IAA1B,CAA1B;EACAG,OAAO,CAACX,WAAR,GAAsB,KAAKA,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB,CAAtB;EACAG,OAAO,CAACV,OAAR,GAAkB,KAAKA,OAAL,CAAaO,IAAb,CAAkB,IAAlB,CAAlB;EACA,IAAIN,WAAW,GAAG,KAAKA,WAAL,EAAlB;;EACA,IAAI,CAACa,QAAQ,CAACb,WAAD,CAAb,EAA4B;IACxBa,QAAQ,CAACb,WAAD,CAAR,GAAwBS,OAAxB;EACH;;EACDI,QAAQ,CAACb,WAAD,CAAR,CAAsB,KAAKE,QAAL,EAAtB,IAAyCO,OAAzC,CAX8D,CAWZ;AACrD,CAZD;;AAcAK,MAAM,CAACC,OAAP,GAAiB9E,gBAAjB"},"metadata":{},"sourceType":"script"}
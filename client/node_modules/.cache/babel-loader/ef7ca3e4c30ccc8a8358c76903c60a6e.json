{"ast":null,"code":"import { Circle } from \"./Circle\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n  constructor(rectangle, capacity) {\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n  }\n\n  insert(point) {\n    var _a, _b, _c, _d, _e;\n\n    if (!this.rectangle.contains(point.position)) {\n      return false;\n    }\n\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    }\n\n    if (!this.divided) {\n      this.subdivide();\n    }\n\n    return (_e = ((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n  }\n\n  queryCircle(position, radius) {\n    return this.query(new Circle(position.x, position.y, radius));\n  }\n\n  queryCircleWarp(position, radius, containerOrSize) {\n    const container = containerOrSize,\n          size = containerOrSize;\n    return this.query(new CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n  }\n\n  queryRectangle(position, size) {\n    return this.query(new Rectangle(position.x, position.y, size.width, size.height));\n  }\n\n  query(range, found) {\n    var _a, _b, _c, _d;\n\n    const res = found !== null && found !== void 0 ? found : [];\n\n    if (!range.intersects(this.rectangle)) {\n      return [];\n    }\n\n    for (const p of this.points) {\n      if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius()) {\n        continue;\n      }\n\n      res.push(p.particle);\n    }\n\n    if (this.divided) {\n      (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n      (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n      (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n      (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n    }\n\n    return res;\n  }\n\n  subdivide() {\n    const x = this.rectangle.position.x,\n          y = this.rectangle.position.y,\n          w = this.rectangle.size.width,\n          h = this.rectangle.size.height,\n          capacity = this.capacity;\n    this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n    this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n    this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n    this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n    this.divided = true;\n  }\n\n}","map":{"version":3,"names":["Circle","CircleWarp","Rectangle","getDistance","QuadTree","constructor","rectangle","capacity","points","divided","insert","point","_a","_b","_c","_d","_e","contains","position","length","push","subdivide","northEast","northWest","southEast","southWest","queryCircle","radius","query","x","y","queryCircleWarp","containerOrSize","container","size","canvas","undefined","queryRectangle","width","height","range","found","res","intersects","p","particle","getRadius","w","h"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/node_modules/tsparticles/esm/Core/Utils/QuadTree.js"],"sourcesContent":["import { Circle } from \"./Circle\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize, size = containerOrSize;\n        return this.query(new CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this.points) {\n            if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius()) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this.divided) {\n            (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n            (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n            (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n            (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n        }\n        return res;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
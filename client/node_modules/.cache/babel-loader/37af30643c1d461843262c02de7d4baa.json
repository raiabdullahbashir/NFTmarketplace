{"ast":null,"code":"'use strict';\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\n\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  return error;\n};","map":{"version":3,"names":["module","exports","enhanceError","error","config","code","request","response"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/node_modules/wyvern-schemas/node_modules/axios/lib/core/enhanceError.js"],"sourcesContent":["'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,OAA3C,EAAoDC,QAApD,EAA8D;EAC7EJ,KAAK,CAACC,MAAN,GAAeA,MAAf;;EACA,IAAIC,IAAJ,EAAU;IACRF,KAAK,CAACE,IAAN,GAAaA,IAAb;EACD;;EACDF,KAAK,CAACG,OAAN,GAAgBA,OAAhB;EACAH,KAAK,CAACI,QAAN,GAAiBA,QAAjB;EACA,OAAOJ,KAAP;AACD,CARD"},"metadata":{},"sourceType":"script"}
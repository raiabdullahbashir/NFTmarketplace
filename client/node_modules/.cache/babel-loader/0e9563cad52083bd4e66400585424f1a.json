{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst axios_1 = require(\"axios\");\n\nconst Web3 = require(\"web3\");\n\nconst types_1 = require(\"../../../types\");\n\nexports.CryptoKittiesSchema = {\n  version: 1,\n  deploymentBlock: 4605167,\n  name: 'CryptoKitties',\n  description: 'The virtual kitties that started the craze.',\n  thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\n  website: 'https://cryptokitties.co',\n  fields: [{\n    name: 'ID',\n    type: 'uint256',\n    description: 'CryptoKitty number.'\n  }],\n  assetFromFields: fields => fields.ID,\n  assetToFields: asset => ({\n    ID: asset\n  }),\n  formatter: asset => __awaiter(this, void 0, void 0, function* () {\n    const response = yield axios_1.default.get(`https://api.cryptokitties.co/kitties/${asset}`).catch(err => {\n      if (err.response && (err.response.status === 404 || err.response.status === 400)) {\n        return null;\n      } else {\n        throw err;\n      }\n    });\n\n    if (response === null) {\n      return {\n        thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\n        title: 'CryptoKitty #' + asset,\n        description: '',\n        url: 'https://www.cryptokitties.co/kitty/' + asset,\n        properties: []\n      };\n    } else {\n      const data = response.data;\n      const attrs = data.enhanced_cattributes || data.cattributes || [];\n      return {\n        thumbnail: data.image_url_cdn,\n        title: 'CryptoKitty #' + asset,\n        description: data.bio,\n        url: 'https://www.cryptokitties.co/kitty/' + asset,\n        properties: attrs.map(c => ({\n          key: c.type,\n          kind: 'string',\n          value: c.description\n        }))\n      };\n    }\n  }),\n  functions: {\n    transfer: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'transfer',\n      payable: false,\n      constant: false,\n      stateMutability: types_1.StateMutability.Nonpayable,\n      target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Replaceable,\n        name: '_to',\n        type: 'address'\n      }, {\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: Web3.AbiType.Function,\n      name: 'ownerOf',\n      payable: false,\n      constant: true,\n      stateMutability: types_1.StateMutability.View,\n      target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n      inputs: [{\n        kind: types_1.FunctionInputKind.Asset,\n        name: '_tokenId',\n        type: 'uint256',\n        value: asset\n      }],\n      outputs: [{\n        kind: types_1.FunctionOutputKind.Owner,\n        name: 'owner',\n        type: 'address'\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: [{\n      type: Web3.AbiType.Event,\n      name: 'Transfer',\n      target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n      anonymous: false,\n      inputs: [{\n        kind: types_1.EventInputKind.Source,\n        indexed: false,\n        name: 'from',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Destination,\n        indexed: false,\n        name: 'to',\n        type: 'address'\n      }, {\n        kind: types_1.EventInputKind.Asset,\n        indexed: false,\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      assetFromInputs: inputs => __awaiter(this, void 0, void 0, function* () {\n        return inputs.tokenId;\n      })\n    }]\n  },\n  hash: a => a\n};","map":{"version":3,"sources":["../../../../src/schemas/main/CryptoKitties/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst axios_1 = require(\"axios\");\r\nconst Web3 = require(\"web3\");\r\nconst types_1 = require(\"../../../types\");\r\nexports.CryptoKittiesSchema = {\r\n    version: 1,\r\n    deploymentBlock: 4605167,\r\n    name: 'CryptoKitties',\r\n    description: 'The virtual kitties that started the craze.',\r\n    thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\r\n    website: 'https://cryptokitties.co',\r\n    fields: [\r\n        { name: 'ID', type: 'uint256', description: 'CryptoKitty number.' },\r\n    ],\r\n    assetFromFields: (fields) => fields.ID,\r\n    assetToFields: asset => ({ ID: asset }),\r\n    formatter: (asset) => __awaiter(this, void 0, void 0, function* () {\r\n        const response = yield axios_1.default.get(`https://api.cryptokitties.co/kitties/${asset}`).catch(err => {\r\n            if (err.response && (err.response.status === 404 || err.response.status === 400)) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        });\r\n        if (response === null) {\r\n            return {\r\n                thumbnail: 'https://www.cryptokitties.co/images/kitty-eth.svg',\r\n                title: 'CryptoKitty #' + asset,\r\n                description: '',\r\n                url: 'https://www.cryptokitties.co/kitty/' + asset,\r\n                properties: [],\r\n            };\r\n        }\r\n        else {\r\n            const data = response.data;\r\n            const attrs = data.enhanced_cattributes || data.cattributes || [];\r\n            return {\r\n                thumbnail: data.image_url_cdn,\r\n                title: 'CryptoKitty #' + asset,\r\n                description: data.bio,\r\n                url: 'https://www.cryptokitties.co/kitty/' + asset,\r\n                properties: attrs.map((c) => ({\r\n                    key: c.type,\r\n                    kind: 'string',\r\n                    value: c.description,\r\n                })),\r\n            };\r\n        }\r\n    }),\r\n    functions: {\r\n        transfer: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'transfer',\r\n            payable: false,\r\n            constant: false,\r\n            stateMutability: types_1.StateMutability.Nonpayable,\r\n            target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Replaceable, name: '_to', type: 'address' },\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\r\n            ],\r\n            outputs: [],\r\n        }),\r\n        ownerOf: asset => ({\r\n            type: Web3.AbiType.Function,\r\n            name: 'ownerOf',\r\n            payable: false,\r\n            constant: true,\r\n            stateMutability: types_1.StateMutability.View,\r\n            target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\r\n            inputs: [\r\n                { kind: types_1.FunctionInputKind.Asset, name: '_tokenId', type: 'uint256', value: asset },\r\n            ],\r\n            outputs: [\r\n                { kind: types_1.FunctionOutputKind.Owner, name: 'owner', type: 'address' },\r\n            ],\r\n        }),\r\n        assetsOfOwnerByIndex: [],\r\n    },\r\n    events: {\r\n        transfer: [{\r\n                type: Web3.AbiType.Event,\r\n                name: 'Transfer',\r\n                target: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\r\n                anonymous: false,\r\n                inputs: [\r\n                    { kind: types_1.EventInputKind.Source, indexed: false, name: 'from', type: 'address' },\r\n                    { kind: types_1.EventInputKind.Destination, indexed: false, name: 'to', type: 'address' },\r\n                    { kind: types_1.EventInputKind.Asset, indexed: false, name: 'tokenId', type: 'uint256' },\r\n                ],\r\n                assetFromInputs: (inputs) => __awaiter(this, void 0, void 0, function* () { return inputs.tokenId; }),\r\n            }],\r\n    },\r\n    hash: a => a,\r\n};\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}
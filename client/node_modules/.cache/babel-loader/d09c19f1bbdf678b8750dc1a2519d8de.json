{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/** @file jsonrpc.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n *   Aaron Kumavis <aaron@kumavis.me>\n * @date 2015\n */\n// Initialize Jsonrpc as a simple object with utility functions.\nvar Jsonrpc = {\n  messageId: 0\n};\n/**\n * Should be called to valid json create payload object\n *\n * @method toPayload\n * @param {Function} method of jsonrpc call, required\n * @param {Array} params, an array of method params, optional\n * @returns {Object} valid jsonrpc payload object\n */\n\nJsonrpc.toPayload = function (method, params) {\n  if (!method) console.error('jsonrpc method should be specified!'); // advance message ID\n\n  Jsonrpc.messageId++;\n  return {\n    jsonrpc: '2.0',\n    id: Jsonrpc.messageId,\n    method: method,\n    params: params || []\n  };\n};\n/**\n * Should be called to check if jsonrpc response is valid\n *\n * @method isValidResponse\n * @param {Object}\n * @returns {Boolean} true if response is valid, otherwise false\n */\n\n\nJsonrpc.isValidResponse = function (response) {\n  return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);\n\n  function validateSingleMessage(message) {\n    return !!message && !message.error && message.jsonrpc === '2.0' && typeof message.id === 'number' && message.result !== undefined; // only undefined is not valid json object\n  }\n};\n/**\n * Should be called to create batch payload object\n *\n * @method toBatchPayload\n * @param {Array} messages, an array of objects with method (required) and params (optional) fields\n * @returns {Array} batch payload\n */\n\n\nJsonrpc.toBatchPayload = function (messages) {\n  return messages.map(function (message) {\n    return Jsonrpc.toPayload(message.method, message.params);\n  });\n};\n\nmodule.exports = Jsonrpc;","map":{"version":3,"names":["Jsonrpc","messageId","toPayload","method","params","console","error","jsonrpc","id","isValidResponse","response","Array","isArray","every","validateSingleMessage","message","result","undefined","toBatchPayload","messages","map","module","exports"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/node_modules/wyvern-schemas/node_modules/web3/lib/web3/jsonrpc.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file jsonrpc.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n *   Aaron Kumavis <aaron@kumavis.me>\n * @date 2015\n */\n\n// Initialize Jsonrpc as a simple object with utility functions.\nvar Jsonrpc = {\n    messageId: 0\n};\n\n/**\n * Should be called to valid json create payload object\n *\n * @method toPayload\n * @param {Function} method of jsonrpc call, required\n * @param {Array} params, an array of method params, optional\n * @returns {Object} valid jsonrpc payload object\n */\nJsonrpc.toPayload = function (method, params) {\n    if (!method)\n        console.error('jsonrpc method should be specified!');\n\n    // advance message ID\n    Jsonrpc.messageId++;\n\n    return {\n        jsonrpc: '2.0',\n        id: Jsonrpc.messageId,\n        method: method,\n        params: params || []\n    };\n};\n\n/**\n * Should be called to check if jsonrpc response is valid\n *\n * @method isValidResponse\n * @param {Object}\n * @returns {Boolean} true if response is valid, otherwise false\n */\nJsonrpc.isValidResponse = function (response) {\n    return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);\n\n    function validateSingleMessage(message){\n      return !!message &&\n        !message.error &&\n        message.jsonrpc === '2.0' &&\n        typeof message.id === 'number' &&\n        message.result !== undefined; // only undefined is not valid json object\n    }\n};\n\n/**\n * Should be called to create batch payload object\n *\n * @method toBatchPayload\n * @param {Array} messages, an array of objects with method (required) and params (optional) fields\n * @returns {Array} batch payload\n */\nJsonrpc.toBatchPayload = function (messages) {\n    return messages.map(function (message) {\n        return Jsonrpc.toPayload(message.method, message.params);\n    });\n};\n\nmodule.exports = Jsonrpc;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAIA,OAAO,GAAG;EACVC,SAAS,EAAE;AADD,CAAd;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,OAAO,CAACE,SAAR,GAAoB,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;EAC1C,IAAI,CAACD,MAAL,EACIE,OAAO,CAACC,KAAR,CAAc,qCAAd,EAFsC,CAI1C;;EACAN,OAAO,CAACC,SAAR;EAEA,OAAO;IACHM,OAAO,EAAE,KADN;IAEHC,EAAE,EAAER,OAAO,CAACC,SAFT;IAGHE,MAAM,EAAEA,MAHL;IAIHC,MAAM,EAAEA,MAAM,IAAI;EAJf,CAAP;AAMH,CAbD;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAJ,OAAO,CAACS,eAAR,GAA0B,UAAUC,QAAV,EAAoB;EAC1C,OAAOC,KAAK,CAACC,OAAN,CAAcF,QAAd,IAA0BA,QAAQ,CAACG,KAAT,CAAeC,qBAAf,CAA1B,GAAkEA,qBAAqB,CAACJ,QAAD,CAA9F;;EAEA,SAASI,qBAAT,CAA+BC,OAA/B,EAAuC;IACrC,OAAO,CAAC,CAACA,OAAF,IACL,CAACA,OAAO,CAACT,KADJ,IAELS,OAAO,CAACR,OAAR,KAAoB,KAFf,IAGL,OAAOQ,OAAO,CAACP,EAAf,KAAsB,QAHjB,IAILO,OAAO,CAACC,MAAR,KAAmBC,SAJrB,CADqC,CAKL;EACjC;AACJ,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAjB,OAAO,CAACkB,cAAR,GAAyB,UAAUC,QAAV,EAAoB;EACzC,OAAOA,QAAQ,CAACC,GAAT,CAAa,UAAUL,OAAV,EAAmB;IACnC,OAAOf,OAAO,CAACE,SAAR,CAAkBa,OAAO,CAACZ,MAA1B,EAAkCY,OAAO,CAACX,MAA1C,CAAP;EACH,CAFM,CAAP;AAGH,CAJD;;AAMAiB,MAAM,CAACC,OAAP,GAAiBtB,OAAjB"},"metadata":{},"sourceType":"script"}
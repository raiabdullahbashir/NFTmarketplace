{"ast":null,"code":"import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\nexport const fetchNftsBreakdown = authorId => async (dispatch, getState) => {\n  //access the state\n  const state = getState();\n  console.log(state);\n  dispatch(actions.getNftBreakdown.request(Canceler.cancel));\n\n  try {\n    let filter = authorId ? 'author=' + authorId : '';\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.nfts}?${filter}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getNftBreakdown.success(data));\n  } catch (err) {\n    dispatch(actions.getNftBreakdown.failure(err));\n  }\n};\nexport const fetchNftShowcase = () => async dispatch => {\n  dispatch(actions.getNftShowcase.request(Canceler.cancel));\n\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.nftShowcases}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getNftShowcase.success(data));\n  } catch (err) {\n    dispatch(actions.getNftShowcase.failure(err));\n  }\n};\nexport const fetchNftDetail = nftId => async dispatch => {\n  dispatch(actions.getNftDetail.request(Canceler.cancel));\n\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}/nft_detail.json`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getNftDetail.success(data));\n  } catch (err) {\n    dispatch(actions.getNftDetail.failure(err));\n  }\n};","map":{"version":3,"names":["Axios","Canceler","actions","api","fetchNftsBreakdown","authorId","dispatch","getState","state","console","log","getNftBreakdown","request","cancel","filter","data","get","baseUrl","nfts","cancelToken","token","params","success","err","failure","fetchNftShowcase","getNftShowcase","nftShowcases","fetchNftDetail","nftId","getNftDetail"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/src/store/actions/thunks/nfts.js"],"sourcesContent":["import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\n\nexport const fetchNftsBreakdown = (authorId) => async (dispatch, getState) => {\n  \n  //access the state\n  const state = getState();\n  console.log(state);\n\n  dispatch(actions.getNftBreakdown.request(Canceler.cancel));\n\n  try {\n    let filter = authorId ? 'author='+authorId : '';\n    const { data } = await Axios.get(`${api.baseUrl}${api.nfts}?${filter}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftBreakdown.success(data));\n  } catch (err) {\n    dispatch(actions.getNftBreakdown.failure(err));\n  }\n};\n\nexport const fetchNftShowcase = () => async (dispatch) => {\n\n  dispatch(actions.getNftShowcase.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.nftShowcases}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftShowcase.success(data));\n  } catch (err) {\n    dispatch(actions.getNftShowcase.failure(err));\n  }\n};\n\nexport const fetchNftDetail = (nftId) => async (dispatch) => {\n\n  dispatch(actions.getNftDetail.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}/nft_detail.json`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftDetail.success(data));\n  } catch (err) {\n    dispatch(actions.getNftDetail.failure(err));\n  }\n};\n"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,qBAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,QAAD,IAAc,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAE5E;EACA,MAAMC,KAAK,GAAGD,QAAQ,EAAtB;EACAE,OAAO,CAACC,GAAR,CAAYF,KAAZ;EAEAF,QAAQ,CAACJ,OAAO,CAACS,eAAR,CAAwBC,OAAxB,CAAgCX,QAAQ,CAACY,MAAzC,CAAD,CAAR;;EAEA,IAAI;IACF,IAAIC,MAAM,GAAGT,QAAQ,GAAG,YAAUA,QAAb,GAAwB,EAA7C;IACA,MAAM;MAAEU;IAAF,IAAW,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAEb,GAAG,CAACc,OAAQ,GAAEd,GAAG,CAACe,IAAK,IAAGJ,MAAO,EAA9C,EAAiD;MACtEK,WAAW,EAAElB,QAAQ,CAACmB,KADgD;MAEtEC,MAAM,EAAE;IAF8D,CAAjD,CAAvB;IAKAf,QAAQ,CAACJ,OAAO,CAACS,eAAR,CAAwBW,OAAxB,CAAgCP,IAAhC,CAAD,CAAR;EACD,CARD,CAQE,OAAOQ,GAAP,EAAY;IACZjB,QAAQ,CAACJ,OAAO,CAACS,eAAR,CAAwBa,OAAxB,CAAgCD,GAAhC,CAAD,CAAR;EACD;AACF,CAnBM;AAqBP,OAAO,MAAME,gBAAgB,GAAG,MAAM,MAAOnB,QAAP,IAAoB;EAExDA,QAAQ,CAACJ,OAAO,CAACwB,cAAR,CAAuBd,OAAvB,CAA+BX,QAAQ,CAACY,MAAxC,CAAD,CAAR;;EAEA,IAAI;IACF,MAAM;MAAEE;IAAF,IAAW,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAEb,GAAG,CAACc,OAAQ,GAAEd,GAAG,CAACwB,YAAa,EAA5C,EAA+C;MACpER,WAAW,EAAElB,QAAQ,CAACmB,KAD8C;MAEpEC,MAAM,EAAE;IAF4D,CAA/C,CAAvB;IAKAf,QAAQ,CAACJ,OAAO,CAACwB,cAAR,CAAuBJ,OAAvB,CAA+BP,IAA/B,CAAD,CAAR;EACD,CAPD,CAOE,OAAOQ,GAAP,EAAY;IACZjB,QAAQ,CAACJ,OAAO,CAACwB,cAAR,CAAuBF,OAAvB,CAA+BD,GAA/B,CAAD,CAAR;EACD;AACF,CAdM;AAgBP,OAAO,MAAMK,cAAc,GAAIC,KAAD,IAAW,MAAOvB,QAAP,IAAoB;EAE3DA,QAAQ,CAACJ,OAAO,CAAC4B,YAAR,CAAqBlB,OAArB,CAA6BX,QAAQ,CAACY,MAAtC,CAAD,CAAR;;EAEA,IAAI;IACF,MAAM;MAAEE;IAAF,IAAW,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAEb,GAAG,CAACc,OAAQ,kBAAzB,EAA4C;MACjEE,WAAW,EAAElB,QAAQ,CAACmB,KAD2C;MAEjEC,MAAM,EAAE;IAFyD,CAA5C,CAAvB;IAKAf,QAAQ,CAACJ,OAAO,CAAC4B,YAAR,CAAqBR,OAArB,CAA6BP,IAA7B,CAAD,CAAR;EACD,CAPD,CAOE,OAAOQ,GAAP,EAAY;IACZjB,QAAQ,CAACJ,OAAO,CAAC4B,YAAR,CAAqBN,OAArB,CAA6BD,GAA7B,CAAD,CAAR;EACD;AACF,CAdM"},"metadata":{},"sourceType":"module"}
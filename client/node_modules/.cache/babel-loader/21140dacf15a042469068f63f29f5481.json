{"ast":null,"code":"import ACTIONS from \"./../index\";\nimport axios from \"axios\";\nexport const dispatchLogin = () => {\n  return {\n    type: ACTIONS.LOGIN\n  };\n};\nexport const fetchUser = async token => {\n  const res = await axios.get(\"http:///user/info\", {\n    headers: {\n      Authorization: token\n    }\n  });\n  return res;\n};\nexport const dispatchGetUser = res => {\n  return {\n    type: ACTIONS.GET_USER,\n    payload: {\n      user: res.data,\n      isAdmin: res.data.role === \"admin\" ? true : false\n    }\n  };\n};","map":{"version":3,"names":["ACTIONS","axios","dispatchLogin","type","LOGIN","fetchUser","token","res","get","headers","Authorization","dispatchGetUser","GET_USER","payload","user","data","isAdmin","role"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/src/store/actions/thunks/authAction.js"],"sourcesContent":["import ACTIONS from \"./../index\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const dispatchLogin = () => {\r\n  return {\r\n    type: ACTIONS.LOGIN,\r\n  };\r\n};\r\n\r\nexport const fetchUser = async (token) => {\r\n  const res = await axios.get(\"http:///user/info\", {\r\n    headers: { Authorization: token },\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const dispatchGetUser = (res) => {\r\n  return {\r\n    type: ACTIONS.GET_USER,\r\n    payload: {\r\n      user: res.data,\r\n      isAdmin: res.data.role === \"admin\" ? true : false,\r\n    },\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO;IACLC,IAAI,EAAEH,OAAO,CAACI;EADT,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAG,MAAOC,KAAP,IAAiB;EACxC,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,mBAAV,EAA+B;IAC/CC,OAAO,EAAE;MAAEC,aAAa,EAAEJ;IAAjB;EADsC,CAA/B,CAAlB;EAGA,OAAOC,GAAP;AACD,CALM;AAOP,OAAO,MAAMI,eAAe,GAAIJ,GAAD,IAAS;EACtC,OAAO;IACLJ,IAAI,EAAEH,OAAO,CAACY,QADT;IAELC,OAAO,EAAE;MACPC,IAAI,EAAEP,GAAG,CAACQ,IADH;MAEPC,OAAO,EAAET,GAAG,CAACQ,IAAJ,CAASE,IAAT,KAAkB,OAAlB,GAA4B,IAA5B,GAAmC;IAFrC;EAFJ,CAAP;AAOD,CARM"},"metadata":{},"sourceType":"module"}
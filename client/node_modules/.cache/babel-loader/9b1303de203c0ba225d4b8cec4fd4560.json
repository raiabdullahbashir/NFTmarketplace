{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiab\\\\Documents\\\\Logics Yard\\\\NFT code daniyal\\\\NFT code\\\\src\\\\components\\\\components\\\\Opensea\\\\Column.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from 'react';\nimport Card from './Card';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider } from '../../../core/opensea/constants'; //react functional component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Column = _ref => {\n  _s();\n\n  let {\n    showLoadMore = true,\n    side = null,\n    owner = null,\n    ownerAddress = null\n  } = _ref;\n  const [height, setHeight] = useState(0);\n  const [page, setPage] = useState(1);\n  const [orderList, setOrderList] = useState();\n  const [currentSide, setCurrentSide] = useState(side);\n  const [currentOwner, setCurrentOwner] = useState(owner);\n  const [address, setAddress] = useState();\n\n  const onImgLoad = _ref2 => {\n    let {\n      target: img\n    } = _ref2;\n    let currentHeight = height;\n\n    if (currentHeight < img.offsetHeight) {\n      setHeight(img.offsetHeight);\n    }\n  };\n\n  const fetchData = async function () {\n    let resetData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const seaport = new OpenSeaPort(web3Provider, {\n      networkName: Network.Rinkeby\n    });\n    const query = {// Possible query options:\n      // 'bundled'\n      // 'asset_contract_address'\n      // 'taker'\n      // 'token_id'\n      // 'token_ids'\n      // 'sale_kind'\n    };\n\n    if (side !== null) {\n      query.side = side;\n    }\n\n    if (resetData) {\n      query.offset = 0;\n    }\n\n    if (owner !== null || ownerAddress !== null) {\n      if (owner) {\n        query.owner = address;\n      } else {\n        query.maker = address;\n      }\n\n      if (ownerAddress) {\n        query.owner = ownerAddress;\n      }\n    }\n\n    console.log(query);\n    const {\n      orders\n    } = await seaport.api.getOrders(query, currentPage);\n    let nfts = orderList ? !resetData ? [...orderList, ...orders] : orders : orders;\n    setOrderList(nfts);\n  };\n\n  const getAddress = async () => {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      setAddress(addressArray[0]);\n    } catch (err) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAddress(addressArray[0]);\n      } catch (errRequest) {\n        console.log(errRequest);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getAddress();\n\n    if (owner !== currentOwner) {\n      setCurrentOwner(owner);\n    }\n\n    if (side !== currentSide) {\n      setCurrentSide(side);\n    }\n\n    if (owner !== currentOwner || side !== currentSide) {\n      fetchData(true);\n      setPage(1);\n    } else {\n      fetchData();\n    }\n  }, [side, owner]);\n\n  const loadMore = () => {\n    setPage(page + 1);\n    fetchData(false, page + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [orderList && orderList.map((nft, index) => /*#__PURE__*/_jsxDEV(Card, {\n      nft: nft,\n      onImgLoad: onImgLoad,\n      height: height\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)), showLoadMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer-single\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: loadMore,\n        className: \"btn-main lead m-auto\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Column, \"ADrRRMNTPiL6TZ5oF0Jv3iYMxqw=\");\n\n_c = Column;\nexport default _c2 = /*#__PURE__*/memo(Column);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Column\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useEffect","useState","Card","OpenSeaPort","Network","web3Provider","Column","showLoadMore","side","owner","ownerAddress","height","setHeight","page","setPage","orderList","setOrderList","currentSide","setCurrentSide","currentOwner","setCurrentOwner","address","setAddress","onImgLoad","target","img","currentHeight","offsetHeight","fetchData","resetData","currentPage","seaport","networkName","Rinkeby","query","offset","maker","console","log","orders","api","getOrders","nfts","getAddress","addressArray","window","ethereum","request","method","err","errRequest","loadMore","map","nft","index"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/src/components/components/Opensea/Column.js"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport Card from './Card';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider } from '../../../core/opensea/constants';\n\n//react functional component\nconst Column = ({ showLoadMore = true, side = null, owner = null, ownerAddress = null }) => {\n    const [height, setHeight] = useState(0);\n    const [page, setPage] = useState(1);\n    const [orderList, setOrderList] = useState();\n    const [currentSide, setCurrentSide] = useState(side);\n    const [currentOwner, setCurrentOwner] = useState(owner);\n    const [address, setAddress] = useState();\n\n\n    const onImgLoad = ({target:img}) => {\n        let currentHeight = height;\n        if(currentHeight < img.offsetHeight) {\n            setHeight(img.offsetHeight);\n        }\n    }\n\n    const fetchData = async (resetData = false, currentPage = 1) => {\n        const seaport = new OpenSeaPort(web3Provider, {\n            networkName: Network.Rinkeby\n        });\n\n        const query = {\n            // Possible query options:\n            // 'bundled'\n            // 'asset_contract_address'\n            // 'taker'\n            // 'token_id'\n            // 'token_ids'\n            // 'sale_kind'\n            \n        };\n        if(side !== null) {\n            query.side = side;\n        }\n        if(resetData) {\n            query.offset = 0;\n        }\n        if(owner !== null || ownerAddress !== null) {\n            if (owner) {\n                query.owner = address;\n            } else {\n                query.maker = address;\n            }\n            if(ownerAddress) {\n                query.owner = ownerAddress;\n            }\n        }\n        console.log(query);\n\n        const { orders } = await seaport.api.getOrders(query, currentPage)\n        let nfts = orderList ? !resetData ? [...orderList, ...orders] : orders : orders;\n        setOrderList(nfts);\n    }\n\n    const getAddress = async () => {\n        try {\n            const addressArray = await window.ethereum.request({\n              method: \"eth_accounts\",\n            });\n            setAddress(addressArray[0]);\n        } catch (err) {\n            try {\n                const addressArray = await window.ethereum.request({\n                    method: \"eth_requestAccounts\",\n                });\n                setAddress(addressArray[0]);\n            } catch (errRequest) {\n                console.log(errRequest)\n            }\n        }\n    }\n    \n    useEffect(() => {\n        getAddress();\n        if(owner !== currentOwner) {\n            setCurrentOwner(owner);\n        }\n        if(side !== currentSide) {\n            setCurrentSide(side);\n        } \n        if(owner !== currentOwner || side !== currentSide) {\n            fetchData(true);\n            setPage(1);\n        }\n        else {\n            fetchData();\n        }\n    }, [side, owner]);\n\n    const loadMore = () => {\n        setPage(page+1);\n        fetchData(false, page+1);\n    }\n\n    return (\n        <div className='row'>\n            {orderList && orderList.map( (nft, index) => (\n                <Card nft={nft} key={index} onImgLoad={onImgLoad} height={height} />\n            ))}\n            { showLoadMore &&\n                <div className='col-lg-12'>\n                    <div className=\"spacer-single\"></div>\n                    <span onClick={loadMore} className=\"btn-main lead m-auto\">Load More</span>\n                </div>\n            }\n        </div>              \n    );\n};\n\nexport default memo(Column);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*!\n * web3.js - Ethereum JavaScript API\n *\n * @license lgpl-3.0\n * @see https://github.com/ethereum/web3.js\n*/\n\n/*\n * This file is part of web3.js.\n * \n * web3.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * web3.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @file web3.js\n * @authors:\n *   Jeffrey Wilcke <jeff@ethdev.com>\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n *   Gav Wood <g@ethdev.com>\n * @date 2014\n */\nvar RequestManager = require('./web3/requestmanager');\n\nvar Iban = require('./web3/iban');\n\nvar Eth = require('./web3/methods/eth');\n\nvar DB = require('./web3/methods/db');\n\nvar Shh = require('./web3/methods/shh');\n\nvar Net = require('./web3/methods/net');\n\nvar Personal = require('./web3/methods/personal');\n\nvar Swarm = require('./web3/methods/swarm');\n\nvar Settings = require('./web3/settings');\n\nvar version = require('./version.json');\n\nvar utils = require('./utils/utils');\n\nvar sha3 = require('./utils/sha3');\n\nvar extend = require('./web3/extend');\n\nvar Batch = require('./web3/batch');\n\nvar Property = require('./web3/property');\n\nvar HttpProvider = require('./web3/httpprovider');\n\nvar IpcProvider = require('./web3/ipcprovider');\n\nvar BigNumber = require('bignumber.js');\n\nfunction Web3(provider) {\n  this._requestManager = new RequestManager(provider);\n  this.currentProvider = provider;\n  this.eth = new Eth(this);\n  this.db = new DB(this);\n  this.shh = new Shh(this);\n  this.net = new Net(this);\n  this.personal = new Personal(this);\n  this.bzz = new Swarm(this);\n  this.settings = new Settings();\n  this.version = {\n    api: version.version\n  };\n  this.providers = {\n    HttpProvider: HttpProvider,\n    IpcProvider: IpcProvider\n  };\n  this._extend = extend(this);\n\n  this._extend({\n    properties: properties()\n  });\n} // expose providers on the class\n\n\nWeb3.providers = {\n  HttpProvider: HttpProvider,\n  IpcProvider: IpcProvider\n};\n\nWeb3.prototype.setProvider = function (provider) {\n  this._requestManager.setProvider(provider);\n\n  this.currentProvider = provider;\n};\n\nWeb3.prototype.reset = function (keepIsSyncing) {\n  this._requestManager.reset(keepIsSyncing);\n\n  this.settings = new Settings();\n};\n\nWeb3.prototype.BigNumber = BigNumber;\nWeb3.prototype.toHex = utils.toHex;\nWeb3.prototype.toAscii = utils.toAscii;\nWeb3.prototype.toUtf8 = utils.toUtf8;\nWeb3.prototype.fromAscii = utils.fromAscii;\nWeb3.prototype.fromUtf8 = utils.fromUtf8;\nWeb3.prototype.toDecimal = utils.toDecimal;\nWeb3.prototype.fromDecimal = utils.fromDecimal;\nWeb3.prototype.toBigNumber = utils.toBigNumber;\nWeb3.prototype.toWei = utils.toWei;\nWeb3.prototype.fromWei = utils.fromWei;\nWeb3.prototype.isAddress = utils.isAddress;\nWeb3.prototype.isChecksumAddress = utils.isChecksumAddress;\nWeb3.prototype.toChecksumAddress = utils.toChecksumAddress;\nWeb3.prototype.isIBAN = utils.isIBAN;\nWeb3.prototype.padLeft = utils.padLeft;\nWeb3.prototype.padRight = utils.padRight;\n\nWeb3.prototype.sha3 = function (string, options) {\n  return '0x' + sha3(string, options);\n};\n/**\n * Transforms direct icap to address\n */\n\n\nWeb3.prototype.fromICAP = function (icap) {\n  var iban = new Iban(icap);\n  return iban.address();\n};\n\nvar properties = function () {\n  return [new Property({\n    name: 'version.node',\n    getter: 'web3_clientVersion'\n  }), new Property({\n    name: 'version.network',\n    getter: 'net_version',\n    inputFormatter: utils.toDecimal\n  }), new Property({\n    name: 'version.ethereum',\n    getter: 'eth_protocolVersion',\n    inputFormatter: utils.toDecimal\n  }), new Property({\n    name: 'version.whisper',\n    getter: 'shh_version',\n    inputFormatter: utils.toDecimal\n  })];\n};\n\nWeb3.prototype.isConnected = function () {\n  return this.currentProvider && this.currentProvider.isConnected();\n};\n\nWeb3.prototype.createBatch = function () {\n  return new Batch(this);\n};\n\nmodule.exports = Web3;","map":{"version":3,"names":["RequestManager","require","Iban","Eth","DB","Shh","Net","Personal","Swarm","Settings","version","utils","sha3","extend","Batch","Property","HttpProvider","IpcProvider","BigNumber","Web3","provider","_requestManager","currentProvider","eth","db","shh","net","personal","bzz","settings","api","providers","_extend","properties","prototype","setProvider","reset","keepIsSyncing","toHex","toAscii","toUtf8","fromAscii","fromUtf8","toDecimal","fromDecimal","toBigNumber","toWei","fromWei","isAddress","isChecksumAddress","toChecksumAddress","isIBAN","padLeft","padRight","string","options","fromICAP","icap","iban","address","name","getter","inputFormatter","isConnected","createBatch","module","exports"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/node_modules/@0xproject/web3-wrapper/node_modules/web3/lib/web3.js"],"sourcesContent":["/*!\n * web3.js - Ethereum JavaScript API\n *\n * @license lgpl-3.0\n * @see https://github.com/ethereum/web3.js\n*/\n\n/*\n * This file is part of web3.js.\n * \n * web3.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * web3.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @file web3.js\n * @authors:\n *   Jeffrey Wilcke <jeff@ethdev.com>\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n *   Gav Wood <g@ethdev.com>\n * @date 2014\n */\n\nvar RequestManager = require('./web3/requestmanager');\nvar Iban = require('./web3/iban');\nvar Eth = require('./web3/methods/eth');\nvar DB = require('./web3/methods/db');\nvar Shh = require('./web3/methods/shh');\nvar Net = require('./web3/methods/net');\nvar Personal = require('./web3/methods/personal');\nvar Swarm = require('./web3/methods/swarm');\nvar Settings = require('./web3/settings');\nvar version = require('./version.json');\nvar utils = require('./utils/utils');\nvar sha3 = require('./utils/sha3');\nvar extend = require('./web3/extend');\nvar Batch = require('./web3/batch');\nvar Property = require('./web3/property');\nvar HttpProvider = require('./web3/httpprovider');\nvar IpcProvider = require('./web3/ipcprovider');\nvar BigNumber = require('bignumber.js');\n\n\n\nfunction Web3 (provider) {\n    this._requestManager = new RequestManager(provider);\n    this.currentProvider = provider;\n    this.eth = new Eth(this);\n    this.db = new DB(this);\n    this.shh = new Shh(this);\n    this.net = new Net(this);\n    this.personal = new Personal(this);\n    this.bzz = new Swarm(this);\n    this.settings = new Settings();\n    this.version = {\n        api: version.version\n    };\n    this.providers = {\n        HttpProvider: HttpProvider,\n        IpcProvider: IpcProvider\n    };\n    this._extend = extend(this);\n    this._extend({\n        properties: properties()\n    });\n}\n\n// expose providers on the class\nWeb3.providers = {\n    HttpProvider: HttpProvider,\n    IpcProvider: IpcProvider\n};\n\nWeb3.prototype.setProvider = function (provider) {\n    this._requestManager.setProvider(provider);\n    this.currentProvider = provider;\n};\n\nWeb3.prototype.reset = function (keepIsSyncing) {\n    this._requestManager.reset(keepIsSyncing);\n    this.settings = new Settings();\n};\n\nWeb3.prototype.BigNumber = BigNumber;\nWeb3.prototype.toHex = utils.toHex;\nWeb3.prototype.toAscii = utils.toAscii;\nWeb3.prototype.toUtf8 = utils.toUtf8;\nWeb3.prototype.fromAscii = utils.fromAscii;\nWeb3.prototype.fromUtf8 = utils.fromUtf8;\nWeb3.prototype.toDecimal = utils.toDecimal;\nWeb3.prototype.fromDecimal = utils.fromDecimal;\nWeb3.prototype.toBigNumber = utils.toBigNumber;\nWeb3.prototype.toWei = utils.toWei;\nWeb3.prototype.fromWei = utils.fromWei;\nWeb3.prototype.isAddress = utils.isAddress;\nWeb3.prototype.isChecksumAddress = utils.isChecksumAddress;\nWeb3.prototype.toChecksumAddress = utils.toChecksumAddress;\nWeb3.prototype.isIBAN = utils.isIBAN;\nWeb3.prototype.padLeft = utils.padLeft;\nWeb3.prototype.padRight = utils.padRight;\n\n\nWeb3.prototype.sha3 = function(string, options) {\n    return '0x' + sha3(string, options);\n};\n\n/**\n * Transforms direct icap to address\n */\nWeb3.prototype.fromICAP = function (icap) {\n    var iban = new Iban(icap);\n    return iban.address();\n};\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'version.node',\n            getter: 'web3_clientVersion'\n        }),\n        new Property({\n            name: 'version.network',\n            getter: 'net_version',\n            inputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'version.ethereum',\n            getter: 'eth_protocolVersion',\n            inputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'version.whisper',\n            getter: 'shh_version',\n            inputFormatter: utils.toDecimal\n        })\n    ];\n};\n\nWeb3.prototype.isConnected = function(){\n    return (this.currentProvider && this.currentProvider.isConnected());\n};\n\nWeb3.prototype.createBatch = function () {\n    return new Batch(this);\n};\n\nmodule.exports = Web3;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nexport class PocketProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    const apiKeyObj = {\n      applicationId: null,\n      loadBalancer: true,\n      applicationSecretKey: null\n    }; // Parse applicationId and applicationSecretKey\n\n    if (apiKey == null) {\n      apiKeyObj.applicationId = defaultApplicationId;\n    } else if (typeof apiKey === \"string\") {\n      apiKeyObj.applicationId = apiKey;\n    } else if (apiKey.applicationSecretKey != null) {\n      apiKeyObj.applicationId = apiKey.applicationId;\n      apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n    } else if (apiKey.applicationId) {\n      apiKeyObj.applicationId = apiKey.applicationId;\n    } else {\n      logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKeyObj;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network ? network.name : \"unknown\") {\n      case \"goerli\":\n        host = \"eth-goerli.gateway.pokt.network\";\n        break;\n\n      case \"homestead\":\n        host = \"eth-mainnet.gateway.pokt.network\";\n        break;\n\n      case \"kovan\":\n        host = \"poa-kovan.gateway.pokt.network\";\n        break;\n\n      case \"matic\":\n        host = \"poly-mainnet.gateway.pokt.network\";\n        break;\n\n      case \"maticmum\":\n        host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n        break;\n\n      case \"rinkeby\":\n        host = \"eth-rinkeby.gateway.pokt.network\";\n        break;\n\n      case \"ropsten\":\n        host = \"eth-ropsten.gateway.pokt.network\";\n        break;\n\n      default:\n        logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n    }\n\n    const url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n    const connection = {\n      headers: {},\n      url\n    };\n\n    if (apiKey.applicationSecretKey != null) {\n      connection.user = \"\";\n      connection.password = apiKey.applicationSecretKey;\n    }\n\n    return connection;\n  }\n\n  isCommunityResource() {\n    return this.applicationId === defaultApplicationId;\n  }\n\n}","map":{"version":3,"sources":["../src.ts/pocket-provider.ts"],"names":[],"mappings":"AAAA;;AAKA,SAAS,MAAT,QAAuB,uBAAvB;AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,MAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,OAAX,CAAf;AAEA,SAAS,kBAAT,QAAmC,yBAAnC;AAEA,MAAM,oBAAoB,GAAG,0BAA7B;AAGA,OAAM,MAAO,cAAP,SAA8B,kBAA9B,CAAgD;EAKlC,OAAT,SAAS,CAAC,MAAD,EAAY;IACxB,MAAM,SAAS,GAAmF;MAC9F,aAAa,EAAE,IAD+E;MAE9F,YAAY,EAAE,IAFgF;MAG9F,oBAAoB,EAAE;IAHwE,CAAlG,CADwB,CAOxB;;IACA,IAAI,MAAM,IAAI,IAAd,EAAoB;MAChB,SAAS,CAAC,aAAV,GAA0B,oBAA1B;IAEH,CAHD,MAGO,IAAI,OAAQ,MAAR,KAAoB,QAAxB,EAAkC;MACrC,SAAS,CAAC,aAAV,GAA0B,MAA1B;IAEH,CAHM,MAGA,IAAI,MAAM,CAAC,oBAAP,IAA+B,IAAnC,EAAyC;MAC5C,SAAS,CAAC,aAAV,GAA0B,MAAM,CAAC,aAAjC;MACA,SAAS,CAAC,oBAAV,GAAiC,MAAM,CAAC,oBAAxC;IAEH,CAJM,MAIA,IAAI,MAAM,CAAC,aAAX,EAA0B;MAC7B,SAAS,CAAC,aAAV,GAA0B,MAAM,CAAC,aAAjC;IAEH,CAHM,MAGA;MACH,MAAM,CAAC,kBAAP,CAA0B,mCAA1B,EAA+D,QAA/D,EAAyE,MAAzE;IACH;;IAED,OAAO,SAAP;EACH;;EAEY,OAAN,MAAM,CAAC,OAAD,EAAmB,MAAnB,EAA8B;IACvC,IAAI,IAAI,GAAW,IAAnB;;IACA,QAAQ,OAAO,GAAG,OAAO,CAAC,IAAX,GAAkB,SAAjC;MACI,KAAK,QAAL;QACI,IAAI,GAAG,iCAAP;QACA;;MACJ,KAAK,WAAL;QACI,IAAI,GAAG,kCAAP;QACA;;MACJ,KAAK,OAAL;QACI,IAAI,GAAG,gCAAP;QACA;;MACJ,KAAK,OAAL;QACI,IAAI,GAAG,mCAAP;QACA;;MACJ,KAAK,UAAL;QACI,IAAI,GAAG,yCAAP;QACA;;MACJ,KAAK,SAAL;QACI,IAAI,GAAG,kCAAP;QACA;;MACJ,KAAK,SAAL;QACI,IAAI,GAAG,kCAAP;QACA;;MACJ;QACI,MAAM,CAAC,UAAP,CAAkB,qBAAlB,EAAyC,MAAM,CAAC,MAAP,CAAc,gBAAvD,EAAyE;UACrE,QAAQ,EAAE,SAD2D;UAErE,KAAK,EAAE;QAF8D,CAAzE;IAvBR;;IA6BA,MAAM,GAAG,GAAG,YAAa,IAAK,UAAW,MAAM,CAAC,aAAc,EAA9D;IAEA,MAAM,UAAU,GAAmB;MAAE,OAAO,EAAE,EAAX;MAAgB;IAAhB,CAAnC;;IACA,IAAI,MAAM,CAAC,oBAAP,IAA+B,IAAnC,EAAyC;MACrC,UAAU,CAAC,IAAX,GAAkB,EAAlB;MACA,UAAU,CAAC,QAAX,GAAsB,MAAM,CAAC,oBAA7B;IACH;;IAED,OAAO,UAAP;EACH;;EAED,mBAAmB,GAAA;IACf,OAAQ,KAAK,aAAL,KAAuB,oBAA/B;EACH;;AA7EiD","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nexport class PocketProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n        }\n        else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n        }\n        else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        const connection = { headers: {}, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map"]},"metadata":{},"sourceType":"module"}
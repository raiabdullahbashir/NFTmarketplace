{"ast":null,"code":"import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nexport class CircleWarp extends Circle {\n  constructor(x, y, radius, canvasSize) {\n    super(x, y, radius);\n    this.canvasSize = canvasSize;\n    this.canvasSize = Object.assign({}, canvasSize);\n  }\n\n  contains(point) {\n    if (super.contains(point)) {\n      return true;\n    }\n\n    const posNE = {\n      x: point.x - this.canvasSize.width,\n      y: point.y\n    };\n\n    if (super.contains(posNE)) {\n      return true;\n    }\n\n    const posSE = {\n      x: point.x - this.canvasSize.width,\n      y: point.y - this.canvasSize.height\n    };\n\n    if (super.contains(posSE)) {\n      return true;\n    }\n\n    const posSW = {\n      x: point.x,\n      y: point.y - this.canvasSize.height\n    };\n    return super.contains(posSW);\n  }\n\n  intersects(range) {\n    if (super.intersects(range)) {\n      return true;\n    }\n\n    const rect = range,\n          circle = range,\n          newPos = {\n      x: range.position.x - this.canvasSize.width,\n      y: range.position.y - this.canvasSize.height\n    };\n\n    if (circle.radius !== undefined) {\n      const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n      return super.intersects(biggerCircle);\n    } else if (rect.size !== undefined) {\n      const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n      return super.intersects(rectSW);\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"names":["Circle","Rectangle","CircleWarp","constructor","x","y","radius","canvasSize","Object","assign","contains","point","posNE","width","posSE","height","posSW","intersects","range","rect","circle","newPos","position","undefined","biggerCircle","size","rectSW"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/node_modules/tsparticles/esm/Core/Utils/CircleWarp.js"],"sourcesContent":["import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,MAAMC,UAAN,SAAyBF,MAAzB,CAAgC;EACnCG,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAOC,MAAP,EAAeC,UAAf,EAA2B;IAClC,MAAMH,CAAN,EAASC,CAAT,EAAYC,MAAZ;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKA,UAAL,GAAkBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,UAAlB,CAAlB;EACH;;EACDG,QAAQ,CAACC,KAAD,EAAQ;IACZ,IAAI,MAAMD,QAAN,CAAeC,KAAf,CAAJ,EAA2B;MACvB,OAAO,IAAP;IACH;;IACD,MAAMC,KAAK,GAAG;MACVR,CAAC,EAAEO,KAAK,CAACP,CAAN,GAAU,KAAKG,UAAL,CAAgBM,KADnB;MAEVR,CAAC,EAAEM,KAAK,CAACN;IAFC,CAAd;;IAIA,IAAI,MAAMK,QAAN,CAAeE,KAAf,CAAJ,EAA2B;MACvB,OAAO,IAAP;IACH;;IACD,MAAME,KAAK,GAAG;MACVV,CAAC,EAAEO,KAAK,CAACP,CAAN,GAAU,KAAKG,UAAL,CAAgBM,KADnB;MAEVR,CAAC,EAAEM,KAAK,CAACN,CAAN,GAAU,KAAKE,UAAL,CAAgBQ;IAFnB,CAAd;;IAIA,IAAI,MAAML,QAAN,CAAeI,KAAf,CAAJ,EAA2B;MACvB,OAAO,IAAP;IACH;;IACD,MAAME,KAAK,GAAG;MACVZ,CAAC,EAAEO,KAAK,CAACP,CADC;MAEVC,CAAC,EAAEM,KAAK,CAACN,CAAN,GAAU,KAAKE,UAAL,CAAgBQ;IAFnB,CAAd;IAIA,OAAO,MAAML,QAAN,CAAeM,KAAf,CAAP;EACH;;EACDC,UAAU,CAACC,KAAD,EAAQ;IACd,IAAI,MAAMD,UAAN,CAAiBC,KAAjB,CAAJ,EAA6B;MACzB,OAAO,IAAP;IACH;;IACD,MAAMC,IAAI,GAAGD,KAAb;IAAA,MAAoBE,MAAM,GAAGF,KAA7B;IAAA,MAAoCG,MAAM,GAAG;MACzCjB,CAAC,EAAEc,KAAK,CAACI,QAAN,CAAelB,CAAf,GAAmB,KAAKG,UAAL,CAAgBM,KADG;MAEzCR,CAAC,EAAEa,KAAK,CAACI,QAAN,CAAejB,CAAf,GAAmB,KAAKE,UAAL,CAAgBQ;IAFG,CAA7C;;IAIA,IAAIK,MAAM,CAACd,MAAP,KAAkBiB,SAAtB,EAAiC;MAC7B,MAAMC,YAAY,GAAG,IAAIxB,MAAJ,CAAWqB,MAAM,CAACjB,CAAlB,EAAqBiB,MAAM,CAAChB,CAA5B,EAA+Be,MAAM,CAACd,MAAP,GAAgB,CAA/C,CAArB;MACA,OAAO,MAAMW,UAAN,CAAiBO,YAAjB,CAAP;IACH,CAHD,MAIK,IAAIL,IAAI,CAACM,IAAL,KAAcF,SAAlB,EAA6B;MAC9B,MAAMG,MAAM,GAAG,IAAIzB,SAAJ,CAAcoB,MAAM,CAACjB,CAArB,EAAwBiB,MAAM,CAAChB,CAA/B,EAAkCc,IAAI,CAACM,IAAL,CAAUZ,KAAV,GAAkB,CAApD,EAAuDM,IAAI,CAACM,IAAL,CAAUV,MAAV,GAAmB,CAA1E,CAAf;MACA,OAAO,MAAME,UAAN,CAAiBS,MAAjB,CAAP;IACH;;IACD,OAAO,KAAP;EACH;;AA/CkC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WrappedNFTLiquidationProxy = void 0;\nexports.WrappedNFTLiquidationProxy = [{\n  constant: false,\n  inputs: [{\n    name: \"_operator\",\n    type: \"address\"\n  }, {\n    name: \"_from\",\n    type: \"address\"\n  }, {\n    name: \"_tokenId\",\n    type: \"uint256\"\n  }, {\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"onERC721Received\",\n  outputs: [{\n    name: \"\",\n    type: \"bytes4\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_nftIds\",\n    type: \"uint256[]\"\n  }, {\n    name: \"_nftContractAddresses\",\n    type: \"address[]\"\n  }, {\n    name: \"_isMixedBatchOfNFTs\",\n    type: \"bool\"\n  }],\n  name: \"wrapNFTs\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"uniswapFactoryAddress\",\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: true,\n  inputs: [],\n  name: \"wrappedNFTFactoryAddress\",\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_nftContractAddress\",\n    type: \"address\"\n  }, {\n    name: \"_numTokensToPurchase\",\n    type: \"uint256\"\n  }],\n  name: \"purchaseNFTs\",\n  outputs: [],\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_nftIds\",\n    type: \"uint256[]\"\n  }, {\n    name: \"_nftContractAddresses\",\n    type: \"address[]\"\n  }, {\n    name: \"_isMixedBatchOfNFTs\",\n    type: \"bool\"\n  }, {\n    name: \"_uniswapSlippageAllowedInBasisPoints\",\n    type: \"uint256\"\n  }],\n  name: \"liquidateNFTs\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  constant: false,\n  inputs: [{\n    name: \"_nftIds\",\n    type: \"uint256[]\"\n  }, {\n    name: \"_nftContractAddresses\",\n    type: \"address[]\"\n  }, {\n    name: \"_destinationAddresses\",\n    type: \"address[]\"\n  }, {\n    name: \"_isMixedBatchOfNFTs\",\n    type: \"bool\"\n  }],\n  name: \"unwrapNFTs\",\n  outputs: [],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"_wrappedNFTFactoryAddress\",\n    type: \"address\"\n  }, {\n    name: \"_uniswapFactoryAddress\",\n    type: \"address\"\n  }],\n  payable: false,\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  payable: true,\n  stateMutability: \"payable\",\n  type: \"fallback\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    name: \"numTokensMelted\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"nftContractAddress\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"ethReceived\",\n    type: \"uint256\"\n  }],\n  name: \"LiquidateNFTs\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    name: \"numTokensBought\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"nftContractAddress\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"ethSpent\",\n    type: \"uint256\"\n  }],\n  name: \"PurchaseNFTs\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    name: \"numTokensWrapped\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"nftContractAddress\",\n    type: \"address\"\n  }],\n  name: \"WrapNFTs\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    name: \"numTokensUnwrapped\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"nftContractAddress\",\n    type: \"address\"\n  }],\n  name: \"UnwrapNFTs\",\n  type: \"event\"\n}];","map":{"version":3,"sources":["../../src/abi/WrappedNFTLiquidationProxy.ts"],"names":[],"mappings":";;;;;;AAEa,OAAA,CAAA,0BAAA,GAAyD,CACpE;EACE,QAAQ,EAAE,KADZ;EAEE,MAAM,EAAE,CACN;IAAE,IAAI,EAAE,WAAR;IAAqB,IAAI,EAAE;EAA3B,CADM,EAEN;IAAE,IAAI,EAAE,OAAR;IAAiB,IAAI,EAAE;EAAvB,CAFM,EAGN;IAAE,IAAI,EAAE,UAAR;IAAoB,IAAI,EAAE;EAA1B,CAHM,EAIN;IAAE,IAAI,EAAE,OAAR;IAAiB,IAAI,EAAE;EAAvB,CAJM,CAFV;EAQE,IAAI,EAAE,kBARR;EASE,OAAO,EAAE,CAAC;IAAE,IAAI,EAAE,EAAR;IAAY,IAAI,EAAE;EAAlB,CAAD,CATX;EAUE,OAAO,EAAE,KAVX;EAWE,eAAe,EAAE,YAXnB;EAYE,IAAI,EAAE;AAZR,CADoE,EAepE;EACE,QAAQ,EAAE,KADZ;EAEE,MAAM,EAAE,CACN;IAAE,IAAI,EAAE,SAAR;IAAmB,IAAI,EAAE;EAAzB,CADM,EAEN;IAAE,IAAI,EAAE,uBAAR;IAAiC,IAAI,EAAE;EAAvC,CAFM,EAGN;IAAE,IAAI,EAAE,qBAAR;IAA+B,IAAI,EAAE;EAArC,CAHM,CAFV;EAOE,IAAI,EAAE,UAPR;EAQE,OAAO,EAAE,EARX;EASE,OAAO,EAAE,KATX;EAUE,eAAe,EAAE,YAVnB;EAWE,IAAI,EAAE;AAXR,CAfoE,EA4BpE;EACE,QAAQ,EAAE,IADZ;EAEE,MAAM,EAAE,EAFV;EAGE,IAAI,EAAE,uBAHR;EAIE,OAAO,EAAE,CAAC;IAAE,IAAI,EAAE,EAAR;IAAY,IAAI,EAAE;EAAlB,CAAD,CAJX;EAKE,OAAO,EAAE,KALX;EAME,eAAe,EAAE,MANnB;EAOE,IAAI,EAAE;AAPR,CA5BoE,EAqCpE;EACE,QAAQ,EAAE,IADZ;EAEE,MAAM,EAAE,EAFV;EAGE,IAAI,EAAE,0BAHR;EAIE,OAAO,EAAE,CAAC;IAAE,IAAI,EAAE,EAAR;IAAY,IAAI,EAAE;EAAlB,CAAD,CAJX;EAKE,OAAO,EAAE,KALX;EAME,eAAe,EAAE,MANnB;EAOE,IAAI,EAAE;AAPR,CArCoE,EA8CpE;EACE,QAAQ,EAAE,KADZ;EAEE,MAAM,EAAE,CACN;IAAE,IAAI,EAAE,qBAAR;IAA+B,IAAI,EAAE;EAArC,CADM,EAEN;IAAE,IAAI,EAAE,sBAAR;IAAgC,IAAI,EAAE;EAAtC,CAFM,CAFV;EAME,IAAI,EAAE,cANR;EAOE,OAAO,EAAE,EAPX;EAQE,OAAO,EAAE,IARX;EASE,eAAe,EAAE,SATnB;EAUE,IAAI,EAAE;AAVR,CA9CoE,EA0DpE;EACE,QAAQ,EAAE,KADZ;EAEE,MAAM,EAAE,CACN;IAAE,IAAI,EAAE,SAAR;IAAmB,IAAI,EAAE;EAAzB,CADM,EAEN;IAAE,IAAI,EAAE,uBAAR;IAAiC,IAAI,EAAE;EAAvC,CAFM,EAGN;IAAE,IAAI,EAAE,qBAAR;IAA+B,IAAI,EAAE;EAArC,CAHM,EAIN;IAAE,IAAI,EAAE,sCAAR;IAAgD,IAAI,EAAE;EAAtD,CAJM,CAFV;EAQE,IAAI,EAAE,eARR;EASE,OAAO,EAAE,EATX;EAUE,OAAO,EAAE,KAVX;EAWE,eAAe,EAAE,YAXnB;EAYE,IAAI,EAAE;AAZR,CA1DoE,EAwEpE;EACE,QAAQ,EAAE,KADZ;EAEE,MAAM,EAAE,CACN;IAAE,IAAI,EAAE,SAAR;IAAmB,IAAI,EAAE;EAAzB,CADM,EAEN;IAAE,IAAI,EAAE,uBAAR;IAAiC,IAAI,EAAE;EAAvC,CAFM,EAGN;IAAE,IAAI,EAAE,uBAAR;IAAiC,IAAI,EAAE;EAAvC,CAHM,EAIN;IAAE,IAAI,EAAE,qBAAR;IAA+B,IAAI,EAAE;EAArC,CAJM,CAFV;EAQE,IAAI,EAAE,YARR;EASE,OAAO,EAAE,EATX;EAUE,OAAO,EAAE,KAVX;EAWE,eAAe,EAAE,YAXnB;EAYE,IAAI,EAAE;AAZR,CAxEoE,EAsFpE;EACE,MAAM,EAAE,CACN;IAAE,IAAI,EAAE,2BAAR;IAAqC,IAAI,EAAE;EAA3C,CADM,EAEN;IAAE,IAAI,EAAE,wBAAR;IAAkC,IAAI,EAAE;EAAxC,CAFM,CADV;EAKE,OAAO,EAAE,KALX;EAME,eAAe,EAAE,YANnB;EAOE,IAAI,EAAE;AAPR,CAtFoE,EA+FpE;EAAE,OAAO,EAAE,IAAX;EAAiB,eAAe,EAAE,SAAlC;EAA6C,IAAI,EAAE;AAAnD,CA/FoE,EAgGpE;EACE,SAAS,EAAE,KADb;EAEE,MAAM,EAAE,CACN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,iBAAxB;IAA2C,IAAI,EAAE;EAAjD,CADM,EAEN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,oBAAxB;IAA8C,IAAI,EAAE;EAApD,CAFM,EAGN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,aAAxB;IAAuC,IAAI,EAAE;EAA7C,CAHM,CAFV;EAOE,IAAI,EAAE,eAPR;EAQE,IAAI,EAAE;AARR,CAhGoE,EA0GpE;EACE,SAAS,EAAE,KADb;EAEE,MAAM,EAAE,CACN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,iBAAxB;IAA2C,IAAI,EAAE;EAAjD,CADM,EAEN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,oBAAxB;IAA8C,IAAI,EAAE;EAApD,CAFM,EAGN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,UAAxB;IAAoC,IAAI,EAAE;EAA1C,CAHM,CAFV;EAOE,IAAI,EAAE,cAPR;EAQE,IAAI,EAAE;AARR,CA1GoE,EAoHpE;EACE,SAAS,EAAE,KADb;EAEE,MAAM,EAAE,CACN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,kBAAxB;IAA4C,IAAI,EAAE;EAAlD,CADM,EAEN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,oBAAxB;IAA8C,IAAI,EAAE;EAApD,CAFM,CAFV;EAME,IAAI,EAAE,UANR;EAOE,IAAI,EAAE;AAPR,CApHoE,EA6HpE;EACE,SAAS,EAAE,KADb;EAEE,MAAM,EAAE,CACN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,oBAAxB;IAA8C,IAAI,EAAE;EAApD,CADM,EAEN;IAAE,OAAO,EAAE,KAAX;IAAkB,IAAI,EAAE,oBAAxB;IAA8C,IAAI,EAAE;EAApD,CAFM,CAFV;EAME,IAAI,EAAE,YANR;EAOE,IAAI,EAAE;AAPR,CA7HoE,CAAzD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WrappedNFTLiquidationProxy = void 0;\nexports.WrappedNFTLiquidationProxy = [\n    {\n        constant: false,\n        inputs: [\n            { name: \"_operator\", type: \"address\" },\n            { name: \"_from\", type: \"address\" },\n            { name: \"_tokenId\", type: \"uint256\" },\n            { name: \"_data\", type: \"bytes\" },\n        ],\n        name: \"onERC721Received\",\n        outputs: [{ name: \"\", type: \"bytes4\" }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: \"_nftIds\", type: \"uint256[]\" },\n            { name: \"_nftContractAddresses\", type: \"address[]\" },\n            { name: \"_isMixedBatchOfNFTs\", type: \"bool\" },\n        ],\n        name: \"wrapNFTs\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"uniswapFactoryAddress\",\n        outputs: [{ name: \"\", type: \"address\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"wrappedNFTFactoryAddress\",\n        outputs: [{ name: \"\", type: \"address\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: \"_nftContractAddress\", type: \"address\" },\n            { name: \"_numTokensToPurchase\", type: \"uint256\" },\n        ],\n        name: \"purchaseNFTs\",\n        outputs: [],\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: \"_nftIds\", type: \"uint256[]\" },\n            { name: \"_nftContractAddresses\", type: \"address[]\" },\n            { name: \"_isMixedBatchOfNFTs\", type: \"bool\" },\n            { name: \"_uniswapSlippageAllowedInBasisPoints\", type: \"uint256\" },\n        ],\n        name: \"liquidateNFTs\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: \"_nftIds\", type: \"uint256[]\" },\n            { name: \"_nftContractAddresses\", type: \"address[]\" },\n            { name: \"_destinationAddresses\", type: \"address[]\" },\n            { name: \"_isMixedBatchOfNFTs\", type: \"bool\" },\n        ],\n        name: \"unwrapNFTs\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { name: \"_wrappedNFTFactoryAddress\", type: \"address\" },\n            { name: \"_uniswapFactoryAddress\", type: \"address\" },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    { payable: true, stateMutability: \"payable\", type: \"fallback\" },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: false, name: \"numTokensMelted\", type: \"uint256\" },\n            { indexed: false, name: \"nftContractAddress\", type: \"address\" },\n            { indexed: false, name: \"ethReceived\", type: \"uint256\" },\n        ],\n        name: \"LiquidateNFTs\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: false, name: \"numTokensBought\", type: \"uint256\" },\n            { indexed: false, name: \"nftContractAddress\", type: \"address\" },\n            { indexed: false, name: \"ethSpent\", type: \"uint256\" },\n        ],\n        name: \"PurchaseNFTs\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: false, name: \"numTokensWrapped\", type: \"uint256\" },\n            { indexed: false, name: \"nftContractAddress\", type: \"address\" },\n        ],\n        name: \"WrapNFTs\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: false, name: \"numTokensUnwrapped\", type: \"uint256\" },\n            { indexed: false, name: \"nftContractAddress\", type: \"address\" },\n        ],\n        name: \"UnwrapNFTs\",\n        type: \"event\",\n    },\n];\n//# sourceMappingURL=WrappedNFTLiquidationProxy.js.map"]},"metadata":{},"sourceType":"script"}
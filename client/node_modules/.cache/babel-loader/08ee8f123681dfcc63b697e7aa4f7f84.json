{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiab\\\\Documents\\\\Logics Yard\\\\NFT code daniyal\\\\NFT code\\\\client\\\\src\\\\components\\\\pages\\\\Minter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { connectWallet, getCurrentWalletConnected, mintNFT } from \"../../core/nft/interact\";\nimport { createGlobalStyle } from 'styled-components';\nimport ColumnNewMint from '../components/ColumnNewMint';\nimport api from \"../../core/api\";\nimport Footer from '../components/footer';\nimport NFT from '../../core/nft/nft.json';\nimport Marketplace from '../../core/nft/marketplace.json';\nimport Auction from '../../core/nft/auction.json';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  .mainside{\n    .connect-wal{\n      display: none;\n    }\n    .logout{\n      display: flex;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n_c = GlobalStyles;\n\nconst Minter = props => {\n  _s();\n\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n  const [nftPrice, setnftPrice] = useState(\"\");\n  const [manualInput, setManualInput] = useState(false);\n  const [isMinting, setisMinting] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [nftCon, setNFT] = useState({});\n  const [marketplace, setMarketplace] = useState({});\n  const [auction, setAuction] = useState({});\n  const [buffer, setBuffer] = useState(null); // const createBuffer = async () => {\n  //   if (!url || !nftPrice || !name || !description) return\n  //    try {\n  //     // var f = new File([url], url, {type: \"image/png\", lastModified: '101010'})\n  //     // console.log(f)\n  //     const file = url\n  //     const reader = new window.FileReader()\n  //     reader.readAsArrayBuffer(file)\n  //     reader.onloadend = () => {\n  //       setBuffer({ buffer: Buffer(reader.result) })\n  //       console.log('buffer', buffer)\n  //     }\n  //     if (buffer === null) { return }\n  //     console.log(buffer)\n  //   } catch (error) {\n  //     console.log(\"ipfs uri upload error: \", error)\n  //   }\n  // }\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    setAccount(accounts[0]); // Get provider from Metamask\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // Set signer\n\n    const signer = provider.getSigner();\n    window.ethereum.on('chainChanged', chainId => {\n      window.location.reload();\n    });\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0]);\n      await web3Handler();\n    });\n    loadContracts(signer);\n  };\n\n  const loadContracts = async signer => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(\"0xd2186CC6cd7E4eaf273F920f6c7e0F56885Ad01a\", Marketplace.abi, signer);\n    setMarketplace(marketplace);\n    const nft = new ethers.Contract(\"0x99D5C3AF82DeB1cA0c5c5B4c026B66D869415d16\", NFT.abi, signer);\n    setNFT(nft);\n    const auction = new ethers.Contract(\"0x5aA6ab4576B7297400681b9aC2BABDe129aFB2A9\", Auction.abi, signer);\n    setAuction(auction);\n  };\n\n  useEffect(() => {\n    async function getExistingWallet() {\n      const {\n        address,\n        status\n      } = await getCurrentWalletConnected();\n      setWallet(address);\n      setStatus(status);\n      addWalletListener();\n      web3Handler();\n    }\n\n    getExistingWallet();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]); // setStatus(\"Fill in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"ðŸ¦Š Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    setisMinting(true);\n    const {\n      success,\n      status\n    } = await mintNFT(url, name, description, nftPrice, nftCon, marketplace, auction);\n    setStatus(status);\n\n    if (success) {\n      setName(\"\");\n      setDescription(\"\");\n      setURL(\"\");\n    }\n\n    setisMinting(false);\n  };\n\n  const toggleInput = () => {\n    setManualInput(!manualInput);\n    setName(\"\");\n    setDescription(\"\");\n    setURL(\"\");\n  };\n\n  const onSelectNft = nft => {\n    setName(nft.title);\n    setDescription(nft.description);\n    setURL(api.baseUrl + nft.preview_image.url);\n    setnftPrice(nft.price);\n  };\n\n  const isEmpty = useCallback(() => {\n    return name.trim() === '' || description.trim() === '';\n  }, [url, name, description]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron breadcumb no-bg\",\n      style: {\n        backgroundImage: `url(${'./img/background/subheader.jpg'})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainbreadcumb\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row m-10-hor\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center\",\n                children: \"NFT Minting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Minter\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mint your NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), walletAddress.length === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"walletButton\",\n          className: \"btn-main\",\n          onClick: connectWalletPressed,\n          children: \"Connect Metamask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), walletAddress.length > 0 && \"Connected Address: \" + walletAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 14\n        }, this), walletAddress.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"connect to metamask to start minting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), isMinting ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Minting in Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: walletAddress.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"toggleButton\",\n              className: \"btn-main\",\n              onClick: () => toggleInput(),\n              children: [\"Switch to \", manualInput ? 'select' : 'manual', \" input\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), !manualInput ? /*#__PURE__*/_jsxDEV(ColumnNewMint, {\n              onSelectNft: onSelectNft,\n              showLoadMore: false,\n              authorId: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Link to image asset: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"e.g. https://gateway.pinata.cloud/ipfs/<hash>\",\n                onChange: event => setURL(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"e.g. My first NFT!\",\n                onChange: event => setName(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Description: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"e.g. My Cool NFT!\",\n                onChange: event => setDescription(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), !isEmpty() && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"NFT Name: \", name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"mintButton\",\n                className: \"btn-main\",\n                onClick: onMintPressed,\n                children: \"Proceed to Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"status\",\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Minter, \"I8/ewt1uZESo4dXm2TSzDa6zcnw=\");\n\n_c2 = Minter;\nexport default Minter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyles\");\n$RefreshReg$(_c2, \"Minter\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","connectWallet","getCurrentWalletConnected","mintNFT","createGlobalStyle","ColumnNewMint","api","Footer","NFT","Marketplace","Auction","ethers","GlobalStyles","Minter","props","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","url","setURL","nftPrice","setnftPrice","manualInput","setManualInput","isMinting","setisMinting","account","setAccount","nftCon","setNFT","marketplace","setMarketplace","auction","setAuction","buffer","setBuffer","web3Handler","accounts","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","on","chainId","location","reload","loadContracts","Contract","abi","nft","getExistingWallet","address","addWalletListener","length","connectWalletPressed","walletResponse","onMintPressed","success","toggleInput","onSelectNft","title","baseUrl","preview_image","price","isEmpty","trim","backgroundImage","event","target","value"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/src/components/pages/Minter.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  mintNFT,\n} from \"../../core/nft/interact\";\nimport { createGlobalStyle } from 'styled-components';\nimport ColumnNewMint from '../components/ColumnNewMint';\nimport api from \"../../core/api\";\nimport Footer from '../components/footer';\nimport NFT from '../../core/nft/nft.json'\nimport Marketplace from '../../core/nft/marketplace.json'\nimport Auction from '../../core/nft/auction.json'\nimport { ethers } from \"ethers\"\n\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  .mainside{\n    .connect-wal{\n      display: none;\n    }\n    .logout{\n      display: flex;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n\nconst Minter = (props) => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n  const [nftPrice, setnftPrice] = useState(\"\");\n\n  const [manualInput, setManualInput] = useState(false);\n  const [isMinting, setisMinting] = useState(false);\n\n  const [account, setAccount] = useState(null)\n  const [nftCon, setNFT] = useState({})\n  const [marketplace, setMarketplace] = useState({})\n  const [auction, setAuction] = useState({})\n  const [buffer, setBuffer] = useState(null)\n\n  // const createBuffer = async () => {\n  //   if (!url || !nftPrice || !name || !description) return\n  //    try {\n      \n  //     // var f = new File([url], url, {type: \"image/png\", lastModified: '101010'})\n  //     // console.log(f)\n  //     const file = url\n  //     const reader = new window.FileReader()\n  //     reader.readAsArrayBuffer(file)\n  //     reader.onloadend = () => {\n  //       setBuffer({ buffer: Buffer(reader.result) })\n  //       console.log('buffer', buffer)\n\n  //     }\n  //     if (buffer === null) { return }\n  //     console.log(buffer)\n      \n  //   } catch (error) {\n  //     console.log(\"ipfs uri upload error: \", error)\n  //   }\n  // }\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Set signer\n    const signer = provider.getSigner()\n   \n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n    })\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0])\n      await web3Handler()\n    })\n    loadContracts(signer)\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(\"0xd2186CC6cd7E4eaf273F920f6c7e0F56885Ad01a\", Marketplace.abi, signer)\n    setMarketplace(marketplace)\n    const nft = new ethers.Contract(\"0x99D5C3AF82DeB1cA0c5c5B4c026B66D869415d16\", NFT.abi, signer)\n    setNFT(nft)\n    const auction = new ethers.Contract(\"0x5aA6ab4576B7297400681b9aC2BABDe129aFB2A9\",Auction.abi,signer)\n    setAuction(auction);\n  }\n\n  useEffect(() => {\n    async function getExistingWallet() {\n      const { address, status } = await getCurrentWalletConnected();\n  \n      setWallet(address);\n      setStatus(status);\n  \n      addWalletListener();\n      web3Handler();\n    }\n\n    getExistingWallet();\n  }, []);\n  \n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          // setStatus(\"Fill in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"ðŸ¦Š Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          ðŸ¦Š{\" \"}\n          <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    setisMinting(true);\n    const { success, status } = await mintNFT(url, name, description,nftPrice,nftCon,marketplace,auction);\n    setStatus(status);\n    if (success) {\n      setName(\"\");\n      setDescription(\"\");\n      setURL(\"\");\n    }\n    setisMinting(false);\n  };\n  \n  const toggleInput = () => {\n    setManualInput(!manualInput)\n    setName(\"\");\n    setDescription(\"\");\n    setURL(\"\");\n  };\n\n  const onSelectNft = (nft) => {\n    setName(nft.title);\n    setDescription(nft.description);\n    setURL(api.baseUrl + nft.preview_image.url);\n    setnftPrice(nft.price)\n    \n  }\n\n  const isEmpty = useCallback(() => {\n    return  name.trim() === '' || description.trim() === '';\n  }, [url, name, description]);\n\n  return (\n    <div>\n      \n      <GlobalStyles/>\n      <section className='jumbotron breadcumb no-bg' style={{backgroundImage: `url(${'./img/background/subheader.jpg'})`}}>\n        <div className='mainbreadcumb'>\n          <div className='container'>\n            <div className='row m-10-hor'>\n              <div className='col-12'>\n                <h1 className='text-center'>NFT Minting</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className='container'>\n      <div className=\"Minter\">\n        <h1>Mint your NFT</h1>\n        \n        {walletAddress.length === 0 && (\n        <button id=\"walletButton\" className=\"btn-main\" onClick={connectWalletPressed}>\n            Connect Metamask\n        </button>\n        )}\n        {walletAddress.length > 0 && (\n          \"Connected Address: \" + walletAddress\n        )}\n        <br/><br/>\n        {walletAddress.length === 0 && (\n          <p>\n            connect to metamask to start minting\n          </p>\n        )}\n        {isMinting ? (\n          <h2>Minting in Process</h2>\n        ) : (\n        <div>\n          {\n            walletAddress.length > 0 &&\n            <>\n              <button id=\"toggleButton\" className=\"btn-main\" onClick={() => toggleInput()}>\n                Switch to {manualInput ? 'select' : 'manual'} input\n              </button>\n              <br />\n              <br />\n              {!manualInput ? (\n                <ColumnNewMint onSelectNft={onSelectNft} showLoadMore={false} authorId=\"1\" />\n              ) : (\n                <form>\n                  <h2>Link to image asset: </h2>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"e.g. https://gateway.pinata.cloud/ipfs/<hash>\"\n                    onChange={(event) => setURL(event.target.value)}\n                  />\n                  <h2>Name: </h2>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"e.g. My first NFT!\"\n                    onChange={(event) => setName(event.target.value)}\n                  />\n                  <h2>Description: </h2>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"e.g. My Cool NFT!\"\n                    onChange={(event) => setDescription(event.target.value)}\n                  />\n                </form>\n              )}\n              {!isEmpty() &&\n                <>\n                  <span>NFT Name: { name }</span> \n                  <br />\n                  <br />\n                  <button id=\"mintButton\" className=\"btn-main\" onClick={onMintPressed}>\n                    Proceed to Mint\n                  </button>\n                  <br />\n                </>\n              }\n              <p id=\"status\">\n                {status}\n              </p>\n            </>\n          }\n        </div>\n        )}\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Minter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
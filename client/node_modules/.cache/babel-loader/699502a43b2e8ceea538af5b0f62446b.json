{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raiab\\\\Documents\\\\Logics Yard\\\\NFT code daniyal\\\\NFT code\\\\client\\\\src\\\\components\\\\components\\\\myListedItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as selectors from '../../store/selectors';\nimport * as actions from '../../store/actions/thunks';\nimport { clearNfts, clearFilter } from '../../store/actions';\nimport NftCard from './NftCard';\nimport { shuffleArray } from '../../store/utils';\nimport { ethers } from \"ethers\";\nimport { Buffer } from 'buffer';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 8px;\n`; //react functional component\n\n_c = Outer;\n\nconst MyListedItems = _ref => {\n  _s();\n\n  let {\n    marketplace,\n    nftCon,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState([]);\n\n  const loadListedItems = async () => {\n    // Load all sold items that the user listed\n    const itemCount = await marketplace.itemCount();\n    let listedItems = [];\n\n    for (let indx = 1; indx <= itemCount; indx++) {\n      const i = await marketplace.items(indx);\n\n      if (i.seller.toLowerCase() === account) {\n        // get uri url from nft contract\n        const uri = await nftCon.tokenURI(i.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n        const response = await fetch(uri);\n        const metadata = await response.json(); // get total price of item (item price + fee)\n\n        const totalPrice = await marketplace.getTotalPrice(i.itemId); // define listed item object\n\n        const img = new Buffer.from(metadata.image.buffer).toString(\"base64\");\n        let item = {\n          totalPrice,\n          price: i.price,\n          itemId: i.itemId,\n          name: metadata.name,\n          description: metadata.description,\n          image: img\n        };\n        listedItems.push(item);\n      }\n    }\n\n    setLoading(false);\n    setListedItems(listedItems);\n  };\n\n  useEffect(() => {\n    loadListedItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: '120px',\n        marginBottom: '120px'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: listedItems.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: listedItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft__item m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft__item_wrap\",\n            style: {\n              height: '18rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Outer, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    maxHeight: '14rem'\n                  },\n                  src: \"data:image/png;base64,\" + item.image,\n                  className: \"lazy nft__item_preview\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft__item_info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft__item_price\",\n              children: [ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft__item_like\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-heart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: '120px',\n          marginBottom: '120px'\n        },\n        children: \"No listed assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyListedItems, \"dRuyt9gx+AD1Xuv/LXW8zNJT+tg=\");\n\n_c2 = MyListedItems;\nexport default MyListedItems;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Outer\");\n$RefreshReg$(_c2, \"MyListedItems\");","map":{"version":3,"names":["React","memo","useEffect","useState","useSelector","useDispatch","selectors","actions","clearNfts","clearFilter","NftCard","shuffleArray","ethers","Buffer","styled","Outer","div","MyListedItems","marketplace","nftCon","account","loading","setLoading","listedItems","setListedItems","loadListedItems","itemCount","indx","i","items","seller","toLowerCase","uri","tokenURI","tokenId","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","img","from","image","buffer","toString","item","price","name","description","push","padding","marginTop","marginBottom","length","map","idx","height","maxHeight","utils","formatEther"],"sources":["C:/Users/raiab/Documents/Logics Yard/NFT code daniyal/NFT code/client/src/components/components/myListedItems.js"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../../store/selectors';\r\nimport * as actions from '../../store/actions/thunks';\r\nimport { clearNfts, clearFilter } from '../../store/actions';\r\nimport NftCard from './NftCard';\r\nimport { shuffleArray } from '../../store/utils';\r\nimport { ethers } from \"ethers\"\r\nimport { Buffer } from 'buffer';\r\nimport styled from \"styled-components\";\r\n\r\nconst Outer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n`;\r\n//react functional component\r\nconst MyListedItems = ({ marketplace, nftCon, account }) => {\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [listedItems, setListedItems] = useState([])\r\n\r\n\r\n  const loadListedItems = async () => {\r\n    // Load all sold items that the user listed\r\n    const itemCount = await marketplace.itemCount()\r\n    let listedItems = []\r\n    for (let indx = 1; indx <= itemCount; indx++) {\r\n      const i = await marketplace.items(indx)\r\n      if (i.seller.toLowerCase() === account) {\r\n        // get uri url from nft contract\r\n        const uri = await nftCon.tokenURI(i.tokenId)\r\n        // use uri to fetch the nft metadata stored on ipfs \r\n        const response = await fetch(uri)\r\n        const metadata = await response.json()\r\n        // get total price of item (item price + fee)\r\n        const totalPrice = await marketplace.getTotalPrice(i.itemId)\r\n        // define listed item object\r\n        const img = new Buffer.from(metadata.image.buffer).toString(\"base64\")\r\n        let item = {\r\n          totalPrice,\r\n          price: i.price,\r\n          itemId: i.itemId,\r\n          name: metadata.name,\r\n          description: metadata.description,\r\n          image: img\r\n        }\r\n        listedItems.push(item)\r\n      }\r\n    }\r\n    setLoading(false)\r\n    setListedItems(listedItems)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    loadListedItems()\r\n  }, []);\r\n  if (loading) return (\r\n    <main style={{ padding: \"1rem 0\" }}>\r\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\r\n    </main>\r\n  )\r\n\r\n  return (\r\n    <div className='row'>\r\n      {listedItems.length > 0 ?\r\n        <>\r\n          {listedItems.map((item, idx) => (\r\n            <div key={idx} className='d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4'>\r\n              <div className=\"nft__item m-0\">\r\n                <div className=\"nft__item_wrap\" style={{ height: '18rem' }}>\r\n                  <Outer>\r\n                    <span>\r\n                      <img style={{ maxHeight: '14rem' }} src={\"data:image/png;base64,\" + item.image} className=\"lazy nft__item_preview\" alt=\"\" />\r\n                    </span>\r\n                  </Outer>\r\n                </div>\r\n                <div className=\"nft__item_info\">\r\n                  <span >\r\n                    <h4>{item.name}</h4>\r\n                  </span>\r\n                  {\r\n                    <div className=\"nft__item_price\">\r\n                      {ethers.utils.formatEther(item.totalPrice)} ETH\r\n                    </div>\r\n                  }\r\n                  <div className=\"nft__item_like\">\r\n                    <i className=\"fa fa-heart\"></i><span>50</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </>\r\n        : (<div style={{ padding: \"1rem 0\" }}>\r\n          <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>No listed assets</h2>\r\n        </div>)\r\n\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyListedItems;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,qBAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA,C,CAQA;;KARMD,K;;AASN,MAAME,aAAa,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAAEC,WAAF;IAAeC,MAAf;IAAuBC;EAAvB,CAAqC;EAE1D,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;;EAGA,MAAMsB,eAAe,GAAG,YAAY;IAClC;IACA,MAAMC,SAAS,GAAG,MAAMR,WAAW,CAACQ,SAAZ,EAAxB;IACA,IAAIH,WAAW,GAAG,EAAlB;;IACA,KAAK,IAAII,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAID,SAA3B,EAAsCC,IAAI,EAA1C,EAA8C;MAC5C,MAAMC,CAAC,GAAG,MAAMV,WAAW,CAACW,KAAZ,CAAkBF,IAAlB,CAAhB;;MACA,IAAIC,CAAC,CAACE,MAAF,CAASC,WAAT,OAA2BX,OAA/B,EAAwC;QACtC;QACA,MAAMY,GAAG,GAAG,MAAMb,MAAM,CAACc,QAAP,CAAgBL,CAAC,CAACM,OAAlB,CAAlB,CAFsC,CAGtC;;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA5B;QACA,MAAMK,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB,CALsC,CAMtC;;QACA,MAAMC,UAAU,GAAG,MAAMrB,WAAW,CAACsB,aAAZ,CAA0BZ,CAAC,CAACa,MAA5B,CAAzB,CAPsC,CAQtC;;QACA,MAAMC,GAAG,GAAG,IAAI7B,MAAM,CAAC8B,IAAX,CAAgBN,QAAQ,CAACO,KAAT,CAAeC,MAA/B,EAAuCC,QAAvC,CAAgD,QAAhD,CAAZ;QACA,IAAIC,IAAI,GAAG;UACTR,UADS;UAETS,KAAK,EAAEpB,CAAC,CAACoB,KAFA;UAGTP,MAAM,EAAEb,CAAC,CAACa,MAHD;UAITQ,IAAI,EAAEZ,QAAQ,CAACY,IAJN;UAKTC,WAAW,EAAEb,QAAQ,CAACa,WALb;UAMTN,KAAK,EAAEF;QANE,CAAX;QAQAnB,WAAW,CAAC4B,IAAZ,CAAiBJ,IAAjB;MACD;IACF;;IACDzB,UAAU,CAAC,KAAD,CAAV;IACAE,cAAc,CAACD,WAAD,CAAd;EACD,CA7BD;;EA+BArB,SAAS,CAAC,MAAM;IAEduB,eAAe;EAChB,CAHQ,EAGN,EAHM,CAAT;EAIA,IAAIJ,OAAJ,EAAa,oBACX;IAAM,KAAK,EAAE;MAAE+B,OAAO,EAAE;IAAX,CAAb;IAAA,uBACE;MAAI,KAAK,EAAE;QAAEC,SAAS,EAAE,OAAb;QAAsBC,YAAY,EAAE;MAApC,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADW;EAMb,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACG/B,WAAW,CAACgC,MAAZ,GAAqB,CAArB,gBACC;MAAA,UACGhC,WAAW,CAACiC,GAAZ,CAAgB,CAACT,IAAD,EAAOU,GAAP,kBACf;QAAe,SAAS,EAAC,kDAAzB;QAAA,uBACE;UAAK,SAAS,EAAC,eAAf;UAAA,wBACE;YAAK,SAAS,EAAC,gBAAf;YAAgC,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAV,CAAvC;YAAA,uBACE,QAAC,KAAD;cAAA,uBACE;gBAAA,uBACE;kBAAK,KAAK,EAAE;oBAAEC,SAAS,EAAE;kBAAb,CAAZ;kBAAoC,GAAG,EAAE,2BAA2BZ,IAAI,CAACH,KAAzE;kBAAgF,SAAS,EAAC,wBAA1F;kBAAmH,GAAG,EAAC;gBAAvH;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAQE;YAAK,SAAS,EAAC,gBAAf;YAAA,wBACE;cAAA,uBACE;gBAAA,UAAKG,IAAI,CAACE;cAAV;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAKI;cAAK,SAAS,EAAC,iBAAf;cAAA,WACGrC,MAAM,CAACgD,KAAP,CAAaC,WAAb,CAAyBd,IAAI,CAACR,UAA9B,CADH;YAAA;cAAA;cAAA;cAAA;YAAA,QALJ,eASE;cAAK,SAAS,EAAC,gBAAf;cAAA,wBACE;gBAAG,SAAS,EAAC;cAAb;gBAAA;gBAAA;gBAAA;cAAA,QADF,eACiC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADjC;YAAA;cAAA;cAAA;cAAA;YAAA,QATF;UAAA;YAAA;YAAA;YAAA;UAAA,QARF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAUkB,GAAV;QAAA;QAAA;QAAA;MAAA,QADD;IADH,iBADD,gBA6BI;MAAK,KAAK,EAAE;QAAEL,OAAO,EAAE;MAAX,CAAZ;MAAA,uBACD;QAAI,KAAK,EAAE;UAAEC,SAAS,EAAE,OAAb;UAAsBC,YAAY,EAAE;QAApC,CAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADC;MAAA;MAAA;MAAA;IAAA;EA9BP;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CAtFD;;GAAMrC,a;;MAAAA,a;AAwFN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}
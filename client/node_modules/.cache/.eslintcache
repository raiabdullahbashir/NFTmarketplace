[{"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\index.js":"1","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\serviceWorker.js":"2","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\app.js":"3","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\index.js":"4","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home1.js":"5","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home.js":"6","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\menu\\ScrollToTop.js":"7","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\menu\\header.js":"8","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home1Grey.js":"9","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home2.js":"10","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\homeGrey.js":"11","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home3.js":"12","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home4.js":"13","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home5.js":"14","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\explore.js":"15","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\explore2.js":"16","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\explore2Grey.js":"17","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home2Grey.js":"18","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\RankingReduxGrey.js":"19","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\exploreGrey.js":"20","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\RankingRedux.js":"21","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\helpcenter.js":"22","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\AuctionGrey.js":"23","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Auction.js":"24","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\helpcenterGrey.js":"25","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\colection.js":"26","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\ItemDetailRedux.js":"27","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\colectionGrey.js":"28","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\wallet.js":"29","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\login.js":"30","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Author.js":"31","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\ItemDetailReduxGrey.js":"32","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\loginGrey.js":"33","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\AuthorGrey.js":"34","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\register.js":"35","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\walletGrey.js":"36","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\loginTwo.js":"37","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\loginTwoGrey.js":"38","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\registerGrey.js":"39","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\works.js":"40","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\price.js":"41","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\createGrey.js":"42","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\news.js":"43","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\newsSingle.js":"44","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\create.js":"45","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\create3.js":"46","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\contactGrey.js":"47","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\activity.js":"48","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\contact.js":"49","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\createOptions.js":"50","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\activityGrey.js":"51","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\create2.js":"52","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\etlineIcons.js":"53","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\tabs.js":"54","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\elegantIcons.js":"55","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\accordion.js":"56","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\alerts.js":"57","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\progressbar.js":"58","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Minter.js":"59","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Opensea\\author.js":"60","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\MinterGrey.js":"61","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Opensea\\explore.js":"62","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\fontAwesomeIcons.js":"63","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\Styles.js":"64","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\nft\\interact.js":"65","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\api.js":"66","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselCollectionRedux.js":"67","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Particle.js":"68","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ItemsOnSell.js":"69","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\FeatureBox.js":"70","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainParticle.js":"71","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\AuthorListRedux.js":"72","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ItemsOnLiveAuction.js":"73","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMain.js":"74","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnNewMint.js":"75","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\footer.js":"76","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselNewRedux.js":"77","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Clock.js":"78","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\TopFilterBar.js":"79","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\Assets.js":"80","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\Column.js":"81","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\pricing.js":"82","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\index.js":"83","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\wallet.js":"84","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnNewRedux.js":"85","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainParticleGrey.js":"86","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnAuctionRedux.js":"87","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\myListedItems.js":"88","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ItemsOnAuction.js":"89","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\TopFilterBar.js":"90","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CheckboxFilter.js":"91","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnNewThreeColRedux.js":"92","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Catgor.js":"93","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselNewReduxNew.js":"94","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselCollectionReduxNew.js":"95","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\index.js":"96","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\selectors\\index.js":"97","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\nft\\pinata.js":"98","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\Card.js":"99","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\AssetCard.js":"100","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\utils.js":"101","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\NftMintCard.js":"102","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\index.js":"103","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\opensea\\constants.js":"104","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\UserTopSeller.js":"105","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\NftCard.js":"106","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CustomSlide.js":"107","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\blogs.js":"108","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\filters.js":"109","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\hotCollections.js":"110","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\authorList.js":"111","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\nfts.js":"112","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderCarouselNew.js":"113","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\constants\\filters.js":"114","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\index.js":"115","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\constants\\index.js":"116","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\blogs.js":"117","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\contactUs.js":"118","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\authorList.js":"119","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\hotCollections.js":"120","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\nfts.js":"121","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\images.js":"122","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\axios.js":"123","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\ImageMosaic\\index.js":"124","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\index.js":"125","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\ImageMosaic\\components\\GridImage.js":"126","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\index.js":"127","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\Header.js":"128","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\ArrowButtonleft.js":"129","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\ArrowButton.js":"130","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\ButtonControl.js":"131","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainParticleGrey1.js":"132","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderCarouselRedux.js":"133","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainZero.js":"134","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderCarouselSingleRedux.js":"135","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\authAction.js":"136","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\authReducer.js":"137","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\tokenReducer.js":"138","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Login.js":"139","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\utils\\validation\\Validation.js":"140","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\App.js":"141","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Register.js":"142"},{"size":948,"mtime":1664982035897,"results":"143","hashOfConfig":"144"},{"size":4951,"mtime":1664870734510,"results":"145","hashOfConfig":"144"},{"size":5932,"mtime":1664981878327,"results":"146","hashOfConfig":"144"},{"size":213,"mtime":1664870739858,"results":"147","hashOfConfig":"144"},{"size":4897,"mtime":1664870738226,"results":"148","hashOfConfig":"144"},{"size":6808,"mtime":1664870738193,"results":"149","hashOfConfig":"144"},{"size":918,"mtime":1664870737107,"results":"150","hashOfConfig":"144"},{"size":29286,"mtime":1664974314464,"results":"151","hashOfConfig":"144"},{"size":4015,"mtime":1664870738257,"results":"152","hashOfConfig":"144"},{"size":2257,"mtime":1664870738289,"results":"153","hashOfConfig":"144"},{"size":2170,"mtime":1664870738448,"results":"154","hashOfConfig":"144"},{"size":3851,"mtime":1664870738353,"results":"155","hashOfConfig":"144"},{"size":2558,"mtime":1664870738385,"results":"156","hashOfConfig":"144"},{"size":2268,"mtime":1664870738415,"results":"157","hashOfConfig":"144"},{"size":1770,"mtime":1664870737917,"results":"158","hashOfConfig":"144"},{"size":800,"mtime":1664870737948,"results":"159","hashOfConfig":"144"},{"size":810,"mtime":1664870737981,"results":"160","hashOfConfig":"144"},{"size":3940,"mtime":1664870738319,"results":"161","hashOfConfig":"144"},{"size":5007,"mtime":1664870739113,"results":"162","hashOfConfig":"144"},{"size":993,"mtime":1664870738013,"results":"163","hashOfConfig":"144"},{"size":5795,"mtime":1664870739085,"results":"164","hashOfConfig":"144"},{"size":4804,"mtime":1664870738137,"results":"165","hashOfConfig":"144"},{"size":1005,"mtime":1664870737375,"results":"166","hashOfConfig":"144"},{"size":3480,"mtime":1664870737345,"results":"167","hashOfConfig":"144"},{"size":4087,"mtime":1664870738163,"results":"168","hashOfConfig":"144"},{"size":7378,"mtime":1664870737471,"results":"169","hashOfConfig":"144"},{"size":19734,"mtime":1664870738545,"results":"170","hashOfConfig":"144"},{"size":3925,"mtime":1664870737503,"results":"171","hashOfConfig":"144"},{"size":1677,"mtime":1664870739261,"results":"172","hashOfConfig":"144"},{"size":4248,"mtime":1664974910143,"results":"173","hashOfConfig":"144"},{"size":5124,"mtime":1664870737408,"results":"174","hashOfConfig":"144"},{"size":19329,"mtime":1664870738578,"results":"175","hashOfConfig":"144"},{"size":3845,"mtime":1664870738641,"results":"176","hashOfConfig":"144"},{"size":4613,"mtime":1664870737440,"results":"177","hashOfConfig":"144"},{"size":4777,"mtime":1664870739143,"results":"178","hashOfConfig":"144"},{"size":837,"mtime":1664870739292,"results":"179","hashOfConfig":"144"},{"size":2717,"mtime":1664870738671,"results":"180","hashOfConfig":"144"},{"size":3486,"mtime":1664870738701,"results":"181","hashOfConfig":"144"},{"size":5547,"mtime":1664870739173,"results":"182","hashOfConfig":"144"},{"size":1648,"mtime":1664870739321,"results":"183","hashOfConfig":"144"},{"size":1591,"mtime":1664870738912,"results":"184","hashOfConfig":"144"},{"size":5254,"mtime":1664870737704,"results":"185","hashOfConfig":"144"},{"size":3671,"mtime":1664870738792,"results":"186","hashOfConfig":"144"},{"size":10337,"mtime":1664870738852,"results":"187","hashOfConfig":"144"},{"size":15249,"mtime":1664924765054,"results":"188","hashOfConfig":"144"},{"size":11000,"mtime":1664870737673,"results":"189","hashOfConfig":"144"},{"size":5622,"mtime":1664870737574,"results":"190","hashOfConfig":"144"},{"size":10757,"mtime":1664870737212,"results":"191","hashOfConfig":"144"},{"size":5465,"mtime":1664870737538,"results":"192","hashOfConfig":"144"},{"size":2479,"mtime":1664870737742,"results":"193","hashOfConfig":"144"},{"size":11844,"mtime":1664870737247,"results":"194","hashOfConfig":"144"},{"size":11754,"mtime":1664870737640,"results":"195","hashOfConfig":"144"},{"size":19160,"mtime":1664870737853,"results":"196","hashOfConfig":"144"},{"size":10841,"mtime":1664870739203,"results":"197","hashOfConfig":"144"},{"size":67318,"mtime":1664870737779,"results":"198","hashOfConfig":"144"},{"size":6785,"mtime":1664870737143,"results":"199","hashOfConfig":"144"},{"size":4674,"mtime":1664870737280,"results":"200","hashOfConfig":"144"},{"size":3642,"mtime":1664870738968,"results":"201","hashOfConfig":"144"},{"size":8879,"mtime":1664870738733,"results":"202","hashOfConfig":"144"},{"size":4687,"mtime":1664870739382,"results":"203","hashOfConfig":"144"},{"size":5773,"mtime":1664870738763,"results":"204","hashOfConfig":"144"},{"size":2062,"mtime":1664870739409,"results":"205","hashOfConfig":"144"},{"size":270568,"mtime":1664870738058,"results":"206","hashOfConfig":"144"},{"size":5873,"mtime":1664870734797,"results":"207","hashOfConfig":"144"},{"size":3406,"mtime":1664870739524,"results":"208","hashOfConfig":"144"},{"size":559,"mtime":1664870739443,"results":"209","hashOfConfig":"144"},{"size":1327,"mtime":1664870734963,"results":"210","hashOfConfig":"144"},{"size":2535,"mtime":1664870735930,"results":"211","hashOfConfig":"144"},{"size":3827,"mtime":1664870735796,"results":"212","hashOfConfig":"144"},{"size":3356,"mtime":1664870735660,"results":"213","hashOfConfig":"144"},{"size":1807,"mtime":1664870736193,"results":"214","hashOfConfig":"144"},{"size":892,"mtime":1664870734868,"results":"215","hashOfConfig":"144"},{"size":6926,"mtime":1664870735761,"results":"216","hashOfConfig":"144"},{"size":2236,"mtime":1664870736160,"results":"217","hashOfConfig":"144"},{"size":1882,"mtime":1664870735364,"results":"218","hashOfConfig":"144"},{"size":7348,"mtime":1664870735694,"results":"219","hashOfConfig":"144"},{"size":4344,"mtime":1664870735068,"results":"220","hashOfConfig":"144"},{"size":1725,"mtime":1664870735262,"results":"221","hashOfConfig":"144"},{"size":2651,"mtime":1664870737035,"results":"222","hashOfConfig":"144"},{"size":2694,"mtime":1664870736932,"results":"223","hashOfConfig":"144"},{"size":3480,"mtime":1664870737000,"results":"224","hashOfConfig":"144"},{"size":4804,"mtime":1664870735963,"results":"225","hashOfConfig":"144"},{"size":678,"mtime":1664972083335,"results":"226","hashOfConfig":"144"},{"size":2696,"mtime":1664870736398,"results":"227","hashOfConfig":"144"},{"size":1831,"mtime":1664870735398,"results":"228","hashOfConfig":"144"},{"size":3364,"mtime":1664870736225,"results":"229","hashOfConfig":"144"},{"size":1835,"mtime":1664870735298,"results":"230","hashOfConfig":"144"},{"size":3644,"mtime":1664870735830,"results":"231","hashOfConfig":"144"},{"size":6517,"mtime":1664870735728,"results":"232","hashOfConfig":"144"},{"size":3362,"mtime":1664870736332,"results":"233","hashOfConfig":"144"},{"size":3924,"mtime":1664870735164,"results":"234","hashOfConfig":"144"},{"size":1688,"mtime":1664870735460,"results":"235","hashOfConfig":"144"},{"size":1439,"mtime":1664870735131,"results":"236","hashOfConfig":"144"},{"size":3357,"mtime":1664870735100,"results":"237","hashOfConfig":"144"},{"size":1333,"mtime":1664870734999,"results":"238","hashOfConfig":"144"},{"size":172,"mtime":1664968931933,"results":"239","hashOfConfig":"144"},{"size":2162,"mtime":1664870740347,"results":"240","hashOfConfig":"144"},{"size":873,"mtime":1664870739611,"results":"241","hashOfConfig":"144"},{"size":3120,"mtime":1664870736967,"results":"242","hashOfConfig":"144"},{"size":2343,"mtime":1664870736898,"results":"243","hashOfConfig":"144"},{"size":1200,"mtime":1664870739890,"results":"244","hashOfConfig":"144"},{"size":2485,"mtime":1664870735897,"results":"245","hashOfConfig":"144"},{"size":838,"mtime":1664870736538,"results":"246","hashOfConfig":"144"},{"size":1995,"mtime":1664870739645,"results":"247","hashOfConfig":"144"},{"size":992,"mtime":1664870736363,"results":"248","hashOfConfig":"144"},{"size":3474,"mtime":1664870735864,"results":"249","hashOfConfig":"144"},{"size":1195,"mtime":1664870735627,"results":"250","hashOfConfig":"144"},{"size":2125,"mtime":1664870740177,"results":"251","hashOfConfig":"144"},{"size":1756,"mtime":1664870740209,"results":"252","hashOfConfig":"144"},{"size":871,"mtime":1664870740242,"results":"253","hashOfConfig":"144"},{"size":1320,"mtime":1664870740146,"results":"254","hashOfConfig":"144"},{"size":2019,"mtime":1664870740309,"results":"255","hashOfConfig":"144"},{"size":9542,"mtime":1664870736030,"results":"256","hashOfConfig":"144"},{"size":1425,"mtime":1664870736435,"results":"257","hashOfConfig":"144"},{"size":2092,"mtime":1664972940951,"results":"258","hashOfConfig":"144"},{"size":5501,"mtime":1664870736463,"results":"259","hashOfConfig":"144"},{"size":1689,"mtime":1664870739993,"results":"260","hashOfConfig":"144"},{"size":334,"mtime":1664870740024,"results":"261","hashOfConfig":"144"},{"size":994,"mtime":1664870739963,"results":"262","hashOfConfig":"144"},{"size":623,"mtime":1664870740053,"results":"263","hashOfConfig":"144"},{"size":1471,"mtime":1664870740112,"results":"264","hashOfConfig":"144"},{"size":1157,"mtime":1664870736505,"results":"265","hashOfConfig":"144"},{"size":116,"mtime":1664870739469,"results":"266","hashOfConfig":"144"},{"size":1070,"mtime":1664870736803,"results":"267","hashOfConfig":"144"},{"size":2016,"mtime":1664870736583,"results":"268","hashOfConfig":"144"},{"size":1873,"mtime":1664870736852,"results":"269","hashOfConfig":"144"},{"size":176,"mtime":1664870736758,"results":"270","hashOfConfig":"144"},{"size":1642,"mtime":1664870736727,"results":"271","hashOfConfig":"144"},{"size":1139,"mtime":1664870736659,"results":"272","hashOfConfig":"144"},{"size":1127,"mtime":1664870736622,"results":"273","hashOfConfig":"144"},{"size":477,"mtime":1664870736691,"results":"274","hashOfConfig":"144"},{"size":3241,"mtime":1664870736263,"results":"275","hashOfConfig":"144"},{"size":1715,"mtime":1664870736061,"results":"276","hashOfConfig":"144"},{"size":1728,"mtime":1664870736296,"results":"277","hashOfConfig":"144"},{"size":1727,"mtime":1664870736094,"results":"278","hashOfConfig":"144"},{"size":514,"mtime":1664971700375,"results":"279","hashOfConfig":"144"},{"size":592,"mtime":1664973087334,"results":"280","hashOfConfig":"144"},{"size":270,"mtime":1664973107886,"results":"281","hashOfConfig":"144"},{"size":5894,"mtime":1664978672026,"results":"282","hashOfConfig":"144"},{"size":589,"mtime":1664975739826,"results":"283","hashOfConfig":"144"},{"size":5932,"mtime":1664981366358,"results":"284","hashOfConfig":"144"},{"size":7368,"mtime":1664983844807,"results":"285","hashOfConfig":"144"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6egdrr",{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"290"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"290"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"290"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"290"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"290"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"290"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"290"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"290"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"290"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"290"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"290"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"290"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"290"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"290"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"290"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"290"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\serviceWorker.js",[],["590","591"],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\app.js",["592","593"],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home1.js",["594","595"],"import React, { useState, useEffect } from 'react';\nimport Particle from '../components/Particle';\nimport SliderMainParticle from '../components/SliderMainParticle';\nimport FeatureBox from '../components/FeatureBox';\nimport CarouselCollectionRedux from '../components/CarouselCollectionRedux';\nimport ItemsOnSell from '../components/ItemsOnSell';\nimport AuthorListRedux from '../components/AuthorListRedux';\nimport Footer from '../components/footer';\nimport { createGlobalStyle } from 'styled-components';\nimport { ethers } from \"ethers\"\nimport NFT from '../../core/nft/nft.json'\nimport Marketplace from '../../core/nft/marketplace.json'\n\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: #fff;\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n\n\nconst Homeone = () => {\n\n  const [account, setAccount] = useState(null)\n  const [nft, setNFT] = useState({})\n  const [marketplace, setMarketplace] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Set signer\n    const signer = provider.getSigner()\n\n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n    })\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0])\n      await web3Handler()\n    })\n    //console.log(account)\n    loadContracts(signer)\n    console.log(signer)\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(\"0x7A87e841b2F4CBD9E1FFe03e151a9E322232801C\", Marketplace.abi, signer)\n    setMarketplace(marketplace)\n    const nft = new ethers.Contract(\"0xf704Ad28D2f3C164DE96A1013D8EA5a666d9B498\", NFT.abi, signer)\n    setNFT(nft)\n    console.log(marketplace)\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    web3Handler()\n  }, []);\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\", textAlign: 'center' }}>\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\n    </main>\n  )\n  return (\n    <div>\n      <GlobalStyles />\n      <section className=\"jumbotron no-bg\" style={{ backgroundImage: `url(${'./img/background/2.jpg'})` }}>\n        <Particle />\n        <SliderMainParticle />\n      </section>\n\n      <section className='container'>\n        <div className='row'>\n          <div className='col-lg-12'>\n            <div className='text-center'>\n              <h2>Popular Items</h2>\n\n              <div className=\"small-border\"></div>\n            </div>\n          </div>\n        </div>\n\n        <ItemsOnSell marketplace={marketplace} nft={nft} />\n\n\n      </section>\n\n      <section className='container-fluid bg-gray'>\n        <div className='row'>\n          <div className='col-lg-12'>\n            <div className='text-center'>\n              <h2>Hot Collections</h2>\n              <div className=\"small-border\"></div>\n            </div>\n          </div>\n        </div>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-lg-12'>\n              <CarouselCollectionRedux />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className='container'>\n        <div className='row'>\n          <div className='col-lg-12'>\n            <div className='text-center'>\n              <h2>Top Sellers</h2>\n              <div className=\"small-border\"></div>\n            </div>\n          </div>\n          <div className='col-lg-12'>\n            <AuthorListRedux />\n          </div>\n        </div>\n      </section>\n\n      <section className='container-fluid bg-gray'>\n        <div className='row'>\n          <div className='col-lg-12'>\n            <div className='text-center'>\n              <h2>Create and sell your NFTs</h2>\n              <div className=\"small-border\"></div>\n            </div>\n          </div>\n        </div>\n        <div className='container'>\n          <FeatureBox />\n        </div>\n      </section>\n\n      <Footer />\n\n    </div>\n  );\n}\nexport default Homeone;","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home.js",["596","597"],"import React, { useState, useEffect } from 'react';\nimport SliderMain from \"../components/SliderMain\";\nimport CarouselCollectionRedux from \"../components/CarouselCollectionRedux\";\nimport CarouselNewRedux from \"../components/CarouselNewRedux\";\nimport AuthorListRedux from \"../components/AuthorListRedux\";\nimport Footer from \"../components/footer\";\nimport { ethers } from \"ethers\"\nimport NFT from '../../core/nft/nft.json'\nimport Auction from '../../core/nft/auction.json'\nimport ItemsOnLiveAuction from '../components/ItemsOnLiveAuction';\n\nconst Home = () => {\n  const [account, setAccount] = useState(null)\n  const [nft, setNFT] = useState({})\n  const [auction, setMarketplace] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Set signer\n    const signer = provider.getSigner()\n\n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n    })\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0])\n      await web3Handler()\n    })\n    //console.log(account)\n    loadContracts(signer)\n    //console.log(signer)\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts  //9236b6B9c44D2b226Dd82Fc82eF53AEEf094AcbF\n    const auction = new ethers.Contract(\"0xDA82Dc03617111e0b95A42cA0796B87A597eb780\", Auction.abi, signer)\n    setMarketplace(auction)\n    const nft = new ethers.Contract(\"0xf704Ad28D2f3C164DE96A1013D8EA5a666d9B498\", NFT.abi, signer)\n    setNFT(nft)\n    // console.log(auction)\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    web3Handler()\n  }, []);\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\", textAlign: 'center' }}>\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\n    </main>\n  )\n\n  return(\n    <>\n<div>\n    {/* <section className=\"jumbotron breadcumb no-bg h-vh\" style={{backgroundImage: `url(${'./img/bg-shape-1.jpg'})`}}>\n         <SliderMain/>\n      </section> */}\n    <section className=\"jumbotron breadcumb no-bg h-vh landingcolor\">\n      <SliderMain />\n    </section>\n    <br />\n    <br />\n    <br />\n\n    {/* <section className='container no-top no-bottom'>\n        <FeatureBox/>\n      </section> */}\n    <section className=\"container no-bottom\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"text-start hdbr\">\n            <h2>LIVE AUCTION</h2>\n          </div>\n        </div>\n        <div className=\"col-lg-12\">\n          <ItemsOnLiveAuction auction={auction} nft={nft} />\n          <CarouselNewRedux />\n        </div>\n\n        <div className=\"row\" style={{ marginRight: \"0px\" }}>\n          <div className=\"col-lg-3 md-3 sm-2 text-center mb-3\">\n            <div className=\"stepbox cardh\">\n              <h2 className=\"step text-center\">Step 1</h2>\n              <div className=\" demo-icon-wrap\">\n                <i\n                  className=\"fa fa-fw\"\n                  aria-hidden=\"true\"\n                  title=\"Copy to use user-plus\"\n                >\n                  \n                </i>\n\n                <span className=\"text-grey\">[&amp;#xf234;]</span>\n                <br />\n                <br />\n                <h6>CREATE AND ACCOUNT</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-3 md-3 sm-2 text-center mb-3\">\n            <div className=\"stepbox cardh\">\n              <h2 className=\"step text-center \">Step 2</h2>\n              <div className=\"demo-icon-wrap\">\n                <i\n                  className=\"fa fa-fw\"\n                  aria-hidden=\"true\"\n                  title=\"Copy to use upload\"\n                >\n                  \n                </i>\n\n                <span className=\"text-grey\">[&amp;#xf093;]</span>\n                <br />\n                <br />\n                <h6>UPLOAD YOUR FAVORITE CAR PHOTOS</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-3 md-3 sm-2 text-center mb-3\">\n            <div className=\"stepbox cardh\">\n              <h2 className=\"step text-center \">Step 3</h2>\n              <div className=\"demo-icon-wrap\">\n                <i\n                  className=\"fa fa-fw\"\n                  aria-hidden=\"true\"\n                  title=\"Copy to use check-square-o\"\n                >\n                  \n                </i>\n\n                <span className=\"text-grey\">[&amp;#xf046;]</span>\n                <br />\n                <br />\n                <h6>PICK YOUR STYLE</h6>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"col-lg-3 md-3 sm-2 text-center mb-3\"\n            style={{ marginRight: \"0px\" }}\n          >\n            <div className=\"stepbox cardh\">\n              <h2 className=\"step text-center \">Step 4</h2>\n              <div className=\" demo-icon-wrap\">\n                <i\n                  className=\"fa fa-fw\"\n                  aria-hidden=\"true\"\n                  title=\"Copy to use file\"\n                >\n                  \n                </i>\n                <span className=\"text-grey\">[&amp;#xf15b;]</span>\n                <br />\n                <br />\n                <h6>APPROVE YOUR ORIGNAL VINTAGE CAR POTRATE</h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section className=\"container no-bottom\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"text-start hdbr\">\n            <h2>POPULAR COLLECTION</h2>\n            {/* <div className=\"small-border\"></div> */}\n          </div>\n        </div>\n        <div className=\"col-lg-12\">\n          <CarouselCollectionRedux />\n        </div>\n      </div>\n    </section>\n\n    <section className=\"container no-bottom\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"text-start hdbr\">\n            <h2>TOP SELLERS</h2>\n            {/* <div className=\"small-border\"></div> */}\n          </div>\n        </div>\n        <div className=\"col-lg-12\">\n          <AuthorListRedux />\n        </div>\n      </div>\n    </section>\n\n    {/* <section className='container'>\n        <div className='row'>\n          <div className='col-lg-12'>\n            <div className='text-center'>\n              <h2>Browse by category</h2>\n              <div className=\"small-border\"></div>\n            </div>\n          </div>\n        </div>\n        <Catgor/>\n      </section> */}\n\n    <Footer />\n  </div>\n    </>\n  )\n  };\nexport default Home;\n\n// fa-upload\n// fa-user-plus\n// fa-check-square-o\n// fa-file-text-o\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\menu\\ScrollToTop.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\menu\\header.js",["598","599","600","601","602","603","604","605"],"import React, { useEffect, useState } from \"react\";\nimport Breakpoint, {\n  BreakpointProvider,\n  setDefaultBreakpoints,\n} from \"react-socks\";\n//import { header } from 'react-bootstrap';\nimport { Link } from \"@reach/router\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\n\nsetDefaultBreakpoints([{ xs: 0 }, { l: 1199 }, { xl: 1200 }]);\n\nconst NavLink = (props) => (\n  <Link\n    {...props}\n    getProps={({ isCurrent }) => {\n      // the object returned here is passed to the\n      // anchor element's props\n      return {\n        className: isCurrent ? \"active\" : \"non-active\",\n      };\n    }}\n  />\n);\n\nconst Header = function ({ className }) {\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const [openMenu1, setOpenMenu1] = React.useState(false);\n  const [openMenu2, setOpenMenu2] = React.useState(false);\n  const [openMenu3, setOpenMenu3] = React.useState(false);\n  const handleBtnClick = () => {\n    setOpenMenu(!openMenu);\n  };\n  const handleBtnClick1 = () => {\n    setOpenMenu1(!openMenu1);\n  };\n  const handleBtnClick2 = () => {\n    setOpenMenu2(!openMenu2);\n  };\n  const handleBtnClick3 = () => {\n    setOpenMenu3(!openMenu3);\n  };\n  const closeMenu = () => {\n    setOpenMenu(false);\n  };\n  const closeMenu1 = () => {\n    setOpenMenu1(false);\n  };\n  const closeMenu2 = () => {\n    setOpenMenu2(false);\n  };\n  const closeMenu3 = () => {\n    setOpenMenu3(false);\n  };\n\n  const ref = useOnclickOutside(() => {\n    closeMenu();\n  });\n  const ref1 = useOnclickOutside(() => {\n    closeMenu1();\n  });\n  const ref2 = useOnclickOutside(() => {\n    closeMenu2();\n  });\n  const ref3 = useOnclickOutside(() => {\n    closeMenu3();\n  });\n\n  const [showmenu, btn_icon] = useState(false);\n  const [showpop, btn_icon_pop] = useState(false);\n  const [shownot, btn_icon_not] = useState(false);\n  const closePop = () => {\n    btn_icon_pop(false);\n  };\n  const closeNot = () => {\n    btn_icon_not(false);\n  };\n  const refpop = useOnclickOutside(() => {\n    closePop();\n  });\n  const refpopnot = useOnclickOutside(() => {\n    closeNot();\n  });\n\n  useEffect(() => {\n    const header = document.getElementById(\"myHeader\");\n    const totop = document.getElementById(\"scroll-to-top\");\n    const sticky = header.offsetTop;\n    const scrollCallBack = window.addEventListener(\"scroll\", () => {\n      btn_icon(false);\n      if (window.pageYOffset > sticky) {\n        header.classList.add(\"sticky\");\n        totop.classList.add(\"show\");\n      } else {\n        header.classList.remove(\"sticky\");\n        totop.classList.remove(\"show\");\n      }\n      if (window.pageYOffset > sticky) {\n        closeMenu();\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", scrollCallBack);\n    };\n  }, []);\n  return (\n    <header\n      className={`navbar white ${className}, fixed`}\n      id=\"myHeader\"\n      style={{\n        backgroundColor: \"rgb(41, 41, 41)\",\n        color: \"white\",\n        position: \"fixed\",\n      }}\n    >\n      <div className=\"container\">\n        <div className=\"row w-100-nav\">\n          <div className=\"logo px-0\">\n            <div className=\"navbar-title navbar-item\">\n              <NavLink to=\"/\">\n                {/* <img\n                    src=\"/img/logo.png\"\n                    className=\"img-fluid d-block\"\n                    alt=\"#\"\n                  />\n                  <img\n                    src=\"/img/logo-2.png\"\n                    className=\"img-fluid d-3\"\n                    alt=\"#\"\n                  />\n                  <img\n                    src=\"/img/logo-3.png\"\n                    className=\"img-fluid d-4\"\n                    alt=\"#\"\n                  />\n                  <img\n                    src=\"/img/logo-light.png\"\n                    className=\"img-fluid d-none\"\n                    alt=\"#\"\n                  /> */}\n\n                <img\n                  src=\"/img/Logo1.png\"\n                  className=\"img-fluid d-block logost\"\n                  alt=\"#\"\n                />\n                <img\n                  src=\"/img/Logo1.png\"\n                  className=\"img-fluid d-3 logost\"\n                  alt=\"#\"\n                />\n                <img\n                  src=\"/img/Logo1.png\"\n                  className=\"img-fluid d-4 logost\"\n                  alt=\"#\"\n                />\n                <img\n                  src=\"/img/Logo1.png\"\n                  className=\"img-fluid d-none logost\"\n                  alt=\"#\"\n                />\n              </NavLink>\n            </div>\n          </div>\n\n          {/* <div className='search'>\n            <input id=\"quick_search\" className=\"xs-hide\" name=\"quick_search\" placeholder=\"search item here...\" type=\"text\" />\n          </div> */}\n\n          <BreakpointProvider>\n            <Breakpoint l down>\n              {showmenu && (\n                <div className=\"menu\">\n                  {/* <div className='navbar-item'>\n                      <div ref={ref}>\n                        <div className=\"dropdown-custom dropdown-toggle btn\" \n                          onClick={handleBtnClick}\n                          >\n                          Home\n                        </div>\n                        {openMenu && (\n                          <div className='item-dropdown'>\n                            <div className=\"dropdown\" onClick={closeMenu}>\n                              <NavLink to=\"/homeGrey\" onClick={() => btn_icon(!showmenu)}>Homepage Grey</NavLink>\n                              <NavLink to=\"/\" onClick={() => btn_icon(!showmenu)}>Homepage</NavLink>\n                              <NavLink to=\"/home1\" onClick={() => btn_icon(!showmenu)}>Homepage 1</NavLink>\n                              <NavLink to=\"/home1Grey\" onClick={() => btn_icon(!showmenu)}>Homepage 1 Grey</NavLink>\n                              <NavLink to=\"/home2\" onClick={() => btn_icon(!showmenu)}>Homepage 2</NavLink>\n                              <NavLink to=\"/home2Grey\" onClick={() => btn_icon(!showmenu)}>Homepage 2 Grey</NavLink>\n                              <NavLink to=\"/home3\" onClick={() => btn_icon(!showmenu)}>Homepage 3</NavLink>\n                              <NavLink to=\"/home4\" onClick={() => btn_icon(!showmenu)}>Homepage 4</NavLink>\n                              <NavLink to=\"/home5\" onClick={() => btn_icon(!showmenu)}>Homepage 5</NavLink>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div> */}\n                  {/* <div className='navbar-item'>\n                      <div ref={ref1}>\n                        <div className=\"dropdown-custom dropdown-toggle btn\" \n                          onClick={handleBtnClick1}\n                          >\n                          Explore\n                        </div>\n                        {openMenu1 && (\n                          <div className='item-dropdown'>\n                            <div className=\"dropdown\" onClick={closeMenu1}>\n                              <NavLink to=\"/explore\" onClick={() => btn_icon(!showmenu)}>Explore</NavLink>\n                              <NavLink to=\"/explore2\" onClick={() => btn_icon(!showmenu)}>Explore 2</NavLink>\n                              <NavLink to=\"/exploreOpensea\" onClick={() => btn_icon(!showmenu)}>Explore OpenSea</NavLink>\n                              <NavLink to=\"/rangking\" onClick={() => btn_icon(!showmenu)}>Rangking</NavLink>\n                              <NavLink to=\"/colection/1\" onClick={() => btn_icon(!showmenu)}>Collection</NavLink>\n                              <NavLink to=\"/ItemDetail/1\" onClick={() => btn_icon(!showmenu)}>Items Details</NavLink>\n                              <NavLink to=\"/ItemDetailGrey/1\" onClick={() => btn_icon(!showmenu)}>Items Details Grey</NavLink>\n                              <NavLink to=\"/Auction\" onClick={() => btn_icon(!showmenu)}>Live Auction</NavLink>\n                              <NavLink to=\"/AuctionGrey\" onClick={() => btn_icon(!showmenu)}>Live Auction Grey</NavLink>\n                              <NavLink to=\"/helpcenter\" onClick={() => btn_icon(!showmenu)}>Help Center</NavLink>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div> */}\n                  {/* <div className='navbar-item'>\n                      <div ref={ref2}>\n                        <div className=\"dropdown-custom dropdown-toggle btn\" \n                          onClick={handleBtnClick2}\n                          >\n                          Pages\n                        </div>\n                        {openMenu2 && (\n                          <div className='item-dropdown'>\n                            <div className=\"dropdown\" onClick={closeMenu2}>\n                              <NavLink to=\"/Author/1\" onClick={() => btn_icon(!showmenu)}>Author</NavLink>\n                              <NavLink to=\"/AuthorGrey/1\" onClick={() => btn_icon(!showmenu)}>Author Grey</NavLink>\n                              <NavLink to=\"/AuthorOpensea\" onClick={() => btn_icon(!showmenu)}>Author OpenSea</NavLink>\n                              <NavLink to=\"/wallet\" onClick={() => btn_icon(!showmenu)}>Wallet</NavLink>\n                              <NavLink to=\"/walletGrey\" onClick={() => btn_icon(!showmenu)}>Wallet Grey</NavLink>\n                              <NavLink to=\"/create\" onClick={() => btn_icon(!showmenu)}>Create</NavLink>\n                              <NavLink to=\"/create2\" onClick={() => btn_icon(!showmenu)}>Create 2</NavLink>\n                              <NavLink to=\"/createOptions\" onClick={() => btn_icon(!showmenu)}>Create options</NavLink>\n                              <NavLink to=\"/mint\" onClick={() => btn_icon(!showmenu)}>Nft Minting</NavLink>\n                              <NavLink to=\"/minter\" onClick={() => btn_icon(!showmenu)}>Nft Minting Grey</NavLink>\n                              <NavLink to=\"/news\" onClick={() => btn_icon(!showmenu)}>News</NavLink>\n                              <NavLink to=\"/works\" onClick={() => btn_icon(!showmenu)}>Gallery</NavLink>\n                              <NavLink to=\"/login\" onClick={() => btn_icon(!showmenu)}>login</NavLink>\n                              <NavLink to=\"/loginTwo\" onClick={() => btn_icon(!showmenu)}>login 2</NavLink>\n                              <NavLink to=\"/register\" onClick={() => btn_icon(!showmenu)}>Register</NavLink>\n                              <NavLink to=\"/contact\" onClick={() => btn_icon(!showmenu)}>Contact Us</NavLink>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div> */}\n                  <div className=\"navbar-item\">\n                    <NavLink to=\"/home\" onClick={() => btn_icon(!showmenu)}>\n                      HOME\n                    </NavLink>\n                  </div>\n                  <div className=\"navbar-item\">\n                    <NavLink to=\"/activity\" onClick={() => btn_icon(!showmenu)}>\n                      MARKETPLACE\n                    </NavLink>\n                  </div>\n                  <div className=\"navbar-item\">\n                    <NavLink to=\"/create\" onClick={() => btn_icon(!showmenu)}>\n                      CREATE NFT\n                    </NavLink>\n                  </div>\n                  <div className=\"navbar-item\">\n                    <NavLink to=\"/mint\" onClick={() => btn_icon(!showmenu)}>\n                      STAKE\n                    </NavLink>\n                  </div>{\" \"}\n                  <div className=\"navbar-item\">\n                    <NavLink to=\"/Auction\" onClick={() => btn_icon(!showmenu)}>\n                      AUCTION\n                    </NavLink>\n                  </div>\n                  <div className=\"navbar-item\">\n                    <NavLink to=\"/login\" onClick={() => btn_icon(!showmenu)}>\n                      LOGIN\n                    </NavLink>\n                  </div>\n                  <div className=\"search\">\n                    <input\n                      id=\"quick_search\"\n                      className=\"xs-hide\"\n                      name=\"quick_search\"\n                      placeholder=\"search item here...\"\n                      type=\"text\"\n                    />\n                  </div>\n                  {/* <div className='navbar-item'>\n                      <div ref={ref3}>\n                        <div className=\"dropdown-custom dropdown-toggle btn\" \n                          onClick={handleBtnClick3}\n                          >\n                          Element\n                        </div>\n                        {openMenu3 && (\n                          <div className='item-dropdown'>\n                            <div className=\"dropdown\" onClick={closeMenu3}>\n                              <NavLink to=\"/elegantIcons\" onClick={() => btn_icon(!showmenu)}>Elegant Icon</NavLink>\n                              <NavLink to=\"/etlineIcons\" onClick={() => btn_icon(!showmenu)}>Etline Icon</NavLink>\n                              <NavLink to=\"/fontAwesomeIcons\" onClick={() => btn_icon(!showmenu)}>Font Awesome Icon</NavLink>\n                              <NavLink to=\"/accordion\" onClick={() => btn_icon(!showmenu)}>Accordion</NavLink>\n                              <NavLink to=\"/alerts\" onClick={() => btn_icon(!showmenu)}>Alerts</NavLink>\n                              <NavLink to=\"/price\" onClick={() => btn_icon(!showmenu)}>Pricing Table</NavLink>\n                              <NavLink to=\"/progressbar\" onClick={() => btn_icon(!showmenu)}>Progress bar</NavLink>\n                              <NavLink to=\"/tabs\" onClick={() => btn_icon(!showmenu)}>Tabs</NavLink>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div> */}\n                </div>\n              )}\n            </Breakpoint>\n\n            <Breakpoint xl>\n              <div className=\"menu\">\n                {/* <div className='navbar-item'>\n                        <div ref={ref}>\n                          <div className=\"dropdown-custom dropdown-toggle btn\" \n                             onMouseEnter={handleBtnClick} onMouseLeave={closeMenu}>\n                            Home\n                            <span className='lines'></span>\n                            {openMenu && (\n                            <div className='item-dropdown'>\n                              <div className=\"dropdown\" onClick={closeMenu}>\n                                <NavLink to=\"/homeGrey\">Homepage Grey</NavLink>\n                                <NavLink to=\"/\">Homepage</NavLink>\n                                <NavLink to=\"/home1\">Homepage 1</NavLink>\n                                <NavLink to=\"/home1Grey\">Homepage 1 Grey</NavLink>\n                                <NavLink to=\"/home2\">Homepage 2</NavLink>\n                                <NavLink to=\"/home2Grey\">Homepage 2 Grey</NavLink>\n                                <NavLink to=\"/home3\">Homepage 3</NavLink>\n                                <NavLink to=\"/home4\">Homepage 4</NavLink>\n                                <NavLink to=\"/home5\">Homepage 5</NavLink>\n                              </div>\n                            </div>\n                          )}\n                          </div>\n                          \n                        </div>\n                    </div> */}\n                {/* <div className='navbar-item'>\n                      <div ref={ref1}>\n                          <div className=\"dropdown-custom dropdown-toggle btn\" \n                             onMouseEnter={handleBtnClick1} onMouseLeave={closeMenu1}>\n                            Explore\n                            <span className='lines'></span>\n                            {openMenu1 && (\n                            <div className='item-dropdown'>\n                              <div className=\"dropdown\" onClick={closeMenu1}>\n                              <NavLink to=\"/explore\">Explore</NavLink>\n                              <NavLink to=\"/exploreGrey\">Explore Grey</NavLink>\n                              <NavLink to=\"/explore2\">Explore 2</NavLink>\n                              <NavLink to=\"/explore2Grey\">Explore 2 Grey</NavLink>\n                              <NavLink to=\"/exploreOpensea\">Explore OpenSea</NavLink>\n                              <NavLink to=\"/rangking\">Rangking</NavLink>\n                              <NavLink to=\"/rangkingGrey\">Rangking Grey</NavLink>\n                              <NavLink to=\"/colection/1\">Collection</NavLink>\n                              <NavLink to=\"/colectionGrey/1\">Collection Grey</NavLink>\n                              <NavLink to=\"/ItemDetail/1\">Items Details</NavLink>\n                              <NavLink to=\"/ItemDetailGrey/1\">Items Details Grey</NavLink>\n                              <NavLink to=\"/Auction\">Live Auction</NavLink>\n                              <NavLink to=\"/AuctionGrey\">Live Auction Grey</NavLink>\n                              <NavLink to=\"/helpcenter\">Help Center</NavLink>\n                              <NavLink to=\"/helpcenterGrey\">Help Center Grey</NavLink>\n                              </div>\n                            </div>\n                          )}\n                          </div>\n                          \n                        </div>\n                    </div> */}\n                {/* <div className='navbar-item'>\n                      <div ref={ref2}>\n                          <div className=\"dropdown-custom dropdown-toggle btn\" \n                             onMouseEnter={handleBtnClick2} onMouseLeave={closeMenu2}>\n                            Pages\n                            <span className='lines'></span>\n                            {openMenu2 && (\n                            <div className='item-dropdown'>\n                              <div className=\"dropdown\" onClick={closeMenu2}>\n                              <NavLink to=\"/Author/1\">Author</NavLink>\n                              <NavLink to=\"/AuthorGrey/1\">Author Grey</NavLink>\n                              <NavLink to=\"/AuthorOpensea\">Author OpenSea</NavLink>\n                              <NavLink to=\"/wallet\">Wallet</NavLink>\n                              <NavLink to=\"/walletGrey\">Wallet Grey</NavLink>\n                              <NavLink to=\"/create\">Create</NavLink>\n                              <NavLink to=\"/createGrey\">Create Grey</NavLink>\n                              <NavLink to=\"/create2\">Create 2</NavLink>\n                              <NavLink to=\"/createOptions\">Create Option</NavLink>\n                              <NavLink to=\"/mint\">Nft Minting</NavLink>\n                              <NavLink to=\"/minter\">Nft Minting Grey</NavLink>\n                              <NavLink to=\"/news\">News</NavLink>\n                              <NavLink to=\"/works\">Gallery</NavLink>\n                              <NavLink to=\"/login\">login</NavLink>\n                              <NavLink to=\"/loginTwo\">login 2</NavLink>\n                              <NavLink to=\"/register\">Register</NavLink>\n                              <NavLink to=\"/contact\">Contact Us</NavLink>\n                              </div>\n                            </div>\n                          )}\n                          </div>\n                        </div>\n                    </div> */}\n                <div className=\"navbar-item\">\n                  <NavLink to=\"/home\">\n                    HOME\n                    <span className=\"lines\"></span>\n                  </NavLink>\n                </div>\n                <div className=\"navbar-item\">\n                  <NavLink to=\"/activity\">\n                    MARKETPLACE\n                    <span className=\"lines\"></span>\n                  </NavLink>\n                </div>\n                <div className=\"navbar-item\">\n                  <NavLink to=\"/create\">\n                    CREATE NFT\n                    <span className=\"lines\"></span>\n                  </NavLink>\n                </div>\n                <div className=\"navbar-item\">\n                  <NavLink to=\"/mint\">\n                    STAKE\n                    <span className=\"lines\"></span>\n                  </NavLink>\n                </div>\n                <div className=\"navbar-item\">\n                  <NavLink to=\"/Auction\">\n                    AUCTION\n                    <span className=\"lines\"></span>\n                  </NavLink>\n                </div>\n                <div className=\"navbar-item\">\n                  <NavLink to=\"/colection/1\">Collection</NavLink>\n                </div>\n\n                <div className=\"navbar-item\">\n                  <NavLink to=\"/login\">\n                    LOGIN\n                    <span className=\"lines\"></span>\n                  </NavLink>\n                </div>\n                {/* <div className='navbar-item'> */}\n\n                <div className=\"search aln\">\n                  <input\n                    id=\"quick_search\"\n                    className=\"xs-hide\"\n                    name=\"quick_search\"\n                    placeholder=\"search item here...\"\n                    type=\"text\"\n                  />\n                  {/* </div> */}\n                </div>\n                {/* <div className='navbar-item'>\n                      <div ref={ref3}>\n                          <div className=\"dropdown-custom dropdown-toggle btn\" \n                             onMouseEnter={handleBtnClick3} onMouseLeave={closeMenu3}>\n                            Elements\n                            <span className='lines'></span>\n                            {openMenu3 && (\n                            <div className='item-dropdown'>\n                              <div className=\"dropdown\" onClick={closeMenu3}>\n                              <NavLink to=\"/elegantIcons\">Elegant Icon</NavLink>\n                              <NavLink to=\"/etlineIcons\">Etline Icon</NavLink>\n                              <NavLink to=\"/fontAwesomeIcons\">Font Awesome Icon</NavLink>\n                              <NavLink to=\"/accordion\">Accordion</NavLink>\n                              <NavLink to=\"/alerts\">Alerts</NavLink>\n                              <NavLink to=\"/price\">Pricing Table</NavLink>\n                              <NavLink to=\"/progressbar\">Progess Bar</NavLink>\n                              <NavLink to=\"/tabs\">Tabs</NavLink>\n                              </div>\n                            </div>\n                          )}\n                          </div>\n                        </div>\n                    </div> */}\n              </div>\n            </Breakpoint>\n          </BreakpointProvider>\n\n          <div className=\"mainside\">\n            <div className=\"connect-wal\">\n              <NavLink to=\"/wallet\">Connect Wallet</NavLink>\n            </div>\n            <div className=\"logout\">\n              <NavLink to=\"/createOptions\">Create</NavLink>\n              <div\n                id=\"de-click-menu-notification\"\n                className=\"de-menu-notification\"\n                onClick={() => btn_icon_not(!shownot)}\n                ref={refpopnot}\n              >\n                <div className=\"d-count\">8</div>\n                <i className=\"fa fa-bell\"></i>\n                {shownot && (\n                  <div className=\"popshow\">\n                    <div className=\"de-flex\">\n                      <h4>Notifications</h4>\n                      <span className=\"viewaall\">Show all</span>\n                    </div>\n                    <ul>\n                      <li>\n                        <div className=\"mainnot\">\n                          <img\n                            className=\"lazy\"\n                            src=\"../../img/author/author-2.jpg\"\n                            alt=\"\"\n                          />\n                          <div className=\"d-desc\">\n                            <span className=\"d-name\">\n                              <b>Mamie Barnett</b> started following you\n                            </span>\n                            <span className=\"d-time\">1 hour ago</span>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div className=\"mainnot\">\n                          <img\n                            className=\"lazy\"\n                            src=\"../../img/author/author-3.jpg\"\n                            alt=\"\"\n                          />\n                          <div className=\"d-desc\">\n                            <span className=\"d-name\">\n                              <b>Nicholas Daniels</b> liked your item\n                            </span>\n                            <span className=\"d-time\">2 hours ago</span>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div className=\"mainnot\">\n                          <img\n                            className=\"lazy\"\n                            src=\"../../img/author/author-4.jpg\"\n                            alt=\"\"\n                          />\n                          <div className=\"d-desc\">\n                            <span className=\"d-name\">\n                              <b>Lori Hart</b> started following you\n                            </span>\n                            <span className=\"d-time\">18 hours ago</span>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div className=\"mainnot\">\n                          <img\n                            className=\"lazy\"\n                            src=\"../../img/author/author-5.jpg\"\n                            alt=\"\"\n                          />\n                          <div className=\"d-desc\">\n                            <span className=\"d-name\">\n                              <b>Jimmy Wright</b> liked your item\n                            </span>\n                            <span className=\"d-time\">1 day ago</span>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div className=\"mainnot\">\n                          <img\n                            className=\"lazy\"\n                            src=\"../../img/author/author-6.jpg\"\n                            alt=\"\"\n                          />\n                          <div className=\"d-desc\">\n                            <span className=\"d-name\">\n                              <b>Karla Sharp</b> started following you\n                            </span>\n                            <span className=\"d-time\">3 days ago</span>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n              <div\n                id=\"de-click-menu-profile\"\n                className=\"de-menu-profile\"\n                onClick={() => btn_icon_pop(!showpop)}\n                ref={refpop}\n              >\n                <img\n                  src=\"../../img/author_single/author_thumbnail.jpg\"\n                  alt=\"\"\n                />\n                {showpop && (\n                  <div className=\"popshow\">\n                    <div className=\"d-name\">\n                      <h4>Monica Lucas</h4>\n                      <span\n                        className=\"name\"\n                        onClick={() => window.open(\"\", \"_self\")}\n                      >\n                        Set display name\n                      </span>\n                    </div>\n                    <div className=\"d-balance\">\n                      <h4>Balance</h4>\n                      12.858 ETH\n                    </div>\n                    <div className=\"d-wallet\">\n                      <h4>My Wallet</h4>\n                      <span id=\"wallet\" className=\"d-wallet-address\">\n                        DdzFFzCqrhshMSxb9oW3mRo4MJrQkusV3fGFSTwaiu4wPBqMryA9DYVJCkW9n7twCffG5f5wX2sSkoDXGiZB1HPa7K7f865Kk4LqnrME\n                      </span>\n                      <button id=\"btn_copy\" title=\"Copy Text\">\n                        Copy\n                      </button>\n                    </div>\n                    <div className=\"d-line\"></div>\n                    <ul className=\"de-submenu-profile\">\n                      <li>\n                        <span>\n                          <i className=\"fa fa-user\"></i> My profile\n                        </span>\n                      </li>\n                      <li>\n                        <span>\n                          <i className=\"fa fa-pencil\"></i> Edit profile\n                        </span>\n                      </li>\n                      <li>\n                        <span>\n                          <i className=\"fa fa-sign-out\"></i> Sign out\n                        </span>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <button className=\"nav-icon\" onClick={() => btn_icon(!showmenu)}>\n          <div className=\"menu-line white\"></div>\n          <div className=\"menu-line1 white\"></div>\n          <div className=\"menu-line2 white\"></div>\n        </button>\n      </div>\n    </header>\n  );\n};\nexport default Header;\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home1Grey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home2.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\homeGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home3.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home4.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home5.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\explore.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\explore2.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\explore2Grey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\home2Grey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\RankingReduxGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\exploreGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\RankingRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\helpcenter.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\AuctionGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Auction.js",["606","607"],"import React, { useEffect, useState } from 'react';\nimport ColumnAuctionRedux from '../components/ColumnAuctionRedux';\nimport Footer from '../components/footer';\nimport { createGlobalStyle } from 'styled-components';\nimport { ethers } from \"ethers\"\nimport NFT from '../../core/nft/nft.json'\nimport Auction from '../../core/nft/auction.json'\nimport ItemsOnAuction from '../components/ItemsOnAuction';\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);;\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n\n\n\n\nfunction Explore() {\n  const [account, setAccount] = useState(null)\n  const [nft, setNFT] = useState({})\n  const [auction, setMarketplace] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Set signer\n    const signer = provider.getSigner()\n\n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n    })\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0])\n      await web3Handler()\n    })\n    //console.log(account)\n    loadContracts(signer)\n    //console.log(signer)\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts  //9236b6B9c44D2b226Dd82Fc82eF53AEEf094AcbF\n    const auction = new ethers.Contract(\"0xDA82Dc03617111e0b95A42cA0796B87A597eb780\", Auction.abi, signer)\n    setMarketplace(auction)\n    const nft = new ethers.Contract(\"0xf704Ad28D2f3C164DE96A1013D8EA5a666d9B498\", NFT.abi, signer)\n    setNFT(nft)\n    // console.log(auction)\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    web3Handler()\n  }, []);\n  \n  if (loading) return (\n    <main style={{ padding: \"1rem 0\", textAlign: 'center' }}>\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\n    </main>\n  )\n\n  return (\n    <div>\n      <GlobalStyles />\n      <section className='jumbotron breadcumb no-bg' style={{ backgroundImage: `url(${'./img/background/subheader.jpg'})` }}>\n        <div className='mainbreadcumb'>\n          <div className='container'>\n            <div className='row m-10-hor'>\n              <div className='col-12'>\n                <h1 className='text-center'>Live Auction</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className='container'>\n        <ItemsOnAuction auction={auction} nft={nft} />\n      </section>\n\n      <section className='container'>\n        <ColumnAuctionRedux />\n      </section>\n\n\n      <Footer />\n    </div>\n\n  );\n}\nexport default Explore;","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\helpcenterGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\colection.js",["608","609"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Footer from '../components/footer';\nimport { createGlobalStyle } from 'styled-components';\nimport ColumnNewRedux from \"../components/ColumnNewRedux\";\nimport * as selectors from '../../store/selectors';\nimport { fetchHotCollections } from \"../../store/actions/thunks\";\nimport api from \"../../core/api\";\n\nimport NFT from '../../core/nft/nft.json'\nimport Marketplace from '../../core/nft/marketplace.json'\nimport Auction from '../../core/nft/auction.json'\nimport { ethers } from \"ethers\"\nimport MyListedItems from \"../components/myListedItems\";\nimport ItemsOnSell from '../components/ItemsOnSell';\nimport ItemsOnAuction from '../components/ItemsOnAuction';\n\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.white {\n    background: #fff;\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #111;\n    }\n    .item-dropdown .dropdown a{\n      color: #111 !important;\n    }\n  }\n`;\n\nconst Colection = function ({ collectionId = 1 }) {\n  const [openMenu, setOpenMenu] = React.useState(true);\n  const [openMenu1, setOpenMenu1] = React.useState(false);\n\n  const [account, setAccount] = useState(null)\n  const [nftCon, setNFT] = useState({})\n  const [marketplace, setMarketplace] = useState({})\n  const [auction, setAuction] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [data, setdata] = useState({\n    address: \"sample\",\n    Balance: null,\n  });\n  \n\n  const handleBtnClick = () => {\n    setOpenMenu(!openMenu);\n    setOpenMenu1(false);\n    document.getElementById(\"Mainbtn\").classList.add(\"active\");\n    document.getElementById(\"Mainbtn1\").classList.remove(\"active\");\n  };\n  const handleBtnClick1 = () => {\n    setOpenMenu1(!openMenu1);\n    setOpenMenu(false);\n    document.getElementById(\"Mainbtn1\").classList.add(\"active\");\n    document.getElementById(\"Mainbtn\").classList.remove(\"active\");\n  };\n\n  const dispatch = useDispatch();\n  const hotCollectionsState = useSelector(selectors.hotCollectionsState);\n  const hotCollections = hotCollectionsState.data ? hotCollectionsState.data[0] : {};\n\n  const web3Handler = async () => {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0])\n      // Get provider from Metamask\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      // Set signer\n      const signer = provider.getSigner()\n\n      window.ethereum.on('chainChanged', (chainId) => {\n        window.location.reload();\n      })\n\n      window.ethereum.on('accountsChanged', async function (accounts) {\n        setAccount(accounts[0])\n        await web3Handler()\n      })\n      loadContracts(signer)\n    } else {\n      console.log(\"metamask error\")\n    }\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(\"0x7A87e841b2F4CBD9E1FFe03e151a9E322232801C\", Marketplace.abi, signer)\n    setMarketplace(marketplace)\n    const nft = new ethers.Contract(\"0xf704Ad28D2f3C164DE96A1013D8EA5a666d9B498\", NFT.abi, signer)\n    setNFT(nft)\n    const auction = new ethers.Contract(\"0xDA82Dc03617111e0b95A42cA0796B87A597eb780\", Auction.abi, signer)\n    setAuction(auction);\n    setLoading(false);\n    console.log(marketplace);\n  }\n\n  const btnhandler = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n  \n    // res[0] for fetching a first wallet\n    window.ethereum\n      .request({ method: \"eth_requestAccounts\" })\n      .then((res) => accountChangeHandler(res[0]));\n    } else {\n    alert(\"install metamask extension!!\");\n    }\n  };\n  // Function for getting handling all events\nconst accountChangeHandler = (account) => {\n\t// Setting an address data\n\tsetdata({\n\taddress: account,\n\t});\n\t// Setting a balance\n\tgetbalance(account);\n};\nconst getbalance = (address) => {\n\n\t// Requesting balance method\n\twindow.ethereum\n\t.request({\n\t\tmethod: \"eth_getBalance\",\n\t\tparams: [address, \"latest\"]\n\t})\n\t.then((balance) => {\n\t\t// Setting balance\n\t\t//console.log(balance)\n\t\tsetdata({\n\t\t\taddress: address,\n\t\t\tBalance: ethers.utils.formatEther(balance),\n\t\t});\n\t});\n};\n\n\n\n  useEffect(() => {\n    dispatch(fetchHotCollections(collectionId));\n    web3Handler();\n    btnhandler();\n\n  }, [dispatch, collectionId]);\n\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\", textAlign: 'center' }}>\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\n    </main>\n  )\n\n  return (\n    <div>\n      <GlobalStyles />\n      {hotCollections.author && hotCollections.author.banner &&\n        <section id='profile_banner' className='jumbotron breadcumb no-bg' style={{ backgroundImage: `url(${api.baseUrl + hotCollections.author.banner.url})` }}>\n          <div className='mainbreadcumb'>\n          </div>\n        </section>\n      }\n\n      <section className='container d_coll no-top no-bottom'>\n        <div className='row'>\n          <div className=\"col-md-12\">\n            <div className=\"d_profile\">\n              <div className=\"profile_avatar\">\n                {hotCollections.author && hotCollections.author.avatar &&\n                  <div className=\"d_profile_img\">\n                    <img src={api.baseUrl + hotCollections.author.avatar.url} alt=\"\" />\n                    <i className=\"fa fa-check\"></i>\n                  </div>\n                }\n                <div className=\"profile_name\">\n                  <h4>\n                    {hotCollections.name}\n                    <div className=\"clearfix\"></div>\n                    {hotCollections.author && hotCollections.author.wallet &&\n                      <span id=\"wallet\" className=\"profile_wallet\">{account}</span>\n                    }\n                    <button id=\"btn_copy\" title=\"Copy Text\">Copy</button><br/>\n                    <span id=\"wallet\" className=\"profile_wallet\"> {data.Balance}</span>\n                  </h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className='container no-top'>\n        <div className='row'>\n          <div className='col-lg-12'>\n            <div className=\"items_filter\">\n              <ul className=\"de_nav\">\n                <li id='Mainbtn' className=\"active\"><span onClick={handleBtnClick}>On Sale</span></li>\n                <li id='Mainbtn1' className=\"\"><span onClick={handleBtnClick1}>Owned</span></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        {openMenu && (\n          <div id='zero1' className='onStep fadeIn'>\n            <ItemsOnAuction auction={auction} nft={nftCon} />\n            <ItemsOnSell marketplace={marketplace} nft={nftCon} />\n\n            {/* <ColumnNewRedux shuffle showLoadMore={false} authorId={hotCollections.author ? hotCollections.author.id : 1} /> */}\n          </div>\n        )}\n        {openMenu1 && (\n          <div id='zero2' className='onStep fadeIn'>\n            <MyListedItems marketplace={marketplace} nftCon={nftCon} account={account} />\n\n            {/* <ColumnNewRedux shuffle showLoadMore={false} /> */}\n          </div>\n        )}\n      </section>\n      <Footer />\n    </div>\n  );\n}\nexport default Colection;","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\ItemDetailRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\colectionGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\wallet.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\login.js",["610","611","612","613"],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Author.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\ItemDetailReduxGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\loginGrey.js",[],["614","615"],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\AuthorGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\register.js",[],["616","617"],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\walletGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\loginTwo.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\loginTwoGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\registerGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\works.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\price.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\createGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\news.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\newsSingle.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\create.js",["618","619","620","621","622","623","624","625","626","627","628"],"import Clock from \"../components/Clock\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  mintNFT,\n} from \"../../core/nft/interact\";\nimport { Buffer } from \"buffer\";\nimport { createGlobalStyle } from \"styled-components\";\nimport ColumnNewMint from \"../components/ColumnNewMint\";\nimport api from \"../../core/api\";\nimport Footer from \"../components/footer\";\nimport NFT from \"../../core/nft/nft.json\";\nimport Marketplace from \"../../core/nft/marketplace.json\";\nimport Auction from \"../../core/nft/auction.json\";\nimport { ethers } from \"ethers\";\nimport fetch from \"node-fetch\";\nimport axios from \"axios\";\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  .mainside{\n    .connect-wal{\n      display: none;\n    }\n    .logout{\n      display: flex;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n\nconst Create = (props) => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const [url, setURL] = useState(\"\");\n  const [nftPrice, setnftPrice] = useState(\"\");\n\n  const [image, setImage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [buffer, setBuffer] = useState(null);\n\n  const [isMinting, setisMinting] = useState(false);\n\n  const [account, setAccount] = useState(null);\n  const [nftCon, setNFT] = useState({});\n  const [marketplace, setMarketplace] = useState({});\n  const [auction, setAuction] = useState({});\n\n  const [select, setSelect] = useState(1);\n  const [minBid, setMinBid] = useState(0);\n  const [expDate, setExpDate] = useState(null);\n\n  const [previewImg, setPreviewImg] = useState(null);\n  const [duration, setDuration] = useState(0);\n\n  const web3Handler = async () => {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setAccount(accounts[0]);\n      // Get provider from Metamask\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      // Set signer\n      const signer = provider.getSigner();\n\n      window.ethereum.on(\"chainChanged\", (chainId) => {\n        window.location.reload();\n      });\n\n      window.ethereum.on(\"accountsChanged\", async function (accounts) {\n        setAccount(accounts[0]);\n        await web3Handler();\n      });\n      loadContracts(signer);\n    } else {\n      console.log(\"metamask error\");\n    }\n  };\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(\n      \"0x7A87e841b2F4CBD9E1FFe03e151a9E322232801C\",\n      Marketplace.abi,\n      signer\n    );\n    setMarketplace(marketplace);\n    const nft = new ethers.Contract(\n      \"0xf704Ad28D2f3C164DE96A1013D8EA5a666d9B498\",\n      NFT.abi,\n      signer\n    );\n    setNFT(nft);\n    const auction = new ethers.Contract(\n      \"0xDA82Dc03617111e0b95A42cA0796B87A597eb780\",\n      Auction.abi,\n      signer\n    );\n    setAuction(auction);\n  };\n\n  useEffect(() => {\n    async function getExistingWallet() {\n      const { address, status } = await getCurrentWalletConnected();\n\n      setWallet(address);\n      setStatus(status);\n\n      addWalletListener();\n      web3Handler();\n    }\n\n    getExistingWallet();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          🦊{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href={`https://metamask.io/download.html`}\n          >\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    console.log(\"buffer1\");\n    if (image === \"\" || name.trim() === \"\" || description.trim() === \"\") {\n      return;\n    } else {\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(image);\n      reader.onloadend = () => {\n        setBuffer({ buffer: Buffer(reader.result) });\n        console.log(\"buffer: \", buffer);\n      };\n      if (buffer === null) {\n        console.log(\"null\");\n\n        return;\n      }\n      setisMinting(true);\n      console.log(\"image: \" + image);\n\n      const formData = new FormData();\n      formData.append(\"title\", name);\n      formData.append(\"description\", description);\n      formData.append(\"price\", nftPrice);\n      formData.append(\"nftImage\", image);\n      axios\n        .post(\"http://localhost:2190/nft/createNft\", formData, {})\n        .then((response) => console.log(response));\n\n      const { success, status } = await mintNFT(\n        buffer,\n        name,\n        description,\n        nftPrice,\n        minBid,\n        expDate,\n        nftCon,\n        marketplace,\n        auction,\n        select\n      );\n      setStatus(status);\n      if (success) {\n        setName(\"\");\n        setDescription(\"\");\n        setURL(\"\");\n      }\n      setisMinting(false);\n    }\n  };\n\n  const previewItem = async () => {\n    if (image === \"\") {\n      return;\n    } else {\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(image);\n      reader.onloadend = () => {\n        setBuffer({ buffer: Buffer(reader.result) });\n      };\n      if (buffer === null) {\n        return;\n      }\n\n      const img = new Buffer.from(buffer.buffer).toString(\"base64\");\n      setPreviewImg(img);\n\n      var time = new Date(expDate).getTime() / 1000;\n      var dur = new Date(time * 1000);\n      setDuration(dur);\n    }\n  };\n\n  const isEmpty = useCallback(() => {\n    return name.trim() === \"\" || description.trim() === \"\";\n  }, [url, name, description]);\n\n  const handleShow = () => {\n    setSelect(1);\n    document.getElementById(\"tab_opt_1\").classList.add(\"show\");\n    document.getElementById(\"tab_opt_1\").classList.remove(\"hide\");\n    document.getElementById(\"tab_opt_2\").classList.remove(\"show\");\n    document.getElementById(\"btn1\").classList.add(\"active\");\n    document.getElementById(\"btn2\").classList.remove(\"active\");\n  };\n  const handleShow1 = () => {\n    setSelect(2);\n    document.getElementById(\"tab_opt_1\").classList.add(\"hide\");\n    document.getElementById(\"tab_opt_1\").classList.remove(\"show\");\n    document.getElementById(\"tab_opt_2\").classList.add(\"show\");\n    document.getElementById(\"btn1\").classList.remove(\"active\");\n    document.getElementById(\"btn2\").classList.add(\"active\");\n  };\n\n  return (\n    <div>\n      <GlobalStyles />\n      <section\n        className=\"jumbotron breadcumb no-bg\"\n        style={{ backgroundImage: `url(${\"./img/background/subheader.jpg\"})` }}\n      >\n        <div className=\"mainbreadcumb\">\n          <div className=\"container\">\n            <div className=\"row m-10-hor\">\n              <div className=\"col-12\">\n                <h1 className=\"text-center\">Create</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {walletAddress.length === 0 && (\n        <p>connect to metamask to start minting</p>\n      )}\n      {isMinting ? (\n        <h2>Minting in Process</h2>\n      ) : (\n        <section className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-7 offset-lg-1 mb-5\">\n              <form id=\"form-create-item\" className=\"form-border\" action=\"#\">\n                <div className=\"field-set\">\n                  <h5>Upload file</h5>\n                  <div className=\"d-create-file\">\n                    <p id=\"file_name\">PNG, JPG, GIF, WEBP or MP4. Max 200mb.</p>\n                    {image.name}\n                    <div className=\"browse\">\n                      <input\n                        type=\"button\"\n                        id=\"get_file\"\n                        className=\"btn-main\"\n                        value=\"Browse\"\n                      />\n                      <input\n                        id=\"upload_file\"\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"spacer-single\"></div>\n\n                  <h5>Select method</h5>\n                  <div className=\"de_tab tab_methods\">\n                    <ul className=\"de_nav\">\n                      <li id=\"btn1\" className=\"active\" onClick={handleShow}>\n                        <span>\n                          <i className=\"fa fa-tag\"></i>Fixed price\n                        </span>\n                      </li>\n                      <li id=\"btn2\" onClick={handleShow1}>\n                        <span>\n                          <i className=\"fa fa-hourglass-1\"></i>Timed auction\n                        </span>\n                      </li>\n                    </ul>\n                    <div className=\"de_tab_content pt-3\">\n                      <div id=\"tab_opt_1\">\n                        <h5>Price</h5>\n                        <input\n                          type=\"text\"\n                          name=\"item_price\"\n                          id=\"item_price\"\n                          onChange={(e) => setnftPrice(e.target.value)}\n                          className=\"form-control\"\n                          placeholder=\"enter price for one item (ETH)\"\n                        />\n                      </div>\n                      <div id=\"tab_opt_2\" className=\"hide\">\n                        <h5>Minimum bid</h5>\n                        <input\n                          type=\"text\"\n                          name=\"item_price_bid\"\n                          id=\"item_price_bid\"\n                          onChange={(e) => setMinBid(e.target.value)}\n                          className=\"form-control\"\n                          placeholder=\"enter minimum bid\"\n                        />\n\n                        <div className=\"spacer-20\"></div>\n\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <h5>Expiration date</h5>\n                            <input\n                              type=\"date\"\n                              name=\"bid_expiration_date\"\n                              onChange={(e) => setExpDate(e.target.value)}\n                              id=\"bid_expiration_date\"\n                              className=\"form-control\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"spacer-single\"></div>\n                  <h5>Title</h5>\n                  <input\n                    type=\"text\"\n                    name=\"item_title\"\n                    id=\"item_title\"\n                    onChange={(e) => setName(e.target.value)}\n                    className=\"form-control\"\n                    placeholder=\"e.g. 'Crypto Funk\"\n                  />\n                  <div className=\"spacer-10\"></div>\n                  <h5>Description</h5>\n                  <textarea\n                    data-autoresize\n                    name=\"item_desc\"\n                    id=\"item_desc\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    className=\"form-control\"\n                    placeholder=\"e.g. 'This is very limited item'\"\n                  ></textarea>\n                  <div className=\"spacer-10\"></div>\n                  {select == 1 && (\n                    <input\n                      type=\"button\"\n                      id=\"submit\"\n                      onClick={onMintPressed}\n                      className=\"btn-main\"\n                      value=\"Create and Mint Item\"\n                    />\n                  )}\n                  {select == 2 && (\n                    <input\n                      type=\"button\"\n                      id=\"submit\"\n                      onClick={onMintPressed}\n                      className=\"btn-main\"\n                      value=\"Create and Auction Item\"\n                    />\n                  )}\n                </div>\n              </form>\n            </div>\n            <div className=\"col-lg-3 col-sm-6 col-xs-12\">\n              <button\n                onClick={previewItem}\n                style={{ border: \"none\", background: \"none\" }}\n              >\n                {\" \"}\n                <h5>Preview item</h5>{\" \"}\n              </button>\n              <div className=\"nft__item m-0\">\n                <div className=\"de_countdown\">\n                  <Clock deadline={duration} />\n                </div>\n                <div className=\"author_list_pp\">\n                  <span>\n                    <img\n                      className=\"lazy\"\n                      src=\"./img/author/author-1.jpg\"\n                      alt=\"\"\n                    />\n                    <i className=\"fa fa-check\"></i>\n                  </span>\n                </div>\n                <div className=\"nft__item_wrap\">\n                  <span>\n                    <img\n                      style={{ height: \"12rem\" }}\n                      src={\"data:image/png;base64,\" + previewImg}\n                      id=\"get_file_2\"\n                      className=\"lazy nft__item_preview\"\n                      alt=\"\"\n                    />\n                  </span>\n                </div>\n                <div className=\"nft__item_info\">\n                  <span>\n                    <h4>{name}</h4>\n                  </span>\n                  <div className=\"nft__item_price\">\n                    {nftPrice} ETH<span> / {minBid}</span>\n                  </div>\n                  <div className=\"nft__item_action\">\n                    <span>Place a bid</span>\n                  </div>\n                  <div className=\"nft__item_like\">\n                    <i className=\"fa fa-heart\"></i>\n                    <span>0</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Create;\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\create3.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\contactGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\activity.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\contact.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\createOptions.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\activityGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\create2.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\etlineIcons.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\tabs.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\elegantIcons.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\accordion.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\alerts.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\progressbar.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Minter.js",["629","630","631","632","633"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  mintNFT,\n} from \"../../core/nft/interact\";\nimport { createGlobalStyle } from 'styled-components';\nimport ColumnNewMint from '../components/ColumnNewMint';\nimport api from \"../../core/api\";\nimport Footer from '../components/footer';\nimport NFT from '../../core/nft/nft.json'\nimport Marketplace from '../../core/nft/marketplace.json'\nimport Auction from '../../core/nft/auction.json'\nimport { ethers } from \"ethers\"\n\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  .mainside{\n    .connect-wal{\n      display: none;\n    }\n    .logout{\n      display: flex;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n\nconst Minter = (props) => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n  const [nftPrice, setnftPrice] = useState(\"\");\n\n  const [manualInput, setManualInput] = useState(false);\n  const [isMinting, setisMinting] = useState(false);\n\n  const [account, setAccount] = useState(null)\n  const [nftCon, setNFT] = useState({})\n  const [marketplace, setMarketplace] = useState({})\n  const [auction, setAuction] = useState({})\n  const [buffer, setBuffer] = useState(null)\n\n  // const createBuffer = async () => {\n  //   if (!url || !nftPrice || !name || !description) return\n  //    try {\n      \n  //     // var f = new File([url], url, {type: \"image/png\", lastModified: '101010'})\n  //     // console.log(f)\n  //     const file = url\n  //     const reader = new window.FileReader()\n  //     reader.readAsArrayBuffer(file)\n  //     reader.onloadend = () => {\n  //       setBuffer({ buffer: Buffer(reader.result) })\n  //       console.log('buffer', buffer)\n\n  //     }\n  //     if (buffer === null) { return }\n  //     console.log(buffer)\n      \n  //   } catch (error) {\n  //     console.log(\"ipfs uri upload error: \", error)\n  //   }\n  // }\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Set signer\n    const signer = provider.getSigner()\n   \n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n    })\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0])\n      await web3Handler()\n    })\n    loadContracts(signer)\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(\"0xd2186CC6cd7E4eaf273F920f6c7e0F56885Ad01a\", Marketplace.abi, signer)\n    setMarketplace(marketplace)\n    const nft = new ethers.Contract(\"0x99D5C3AF82DeB1cA0c5c5B4c026B66D869415d16\", NFT.abi, signer)\n    setNFT(nft)\n    const auction = new ethers.Contract(\"0x5aA6ab4576B7297400681b9aC2BABDe129aFB2A9\",Auction.abi,signer)\n    setAuction(auction);\n  }\n\n  useEffect(() => {\n    async function getExistingWallet() {\n      const { address, status } = await getCurrentWalletConnected();\n  \n      setWallet(address);\n      setStatus(status);\n  \n      addWalletListener();\n      web3Handler();\n    }\n\n    getExistingWallet();\n  }, []);\n  \n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          // setStatus(\"Fill in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          🦊{\" \"}\n          <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    setisMinting(true);\n    const { success, status } = await mintNFT(url, name, description,nftPrice,nftCon,marketplace,auction);\n    setStatus(status);\n    if (success) {\n      setName(\"\");\n      setDescription(\"\");\n      setURL(\"\");\n    }\n    setisMinting(false);\n  };\n  \n  const toggleInput = () => {\n    setManualInput(!manualInput)\n    setName(\"\");\n    setDescription(\"\");\n    setURL(\"\");\n  };\n\n  const onSelectNft = (nft) => {\n    setName(nft.title);\n    setDescription(nft.description);\n    setURL(api.baseUrl + nft.preview_image.url);\n    setnftPrice(nft.price)\n    \n  }\n\n  const isEmpty = useCallback(() => {\n    return  name.trim() === '' || description.trim() === '';\n  }, [url, name, description]);\n\n  return (\n    <div>\n      \n      <GlobalStyles/>\n      <section className='jumbotron breadcumb no-bg' style={{backgroundImage: `url(${'./img/background/subheader.jpg'})`}}>\n        <div className='mainbreadcumb'>\n          <div className='container'>\n            <div className='row m-10-hor'>\n              <div className='col-12'>\n                <h1 className='text-center'>NFT Minting</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className='container'>\n      <div className=\"Minter\">\n        <h1>Mint your NFT</h1>\n        \n        {walletAddress.length === 0 && (\n        <button id=\"walletButton\" className=\"btn-main\" onClick={connectWalletPressed}>\n            Connect Metamask\n        </button>\n        )}\n        {walletAddress.length > 0 && (\n          \"Connected Address: \" + walletAddress\n        )}\n        <br/><br/>\n        {walletAddress.length === 0 && (\n          <p>\n            connect to metamask to start minting\n          </p>\n        )}\n        {isMinting ? (\n          <h2>Minting in Process</h2>\n        ) : (\n        <div>\n          {\n            walletAddress.length > 0 &&\n            <>\n              <button id=\"toggleButton\" className=\"btn-main\" onClick={() => toggleInput()}>\n                Switch to {manualInput ? 'select' : 'manual'} input\n              </button>\n              <br />\n              <br />\n              {!manualInput ? (\n                <ColumnNewMint onSelectNft={onSelectNft} showLoadMore={false} authorId=\"1\" />\n              ) : (\n                <form>\n                  <h2>Link to image asset: </h2>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"e.g. https://gateway.pinata.cloud/ipfs/<hash>\"\n                    onChange={(event) => setURL(event.target.value)}\n                  />\n                  <h2>Name: </h2>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"e.g. My first NFT!\"\n                    onChange={(event) => setName(event.target.value)}\n                  />\n                  <h2>Description: </h2>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"e.g. My Cool NFT!\"\n                    onChange={(event) => setDescription(event.target.value)}\n                  />\n                </form>\n              )}\n              {!isEmpty() &&\n                <>\n                  <span>NFT Name: { name }</span> \n                  <br />\n                  <br />\n                  <button id=\"mintButton\" className=\"btn-main\" onClick={onMintPressed}>\n                    Proceed to Mint\n                  </button>\n                  <br />\n                </>\n              }\n              <p id=\"status\">\n                {status}\n              </p>\n            </>\n          }\n        </div>\n        )}\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Minter;\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Opensea\\author.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\MinterGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Opensea\\explore.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\fontAwesomeIcons.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\Styles.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\nft\\interact.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\api.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselCollectionRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Particle.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ItemsOnSell.js",["634","635","636","637","638","639","640","641","642","643"],"import React, { memo, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../../store/selectors';\r\nimport * as actions from '../../store/actions/thunks';\r\nimport { clearNfts, clearFilter } from '../../store/actions';\r\nimport NftCard from './NftCard';\r\nimport { shuffleArray } from '../../store/utils';\r\nimport { ethers } from \"ethers\"\r\nimport { Buffer } from 'buffer';\r\nimport styled from \"styled-components\";\r\n\r\nconst Outer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n`;\r\n//react functional component\r\nconst ItemsOnSell = ({ marketplace, nft }) => {\r\n\r\n  // const dispatch = useDispatch();\r\n  // const nftItems = useSelector(selectors.nftItems);\r\n  // const [height, setHeight] = useState(0);\r\n\r\n  const [items, setItems] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const loadMarketplaceItems = async () => {\r\n    // Load all unsold items\r\n    const itemCount = await marketplace.itemCount()\r\n    \r\n    let items = []\r\n    for (let i = 1; i <= itemCount; i++) {\r\n      const item = await marketplace.items(i)\r\n     console.log(item.tokenId) \r\n      if (!item.sold) {\r\n        // get uri url from nft contract\r\n        const uri = await nft.tokenURI(item.tokenId)\r\n        // use uri to fetch the nft metadata stored on ipfs \r\n        const response = await fetch(uri)\r\n        const metadata = await response.json()\r\n        // get total price of item (item price + fee)\r\n        const totalPrice = await marketplace.getTotalPrice(item.itemId)\r\n        // Add item to items array\r\n        const img = new Buffer.from(metadata.image.buffer).toString(\"base64\")\r\n        items.push({\r\n          totalPrice,\r\n          itemId: item.itemId,\r\n          seller: item.seller,\r\n          name: metadata.name,\r\n          description: metadata.description,\r\n          image: img\r\n        })\r\n      }\r\n    }\r\n\r\n    setItems(items)\r\n    setLoading(false)\r\n  }\r\n\r\n  const buyMarketItem = async (item) => {\r\n    await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\r\n    loadMarketplaceItems()\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    loadMarketplaceItems()\r\n  },[] );\r\n  if (loading) return (\r\n    <main style={{ padding: \"1rem 0\" }}>\r\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\r\n    </main>\r\n  )\r\n\r\n  return (\r\n    <div className='row'>\r\n      {items.length > 0 ?\r\n        <>\r\n          {items.map((item, idx) => (\r\n            <div key={idx} className='d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4'>\r\n              <div className=\"nft__item m-0\">\r\n\r\n                <div className=\"nft__item_wrap\" style={{ height: '16rem' }}>\r\n                  <Outer>\r\n                    <span>\r\n                      <img style={{maxHeight: '14rem'}} src={\"data:image/png;base64,\" + item.image} className=\"lazy nft__item_preview\" alt=\"\" />\r\n                    </span>\r\n                  </Outer>\r\n                </div>\r\n\r\n                <div className=\"nft__item_info\">\r\n                  <span >\r\n                    <h4>{item.name}</h4>\r\n                  </span>\r\n                  {\r\n                    <div className=\"nft__item_price\">\r\n                      {ethers.utils.formatEther(item.totalPrice)} ETH\r\n                      <span onClick={()=> buyMarketItem(item) }>Buy</span>\r\n\r\n                    </div>\r\n\r\n                  }\r\n\r\n                  <div className=\"nft__item_like\">\r\n                    <i className=\"fa fa-heart\"></i><span>50</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </>\r\n        : (<div></div>)\r\n\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemsOnSell;","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\FeatureBox.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainParticle.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\AuthorListRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ItemsOnLiveAuction.js",["644"],"import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\"\r\nimport { Buffer } from 'buffer';\r\nimport Slider from \"react-slick\";\r\nimport styled from \"styled-components\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Clock from \"./Clock\";\r\nimport { carouselNew } from \"./constants\";\r\n\r\nconst Outer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ItemsOnLiveAuction = ({ auction, nft }) => {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [bidPrice, setBidPrice] = useState(0);\r\n\r\n    const loadMarketplaceItems = async () => {\r\n        // Load all unsold items\r\n        const itemCount = await auction.itemCount()\r\n        let items = []\r\n        for (let i = 1; i <= itemCount; i++) {\r\n            const item = await auction.items(i)\r\n\r\n            const aucitem = await auction.getTokenAuctionDetails(item.nft, item.tokenID)\r\n\r\n\r\n            if (aucitem.isActive) {\r\n                // get uri url from nft contract\r\n                const uri = await nft.tokenURI(item.tokenID)\r\n                //console.log(item.tokenID)\r\n                // // use uri to fetch the nft metadata stored on ipfs \r\n                const response = await fetch(uri)\r\n                const metadata = await response.json()\r\n\r\n                // // Add item to items array\r\n                const img = new Buffer.from(metadata.image.buffer).toString(\"base64\")\r\n                let unix_timestamp = aucitem.duration;\r\n                var date = new Date(unix_timestamp * 1000);\r\n\r\n                if (date > Date.now()) {\r\n                    items.push({\r\n                        price: aucitem.price,\r\n                        maxBid: aucitem.maxBid,\r\n                        itemId: item.tokenID,\r\n                        seller: aucitem.seller,\r\n                        name: metadata.name,\r\n                        description: metadata.description,\r\n                        image: img,\r\n                        duration: date\r\n                    })\r\n                }\r\n\r\n            }\r\n        }\r\n        setLoading(false)\r\n        setItems(items)\r\n    }\r\n\r\n    const makeABid = async (item) => {\r\n\r\n        console.log(item.price)\r\n        if (bidPrice < ethers.utils.formatEther(item.price)) {\r\n            console.log('low price')\r\n            return\r\n        }\r\n        if (item.duration < Date.now()) {\r\n            console.log(\"date\")\r\n            return\r\n        }\r\n\r\n        await auction.bid(nft.address, item.itemId, { value: ethers.utils.parseEther(bidPrice.toString()) })\r\n        setLoading(true)\r\n        loadMarketplaceItems()\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        loadMarketplaceItems()\r\n    }, []);\r\n\r\n\r\n\r\n    if (loading) return (\r\n        <main style={{ padding: \"1rem 0\" }}>\r\n            <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\r\n        </main>\r\n    )\r\n\r\n    return (\r\n        <div className=\"nft\">\r\n            <Slider {...carouselNew}>\r\n                {items &&\r\n                    items.map((nft, idx) => (\r\n\r\n                        <div className=\"itm\" key={idx} >\r\n                            <div className=\"d-item\">\r\n                                <div className=\"nft__item\">\r\n                                    {nft.duration && (\r\n                                        <div className=\"de_countdown\">\r\n                                            <Clock deadline={nft.duration} />\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <br />\r\n                                    <br />\r\n                                    <div\r\n                                        className=\"nft__item_wrap\"\r\n                                        style={{ height: '10rem' }}\r\n                                    >\r\n                                        <Outer>\r\n                                            <span>\r\n                                                <img\r\n                                                    src={\"data:image/png;base64,\" + nft.image}\r\n                                                    className=\"lazy nft__item_preview\"\r\n\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </span>\r\n                                        </Outer>\r\n                                    </div>\r\n                                    <div className=\"nft__item_info\">\r\n                                        <div className=\"d-flex\" >\r\n                                            <span >\r\n                                                <h4>{nft.name}</h4>\r\n                                            </span>\r\n                                            <div className=\"nft__item_like pt-3\" style={{ float: \"right\", marginLeft: \"auto\" }}>\r\n                                                <i style={{ color: \"red\" }} className=\"fa fa-heart\"></i><span>50</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex bid\">\r\n                                            <div className=\"nft__item_price\">\r\n                                                {ethers.utils.formatEther(nft.price)} ETH\r\n                                                <span>\r\n                                                    /{ethers.utils.formatEther(nft.maxBid)}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"nft__item_action mb-3\">\r\n                                                <span>\r\n                                                    <input style={{ borderRadius: '5px', margin: '2px', maxWidth: '6rem' }} onChange={(e) => setBidPrice(e.target.value)} type=\"number\" placeholder='make a bid' />\r\n\r\n                                                </span>\r\n                                                <br />\r\n                                                <span\r\n                                                    onClick={() => makeABid(nft)}\r\n                                                    className=\"bidd\"\r\n                                                >\r\n                                                    Place bid\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    ))}\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemsOnLiveAuction;\r\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMain.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnNewMint.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\footer.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselNewRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Clock.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\TopFilterBar.js",["645"],"import React, { memo, useCallback, useEffect, useState } from 'react';\nimport Select from 'react-select';\n\nconst TopFilterBar = ({ setSide, setOwner }) => {\n\n    const [address, setAddress] = useState();\n\n    const handleSide = useCallback((option) => {\n        const { value } = option;\n        setSide(value);\n    }, [setSide]);\n    const handleOwners = useCallback((option) => {\n        const { value } = option;\n        setOwner(value);\n    }, [setOwner]);\n\n    const sides = [\n        {\n            value: 0,\n            label: 'Buy Order'\n        },\n        {\n            value: 1,\n            label: 'Sell Order'\n        }\n    ];\n\n    const owners = [\n        {\n            value: 0,\n            label: 'Created by me'\n        },\n        {\n            value: 1,\n            label: 'Owned by me'\n        }\n    ]\n\n    const defaultValue = {\n        value: null,\n        label: 'Select Filter'\n    };\n    \n    const customStyles = {\n        option: (base, state) => ({\n            ...base,\n            background: \"#fff\",\n            color: \"#333\",\n            borderRadius: state.isFocused ? \"0\" : 0,\n            \"&:hover\": {\n                background: \"#eee\",\n            }\n        }),\n        menu: base => ({\n            ...base,\n            borderRadius: 0,\n            marginTop: 0\n        }),\n        menuList: base => ({\n            ...base,\n            padding: 0\n        }),\n        control: (base, state) => ({\n            ...base,\n            padding: 2\n        })\n    };\n\n    const getAddress = async () => {\n        try {\n            const addressArray = await window.ethereum.request({\n                method: \"eth_requestAccounts\",\n            });\n            setAddress(addressArray[0]);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        getAddress();\n    }, [getAddress]);\n\n    return (\n        <div className=\"items_filter\">\n            <div className='dropdownSelect one'>\n                <Select \n                    styles={customStyles} \n                    menuContainerStyle={{'zIndex': 999}}\n                    options={[defaultValue, ...sides]}\n                    onChange={handleSide}\n                />\n            </div>\n            { address &&\n                <div className='dropdownSelect one'>\n                    <Select \n                        styles={customStyles} \n                        menuContainerStyle={{'zIndex': 999}}\n                        options={[defaultValue, ...owners]}\n                        onChange={handleOwners}\n                    />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default memo(TopFilterBar);","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\Assets.js",["646"],"import React, { memo, useEffect, useState } from 'react';\nimport AssetCard from './AssetCard';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider } from '../../../core/opensea/constants';\n\n//react functional component\nconst Assets = ({ showLoadMore = true, side = null, owner = null }) => {\n    const [height, setHeight] = useState(0);\n    const [page, setPage] = useState(1);\n    const [orderList, setOrderList] = useState();\n    const [currentSide, setCurrentSide] = useState(side);\n    const [currentOwner, setCurrentOwner] = useState(side);\n\n\n    const onImgLoad = ({target:img}) => {\n        let currentHeight = height;\n        if(currentHeight < img.offsetHeight) {\n            setHeight(img.offsetHeight);\n        }\n    }\n\n    const fetchData = async (resetData = false, currentPage = 1) => {\n        let accountAddress = '';\n        try{\n            const addressArray = await window.ethereum.request({\n                method: \"eth_accounts\",\n            });\n            accountAddress = addressArray[0];\n        } catch (err) {\n            console.log(err)\n        }\n        const seaport = new OpenSeaPort(web3Provider, {\n            networkName: Network.Rinkeby\n        });\n\n        const query = {};\n        if(resetData) {\n            query.offset = 0;\n        }\n        if(owner) {\n            query.owner = accountAddress;\n            query.limit = 10;\n            const { assets } = await seaport.api.getAssets(query, currentPage)\n            let nfts = orderList ? !resetData ? [...orderList, ...assets] : assets : assets;\n            setOrderList(nfts);\n        }\n    }\n    \n    useEffect(() => {\n        if(owner !== currentOwner) {\n            setCurrentOwner(owner);\n        }\n        if(side !== currentSide) {\n            setCurrentSide(side);\n        } \n        if(owner !== currentOwner || side !== currentSide) {\n            setTimeout(() => fetchData(true), 1000);\n            setPage(1);\n        }\n        else {\n            setTimeout(() => fetchData(), 1000);\n        }\n    }, [side, owner]);\n\n    const loadMore = () => {\n        setPage(page+1);\n        fetchData(false, page+1);\n    }\n\n    return (\n        <div className='row'>\n            {orderList && orderList.map( (nft, index) => (\n                <AssetCard nft={nft} key={index} onImgLoad={onImgLoad} height={height} />\n            ))}\n            { showLoadMore && orderList &&\n                <div className='col-lg-12'>\n                    <div className=\"spacer-single\"></div>\n                    <span onClick={loadMore} className=\"btn-main lead m-auto\">Load More</span>\n                </div>\n            }\n        </div>              \n    );\n};\n\nexport default memo(Assets);","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\Column.js",["647"],"import React, { memo, useEffect, useState } from 'react';\nimport Card from './Card';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider } from '../../../core/opensea/constants';\n\n//react functional component\nconst Column = ({ showLoadMore = true, side = null, owner = null, ownerAddress = null }) => {\n    const [height, setHeight] = useState(0);\n    const [page, setPage] = useState(1);\n    const [orderList, setOrderList] = useState();\n    const [currentSide, setCurrentSide] = useState(side);\n    const [currentOwner, setCurrentOwner] = useState(owner);\n    const [address, setAddress] = useState();\n\n\n    const onImgLoad = ({target:img}) => {\n        let currentHeight = height;\n        if(currentHeight < img.offsetHeight) {\n            setHeight(img.offsetHeight);\n        }\n    }\n\n    const fetchData = async (resetData = false, currentPage = 1) => {\n        const seaport = new OpenSeaPort(web3Provider, {\n            networkName: Network.Rinkeby\n        });\n\n        const query = {\n            // Possible query options:\n            // 'bundled'\n            // 'asset_contract_address'\n            // 'taker'\n            // 'token_id'\n            // 'token_ids'\n            // 'sale_kind'\n            \n        };\n        if(side !== null) {\n            query.side = side;\n        }\n        if(resetData) {\n            query.offset = 0;\n        }\n        if(owner !== null || ownerAddress !== null) {\n            if (owner) {\n                query.owner = address;\n            } else {\n                query.maker = address;\n            }\n            if(ownerAddress) {\n                query.owner = ownerAddress;\n            }\n        }\n        console.log(query);\n\n        const { orders } = await seaport.api.getOrders(query, currentPage)\n        let nfts = orderList ? !resetData ? [...orderList, ...orders] : orders : orders;\n        setOrderList(nfts);\n    }\n\n    const getAddress = async () => {\n        try {\n            const addressArray = await window.ethereum.request({\n              method: \"eth_accounts\",\n            });\n            setAddress(addressArray[0]);\n        } catch (err) {\n            try {\n                const addressArray = await window.ethereum.request({\n                    method: \"eth_requestAccounts\",\n                });\n                setAddress(addressArray[0]);\n            } catch (errRequest) {\n                console.log(errRequest)\n            }\n        }\n    }\n    \n    useEffect(() => {\n        getAddress();\n        if(owner !== currentOwner) {\n            setCurrentOwner(owner);\n        }\n        if(side !== currentSide) {\n            setCurrentSide(side);\n        } \n        if(owner !== currentOwner || side !== currentSide) {\n            fetchData(true);\n            setPage(1);\n        }\n        else {\n            fetchData();\n        }\n    }, [side, owner]);\n\n    const loadMore = () => {\n        setPage(page+1);\n        fetchData(false, page+1);\n    }\n\n    return (\n        <div className='row'>\n            {orderList && orderList.map( (nft, index) => (\n                <Card nft={nft} key={index} onImgLoad={onImgLoad} height={height} />\n            ))}\n            { showLoadMore &&\n                <div className='col-lg-12'>\n                    <div className=\"spacer-single\"></div>\n                    <span onClick={loadMore} className=\"btn-main lead m-auto\">Load More</span>\n                </div>\n            }\n        </div>              \n    );\n};\n\nexport default memo(Column);","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\pricing.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\wallet.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnNewRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainParticleGrey.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnAuctionRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\myListedItems.js",["648","649","650","651","652","653","654","655","656","657"],"import React, { memo, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../../store/selectors';\r\nimport * as actions from '../../store/actions/thunks';\r\nimport { clearNfts, clearFilter } from '../../store/actions';\r\nimport NftCard from './NftCard';\r\nimport { shuffleArray } from '../../store/utils';\r\nimport { ethers } from \"ethers\"\r\nimport { Buffer } from 'buffer';\r\nimport styled from \"styled-components\";\r\n\r\nconst Outer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n`;\r\n//react functional component\r\nconst MyListedItems = ({ marketplace, nftCon, account }) => {\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [listedItems, setListedItems] = useState([])\r\n\r\n\r\n  const loadListedItems = async () => {\r\n    // Load all sold items that the user listed\r\n    const itemCount = await marketplace.itemCount()\r\n    let listedItems = []\r\n    for (let indx = 1; indx <= itemCount; indx++) {\r\n      const i = await marketplace.items(indx)\r\n      if (i.seller.toLowerCase() === account) {\r\n        // get uri url from nft contract\r\n        const uri = await nftCon.tokenURI(i.tokenId)\r\n        // use uri to fetch the nft metadata stored on ipfs \r\n        const response = await fetch(uri)\r\n        const metadata = await response.json()\r\n        // get total price of item (item price + fee)\r\n        const totalPrice = await marketplace.getTotalPrice(i.itemId)\r\n        // define listed item object\r\n        const img = new Buffer.from(metadata.image.buffer).toString(\"base64\")\r\n        let item = {\r\n          totalPrice,\r\n          price: i.price,\r\n          itemId: i.itemId,\r\n          name: metadata.name,\r\n          description: metadata.description,\r\n          image: img\r\n        }\r\n        listedItems.push(item)\r\n      }\r\n    }\r\n    setLoading(false)\r\n    setListedItems(listedItems)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    loadListedItems()\r\n  }, []);\r\n  if (loading) return (\r\n    <main style={{ padding: \"1rem 0\" }}>\r\n      <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\r\n    </main>\r\n  )\r\n\r\n  return (\r\n    <div className='row'>\r\n      {listedItems.length > 0 ?\r\n        <>\r\n          {listedItems.map((item, idx) => (\r\n            <div key={idx} className='d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4'>\r\n              <div className=\"nft__item m-0\">\r\n                <div className=\"nft__item_wrap\" style={{ height: '18rem' }}>\r\n                  <Outer>\r\n                    <span>\r\n                      <img style={{ maxHeight: '14rem' }} src={\"data:image/png;base64,\" + item.image} className=\"lazy nft__item_preview\" alt=\"\" />\r\n                    </span>\r\n                  </Outer>\r\n                </div>\r\n                <div className=\"nft__item_info\">\r\n                  <span >\r\n                    <h4>{item.name}</h4>\r\n                  </span>\r\n                  {\r\n                    <div className=\"nft__item_price\">\r\n                      {ethers.utils.formatEther(item.totalPrice)} ETH\r\n                    </div>\r\n                  }\r\n                  <div className=\"nft__item_like\">\r\n                    <i className=\"fa fa-heart\"></i><span>50</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </>\r\n        : (<div style={{ padding: \"1rem 0\" }}>\r\n          <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>No listed assets</h2>\r\n        </div>)\r\n\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyListedItems;","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ItemsOnAuction.js",["658","659"],"import React, {  useEffect, useState } from 'react';\r\nimport { ethers } from \"ethers\"\r\nimport { Buffer } from 'buffer';\r\nimport styled from \"styled-components\";\r\nimport Clock from \"./Clock\";\r\nimport { navigate } from '@reach/router';\r\nconst Outer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n`;\r\n//react functional component\r\nconst ItemsOnAuction = ({ auction, nft }) => {\r\n\r\n    const navigateTo = (link) => {\r\n        navigate(link);\r\n    }\r\n\r\n\r\n    const [items, setItems] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [bidPrice, setBidPrice] = useState(0);\r\n\r\n    const loadMarketplaceItems = async () => {\r\n        // Load all unsold items\r\n        const itemCount = await auction.itemCount()\r\n        let items = []\r\n        for (let i = 1; i <= itemCount; i++) {\r\n            const item = await auction.items(i)\r\n\r\n            const aucitem = await auction.getTokenAuctionDetails(item.nft, item.tokenID)\r\n           \r\n\r\n            if (aucitem.isActive) {\r\n                // get uri url from nft contract\r\n                const uri = await nft.tokenURI(item.tokenID)\r\n                //console.log(item.tokenID)\r\n                // // use uri to fetch the nft metadata stored on ipfs \r\n                const response = await fetch(uri)\r\n                const metadata = await response.json()\r\n                \r\n                // // Add item to items array\r\n                const img = new Buffer.from(metadata.image.buffer).toString(\"base64\")\r\n                let unix_timestamp = aucitem.duration;\r\n                var date = new Date(unix_timestamp * 1000);\r\n                \r\n                items.push({\r\n                    price: aucitem.price,\r\n                    maxBid: aucitem.maxBid,\r\n                    itemId: item.tokenID,\r\n                    seller: aucitem.seller,\r\n                    name: metadata.name,\r\n                    description: metadata.description,\r\n                    image: img,\r\n                    duration: date\r\n                })\r\n\r\n            }\r\n        }\r\n        setLoading(false)\r\n        setItems(items)\r\n    }\r\n\r\n    const makeABid = async(item)=>{\r\n\r\n        console.log(item.price)\r\n        if(bidPrice< ethers.utils.formatEther(item.price) ){\r\n           console.log('low price')\r\n            return\r\n        }\r\n        if( item.duration < Date.now() ){\r\n            console.log(\"date\")\r\n           \r\n            return\r\n        }\r\n       \r\n     \r\n        await auction.bid(nft.address,item.itemId,{value: ethers.utils.parseEther(bidPrice.toString())})\r\n        setLoading(true) \r\n        loadMarketplaceItems()\r\n    }\r\n    const executeSale = async(item)=>{\r\n        await auction.executeSale(nft.address,item.itemId)\r\n        loadMarketplaceItems()\r\n\r\n    }\r\n\r\n\r\n    //will run when component unmounted\r\n    useEffect(() => {\r\n        \r\n        loadMarketplaceItems()\r\n    }, []);\r\n    if (loading) return (\r\n        <main style={{ padding: \"1rem 0\" }}>\r\n            <h2 style={{ marginTop: '120px', marginBottom: '120px' }}>Loading...</h2>\r\n        </main>\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='row'>\r\n            {items.length > 0 ?\r\n                <>\r\n                    {items.map((item, idx) => (\r\n                        <div key={idx} className='d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4'>\r\n                            <div className=\"nft__item m-0\">\r\n\r\n                                <div className=\"nft__item_wrap\" style={{ height: '16rem' }}>\r\n                                    <Outer>\r\n                                        <span>\r\n                                            <img src={\"data:image/png;base64,\" + item.image} className=\"lazy nft__item_preview\" alt=\"\" />\r\n                                        \r\n                                        </span>\r\n                                    </Outer>\r\n                                </div>\r\n                                {item.duration &&\r\n                                    <div className=\"de_countdown\">\r\n                                        <Clock deadline={item.duration} />\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className=\"nft__item_info\">\r\n                                    <span >\r\n                                        <h4>{item.name}</h4>\r\n                                    </span>\r\n                                    {\r\n                                        <div className=\"nft__item_price\">\r\n                                            {ethers.utils.formatEther(item.price)} ETH\r\n                                            {\r\n                                                <span>/ {ethers.utils.formatEther(item.maxBid)}ETH</span>\r\n                                                \r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                   {\r\n                                    item.duration > Date.now() ? \r\n                                     <div className=\"nft__item_action\">\r\n                                    \r\n                                    \r\n                                     {\r\n                                        <input onChange={(e) => setBidPrice(e.target.value)} type=\"number\" placeholder='make a bid'/>\r\n                                        \r\n                                     }\r\n                                      <br/>\r\n                                      {\r\n                                       \r\n                                        <span onClick={() => makeABid(item)}>{  'Place a bid' }</span>\r\n                                     }\r\n                                         \r\n                                     </div>\r\n                                     : <div><span onClick={() => executeSale(item)}>{  'Sale Nft' }</span></div>\r\n                                   }\r\n\r\n                                    <div className=\"nft__item_like\">\r\n                                        <i className=\"fa fa-heart\"></i><span>50</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </>\r\n                : (<div></div>)\r\n\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemsOnAuction;","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\TopFilterBar.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CheckboxFilter.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ColumnNewThreeColRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Catgor.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselNewReduxNew.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CarouselCollectionReduxNew.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\selectors\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\nft\\pinata.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\Card.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\Opensea\\AssetCard.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\utils.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\NftMintCard.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\opensea\\constants.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\UserTopSeller.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\NftCard.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\CustomSlide.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\blogs.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\filters.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\hotCollections.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\authorList.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\nfts.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderCarouselNew.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\constants\\filters.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\constants\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\blogs.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\contactUs.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\authorList.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\hotCollections.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\nfts.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\images.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\core\\axios.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\ImageMosaic\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\ImageMosaic\\components\\GridImage.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\index.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\Header.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\ArrowButtonleft.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\ArrowButton.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\ImageGallery\\components\\CoolLightbox\\components\\ButtonControl.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainParticleGrey1.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderCarouselRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderMainZero.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\components\\SliderCarouselSingleRedux.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\actions\\thunks\\authAction.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\store\\reducers\\tokenReducer.js",[],"C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Login.js",["660","661"],"import React, { useState } from \"react\";\nimport Footer from \"../components/footer\";\nimport { createGlobalStyle } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { dispatchLogin } from \"./../../store/actions/thunks/authAction\";\n\nimport { isEmpty } from \"../utils/validation/Validation\";\nimport { useSelector } from \"react-redux\";\n\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n// const Login = ({ auth: { isLogged, isAdmin } }) => {\nconst Login = () => {\n  // const auth = useSelector((state) => state.auth);\n  // const { isLogged, isAdmin } = auth;\n  const [user, setUser] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const { email, password } = user;\n\n  const handleChangeInput = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isEmpty(email) || isEmpty(password)) {\n      // setAlert(\"Please fill in all fields.\", \"danger\");\n\n      return setUser({\n        ...user,\n      });\n    }\n\n    try {\n      const res = await axios.post(\"/user/login\", { email, password });\n      // setAlert(res.data.msg, \"success\");\n      setUser({ ...user });\n\n      localStorage.setItem(\"firstLogin\", true);\n\n      dispatch(dispatchLogin());\n      // navigate(\"/dashboard\");\n      // return <Navigate to=\"/dashboard\" />\n    } catch (err) {\n      // err?.response?.data?.msg\n      // && setAlert(err?.response?.data?.msg, \"danger\");\n      setUser({ ...user });\n    }\n  };\n  return (\n    <div>\n      <GlobalStyles />\n\n      <section\n        className=\"jumbotron breadcumb no-bg\"\n        style={{ backgroundImage: `url(${\"./img/background/subheader.jpg\"})` }}\n      >\n        <div className=\"mainbreadcumb\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div\n                className=\"col-lg-5 text-light wow fadeInRight\"\n                data-wow-delay=\".5s\"\n              >\n                <div className=\"spacer-10\"></div>\n                <h1>Create, sell or collect digital items.</h1>\n                <p className=\"lead\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua\n                  ut enim.\n                </p>\n              </div>\n              <div\n                className=\"col-lg-4 offset-lg-2 wow fadeIn\"\n                data-wow-delay=\".5s\"\n              >\n                <div className=\"box-login\">\n                  <h3 className=\"mb10\">Sign In</h3>\n                  <p>\n                    Login using an existing account or create a new account{\" \"}\n                    <span>here</span>.\n                  </p>\n                  <form\n                    name=\"contactForm\"\n                    id=\"contact_form\"\n                    className=\"form-border\"\n                    onSubmit={handleSubmit}\n                  >\n                    <div className=\"field-set\">\n                      <input\n                        type=\"text\"\n                        name=\"email\"\n                        id=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"email\"\n                        value={email}\n                        onChange={handleChangeInput}\n                      />\n                    </div>\n\n                    <div className=\"field-set\">\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"password\"\n                        value={password}\n                        onChange={handleChangeInput}\n                      />\n                    </div>\n\n                    <div className=\"field-set\">\n                      <input\n                        type=\"submit\"\n                        id=\"send_message\"\n                        value=\"Submit\"\n                        className=\"btn btn-main btn-fullwidth color-2\"\n                      />\n                    </div>\n\n                    <div className=\"clearfix\"></div>\n\n                    <div className=\"spacer-single\"></div>\n                    <ul className=\"list s3\">\n                      <li>Login with:</li>\n                      <li>\n                        <span>Facebook</span>\n                      </li>\n                      <li>\n                        <span>Google</span>\n                      </li>\n                    </ul>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  // setAlert: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(Login);\n// export default Login;\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\utils\\validation\\Validation.js",["662","663","664","665"],"export const isEmpty = (value) => {\r\n  if (!value) return true;\r\n  return false;\r\n};\r\n\r\nexport const isEmail = (email) => {\r\n  // eslint-disable-next-line\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n};\r\n\r\nexport const isLength = (password) => {\r\n  if (password.length < 6) return true;\r\n  return false;\r\n};\r\n\r\nexport const isMatch = (password, cf_password) => {\r\n  if (password === cf_password) return true;\r\n  return false;\r\n};\r\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\App.js",["666","667"],"import React, { useEffect, useState } from \"react\";\nimport { Router, Location, Redirect } from \"@reach/router\";\nimport ScrollToTopBtn from \"./menu/ScrollToTop\";\nimport Header from \"./menu/header\";\nimport Home from \"./pages/home\";\nimport HomeGrey from \"./pages/homeGrey\";\nimport Home1 from \"./pages/home1\";\nimport Home1grey from \"./pages/home1Grey\";\nimport Home2 from \"./pages/home2\";\nimport Home2grey from \"./pages/home2Grey\";\nimport Home3 from \"./pages/home3\";\nimport Home4 from \"./pages/home4\";\nimport Home5 from \"./pages/home5\";\nimport Explore from \"./pages/explore\";\nimport Exploregrey from \"./pages/exploreGrey\";\nimport Explore2 from \"./pages/explore2\";\nimport Explore2grey from \"./pages/explore2Grey\";\nimport ExploreOpensea from \"./pages/Opensea/explore\";\n// import Rangking from './pages/rangking';\nimport RankingRedux from \"./pages/RankingRedux\";\nimport RankingReduxgrey from \"./pages/RankingReduxGrey\";\nimport Auction from \"./pages/Auction\";\nimport Auctiongrey from \"./pages/AuctionGrey\";\nimport Helpcenter from \"./pages/helpcenter\";\nimport Helpcentergrey from \"./pages/helpcenterGrey\";\nimport Colection from \"./pages/colection\";\nimport Colectiongrey from \"./pages/colectionGrey\";\n// import ItemDetail from './pages/ItemDetail';\nimport ItemDetailRedux from \"./pages/ItemDetailRedux\";\nimport ItemDetailReduxgrey from \"./pages/ItemDetailReduxGrey\";\nimport Author from \"./pages/Author\";\nimport AuthorGrey from \"./pages/AuthorGrey\";\nimport AuthorOpensea from \"./pages/Opensea/author\";\nimport Wallet from \"./pages/wallet\";\nimport WalletGrey from \"./pages/walletGrey\";\nimport Login from \"./pages/Login\";\n// import Logingrey from \"./pages/loginGrey\";\n// import LoginTwo from \"./pages/loginTwo\";\n// import LoginTwogrey from \"./pages/loginTwoGrey\";\nimport Register from \"./pages/register\";\nimport Registergrey from \"./pages/registerGrey\";\nimport Price from \"./pages/price\";\nimport Works from \"./pages/works\";\nimport News from \"./pages/news\";\nimport NewsSingle from \"./pages/newsSingle\";\nimport Create from \"./pages/create\";\nimport Creategrey from \"./pages/createGrey\";\nimport Create2 from \"./pages/create2\";\nimport Create3 from \"./pages/create3\";\nimport Createoption from \"./pages/createOptions\";\nimport Activity from \"./pages/activity\";\nimport Activitygrey from \"./pages/activityGrey\";\nimport Contact from \"./pages/contact\";\nimport Contactgrey from \"./pages/contactGrey\";\nimport ElegantIcons from \"./pages/elegantIcons\";\nimport EtlineIcons from \"./pages/etlineIcons\";\nimport FontAwesomeIcons from \"./pages/fontAwesomeIcons\";\nimport Accordion from \"./pages/accordion\";\nimport Alerts from \"./pages/alerts\";\nimport Progressbar from \"./pages/progressbar\";\nimport Tabs from \"./pages/tabs\";\nimport Minter from \"./pages/Minter\";\nimport Mintergrey from \"./pages/MinterGrey\";\n\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    scroll-behavior: unset;\n  }\n`;\n\nexport const ScrollTop = ({ children, location }) => {\n  React.useEffect(() => window.scrollTo(0, 0), [location]);\n  return children;\n};\n\nconst PosedRouter = ({ children }) => (\n  <Location>\n    {({ location }) => (\n      <div id=\"routerhang\">\n        <div key={location.key}>\n          <Router location={location}>{children}</Router>\n        </div>\n      </div>\n    )}\n  </Location>\n);\n\nconst app = () => (\n  <div className=\"wraper\">\n    <GlobalStyles />\n    <Header />\n    <PosedRouter>\n      <ScrollTop path=\"/\">\n        <Home exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Home>\n        <HomeGrey path=\"/homeGrey\" />\n        <Home1 path=\"/home1\" />\n        <Home1grey path=\"/home1Grey\" />\n        <Home2 path=\"/home2\" />\n        <Home2grey path=\"/home2Grey\" />\n        <Home3 path=\"/home3\" />\n        <Home4 path=\"/home4\" />\n        <Home5 path=\"/home5\" />\n        <Explore path=\"/explore\" />\n        <Exploregrey path=\"/exploreGrey\" />\n        <Explore2 path=\"/explore2\" />\n        <Explore2grey path=\"/explore2Grey\" />\n        <ExploreOpensea path=\"/exploreOpensea\" />\n        <RankingRedux path=\"/rangking\" />\n        <RankingReduxgrey path=\"/rangkingGrey\" />\n        <Auction path=\"/Auction\" />\n        <Auctiongrey path=\"/AuctionGrey\" />\n        <Helpcenter path=\"/helpcenter\" />\n        <Helpcentergrey path=\"/helpcenterGrey\" />\n        <Colection path=\"/colection/:collectionId\" />\n        <Colectiongrey path=\"/colectionGrey/:collectionId\" />\n        <ItemDetailRedux path=\"/ItemDetail/:nftId\" />\n        <ItemDetailReduxgrey path=\"/ItemDetailGrey/:nftId\" />\n        <Author path=\"/Author/:authorId\" />\n        <AuthorGrey path=\"/AuthorGrey/:authorId\" />\n        <AuthorOpensea path=\"/AuthorOpensea\" />\n        <Wallet path=\"/wallet\" />\n        <WalletGrey path=\"/walletGrey\" />\n        <Login path=\"/login\" />\n\n        {/* <Logingrey path=\"/loginGrey\" /> */}\n        {/* <LoginTwo path=\"/loginTwo\" /> */}\n        {/* <LoginTwogrey path=\"/loginTwoGrey\" /> */}\n        <Register path=\"/register\" />\n        <Registergrey path=\"/registerGrey\" />\n        <Price path=\"/price\" />\n        <Works path=\"/works\" />\n        <News path=\"/news\" />\n        <NewsSingle path=\"/news/:postId\" />\n        <Create path=\"/create\" />\n        <Creategrey path=\"/createGrey\" />\n        <Create2 path=\"/create2\" />\n        <Create3 path=\"/create3\" />\n        <Createoption path=\"/createOptions\" />\n        <Activity path=\"/activity\" />\n        <Activitygrey path=\"/activityGrey\" />\n        <Contact path=\"/contact\" />\n        <Contactgrey path=\"/contactGrey\" />\n        <ElegantIcons path=\"/elegantIcons\" />\n        <EtlineIcons path=\"/etlineIcons\" />\n        <FontAwesomeIcons path=\"/fontAwesomeIcons\" />\n        <Accordion path=\"/accordion\" />\n        <Alerts path=\"/alerts\" />\n        <Progressbar path=\"/progressbar\" />\n        <Tabs path=\"/tabs\" />\n        <Minter path=\"/mint\" />\n        <Mintergrey path=\"/minter\" />\n      </ScrollTop>\n    </PosedRouter>\n    <ScrollToTopBtn />\n  </div>\n);\nexport default app;\n","C:\\Users\\raiab\\Documents\\Logics Yard\\NFT code daniyal\\NFT code\\client\\src\\components\\pages\\Register.js",["668"],{"ruleId":"669","replacedBy":"670"},{"ruleId":"671","replacedBy":"672"},{"ruleId":"673","severity":1,"message":"674","line":1,"column":17,"nodeType":"675","messageId":"676","endLine":1,"endColumn":26},{"ruleId":"673","severity":1,"message":"677","line":1,"column":28,"nodeType":"675","messageId":"676","endLine":1,"endColumn":36},{"ruleId":"673","severity":1,"message":"678","line":51,"column":10,"nodeType":"675","messageId":"676","endLine":51,"endColumn":17},{"ruleId":"679","severity":1,"message":"680","line":88,"column":6,"nodeType":"681","endLine":88,"endColumn":8,"suggestions":"682"},{"ruleId":"673","severity":1,"message":"678","line":13,"column":10,"nodeType":"675","messageId":"676","endLine":13,"endColumn":17},{"ruleId":"679","severity":1,"message":"680","line":50,"column":6,"nodeType":"681","endLine":50,"endColumn":8,"suggestions":"683"},{"ruleId":"673","severity":1,"message":"684","line":30,"column":9,"nodeType":"675","messageId":"676","endLine":30,"endColumn":23},{"ruleId":"673","severity":1,"message":"685","line":33,"column":9,"nodeType":"675","messageId":"676","endLine":33,"endColumn":24},{"ruleId":"673","severity":1,"message":"686","line":36,"column":9,"nodeType":"675","messageId":"676","endLine":36,"endColumn":24},{"ruleId":"673","severity":1,"message":"687","line":39,"column":9,"nodeType":"675","messageId":"676","endLine":39,"endColumn":24},{"ruleId":"673","severity":1,"message":"688","line":55,"column":9,"nodeType":"675","messageId":"676","endLine":55,"endColumn":12},{"ruleId":"673","severity":1,"message":"689","line":58,"column":9,"nodeType":"675","messageId":"676","endLine":58,"endColumn":13},{"ruleId":"673","severity":1,"message":"690","line":61,"column":9,"nodeType":"675","messageId":"676","endLine":61,"endColumn":13},{"ruleId":"673","severity":1,"message":"691","line":64,"column":9,"nodeType":"675","messageId":"676","endLine":64,"endColumn":13},{"ruleId":"673","severity":1,"message":"678","line":47,"column":10,"nodeType":"675","messageId":"676","endLine":47,"endColumn":17},{"ruleId":"679","severity":1,"message":"680","line":84,"column":6,"nodeType":"681","endLine":84,"endColumn":8,"suggestions":"692"},{"ruleId":"673","severity":1,"message":"693","line":5,"column":8,"nodeType":"675","messageId":"676","endLine":5,"endColumn":22},{"ruleId":"679","severity":1,"message":"694","line":147,"column":6,"nodeType":"681","endLine":147,"endColumn":30,"suggestions":"695"},{"ruleId":"673","severity":1,"message":"696","line":4,"column":10,"nodeType":"675","messageId":"676","endLine":4,"endColumn":17},{"ruleId":"673","severity":1,"message":"697","line":5,"column":8,"nodeType":"675","messageId":"676","endLine":5,"endColumn":17},{"ruleId":"673","severity":1,"message":"698","line":41,"column":10,"nodeType":"675","messageId":"676","endLine":41,"endColumn":18},{"ruleId":"673","severity":1,"message":"699","line":41,"column":20,"nodeType":"675","messageId":"676","endLine":41,"endColumn":31},{"ruleId":"669","replacedBy":"700"},{"ruleId":"671","replacedBy":"701"},{"ruleId":"669","replacedBy":"702"},{"ruleId":"671","replacedBy":"703"},{"ruleId":"673","severity":1,"message":"704","line":10,"column":8,"nodeType":"675","messageId":"676","endLine":10,"endColumn":21},{"ruleId":"673","severity":1,"message":"705","line":11,"column":8,"nodeType":"675","messageId":"676","endLine":11,"endColumn":11},{"ruleId":"673","severity":1,"message":"706","line":17,"column":8,"nodeType":"675","messageId":"676","endLine":17,"endColumn":13},{"ruleId":"673","severity":1,"message":"707","line":64,"column":10,"nodeType":"675","messageId":"676","endLine":64,"endColumn":16},{"ruleId":"673","severity":1,"message":"678","line":76,"column":10,"nodeType":"675","messageId":"676","endLine":76,"endColumn":17},{"ruleId":"679","severity":1,"message":"680","line":146,"column":6,"nodeType":"681","endLine":146,"endColumn":8,"suggestions":"708"},{"ruleId":"673","severity":1,"message":"709","line":177,"column":9,"nodeType":"675","messageId":"676","endLine":177,"endColumn":29},{"ruleId":"673","severity":1,"message":"710","line":255,"column":9,"nodeType":"675","messageId":"676","endLine":255,"endColumn":16},{"ruleId":"679","severity":1,"message":"711","line":257,"column":6,"nodeType":"681","endLine":257,"endColumn":30,"suggestions":"712"},{"ruleId":"713","severity":1,"message":"714","line":400,"column":27,"nodeType":"715","messageId":"716","endLine":400,"endColumn":29},{"ruleId":"713","severity":1,"message":"714","line":409,"column":27,"nodeType":"715","messageId":"716","endLine":409,"endColumn":29},{"ruleId":"673","severity":1,"message":"678","line":71,"column":10,"nodeType":"675","messageId":"676","endLine":71,"endColumn":17},{"ruleId":"673","severity":1,"message":"717","line":75,"column":10,"nodeType":"675","messageId":"676","endLine":75,"endColumn":16},{"ruleId":"673","severity":1,"message":"718","line":75,"column":18,"nodeType":"675","messageId":"676","endLine":75,"endColumn":27},{"ruleId":"679","severity":1,"message":"680","line":139,"column":6,"nodeType":"681","endLine":139,"endColumn":8,"suggestions":"719"},{"ruleId":"679","severity":1,"message":"711","line":202,"column":6,"nodeType":"681","endLine":202,"endColumn":30,"suggestions":"720"},{"ruleId":"673","severity":1,"message":"721","line":1,"column":17,"nodeType":"675","messageId":"676","endLine":1,"endColumn":21},{"ruleId":"673","severity":1,"message":"722","line":2,"column":10,"nodeType":"675","messageId":"676","endLine":2,"endColumn":21},{"ruleId":"673","severity":1,"message":"723","line":2,"column":23,"nodeType":"675","messageId":"676","endLine":2,"endColumn":34},{"ruleId":"673","severity":1,"message":"724","line":3,"column":13,"nodeType":"675","messageId":"676","endLine":3,"endColumn":22},{"ruleId":"673","severity":1,"message":"725","line":4,"column":13,"nodeType":"675","messageId":"676","endLine":4,"endColumn":20},{"ruleId":"673","severity":1,"message":"726","line":5,"column":10,"nodeType":"675","messageId":"676","endLine":5,"endColumn":19},{"ruleId":"673","severity":1,"message":"727","line":5,"column":21,"nodeType":"675","messageId":"676","endLine":5,"endColumn":32},{"ruleId":"673","severity":1,"message":"728","line":6,"column":8,"nodeType":"675","messageId":"676","endLine":6,"endColumn":15},{"ruleId":"673","severity":1,"message":"729","line":7,"column":10,"nodeType":"675","messageId":"676","endLine":7,"endColumn":22},{"ruleId":"679","severity":1,"message":"730","line":71,"column":5,"nodeType":"681","endLine":71,"endColumn":7,"suggestions":"731"},{"ruleId":"679","severity":1,"message":"730","line":86,"column":8,"nodeType":"681","endLine":86,"endColumn":10,"suggestions":"732"},{"ruleId":"679","severity":1,"message":"733","line":69,"column":11,"nodeType":"734","endLine":78,"endColumn":6},{"ruleId":"679","severity":1,"message":"735","line":63,"column":8,"nodeType":"681","endLine":63,"endColumn":21,"suggestions":"736"},{"ruleId":"679","severity":1,"message":"735","line":94,"column":8,"nodeType":"681","endLine":94,"endColumn":21,"suggestions":"737"},{"ruleId":"673","severity":1,"message":"721","line":1,"column":17,"nodeType":"675","messageId":"676","endLine":1,"endColumn":21},{"ruleId":"673","severity":1,"message":"722","line":2,"column":10,"nodeType":"675","messageId":"676","endLine":2,"endColumn":21},{"ruleId":"673","severity":1,"message":"723","line":2,"column":23,"nodeType":"675","messageId":"676","endLine":2,"endColumn":34},{"ruleId":"673","severity":1,"message":"724","line":3,"column":13,"nodeType":"675","messageId":"676","endLine":3,"endColumn":22},{"ruleId":"673","severity":1,"message":"725","line":4,"column":13,"nodeType":"675","messageId":"676","endLine":4,"endColumn":20},{"ruleId":"673","severity":1,"message":"726","line":5,"column":10,"nodeType":"675","messageId":"676","endLine":5,"endColumn":19},{"ruleId":"673","severity":1,"message":"727","line":5,"column":21,"nodeType":"675","messageId":"676","endLine":5,"endColumn":32},{"ruleId":"673","severity":1,"message":"728","line":6,"column":8,"nodeType":"675","messageId":"676","endLine":6,"endColumn":15},{"ruleId":"673","severity":1,"message":"729","line":7,"column":10,"nodeType":"675","messageId":"676","endLine":7,"endColumn":22},{"ruleId":"679","severity":1,"message":"738","line":61,"column":6,"nodeType":"681","endLine":61,"endColumn":8,"suggestions":"739"},{"ruleId":"673","severity":1,"message":"740","line":18,"column":11,"nodeType":"675","messageId":"676","endLine":18,"endColumn":21},{"ruleId":"679","severity":1,"message":"730","line":96,"column":8,"nodeType":"681","endLine":96,"endColumn":10,"suggestions":"741"},{"ruleId":"673","severity":1,"message":"722","line":10,"column":10,"nodeType":"675","messageId":"676","endLine":10,"endColumn":21},{"ruleId":"673","severity":1,"message":"742","line":73,"column":13,"nodeType":"675","messageId":"676","endLine":73,"endColumn":16},{"ruleId":"743","severity":1,"message":"744","line":9,"column":27,"nodeType":"745","messageId":"746","endLine":9,"endColumn":28,"suggestions":"747"},{"ruleId":"743","severity":1,"message":"744","line":9,"column":52,"nodeType":"745","messageId":"746","endLine":9,"endColumn":53,"suggestions":"748"},{"ruleId":"743","severity":1,"message":"744","line":9,"column":61,"nodeType":"745","messageId":"746","endLine":9,"endColumn":62,"suggestions":"749"},{"ruleId":"743","severity":1,"message":"744","line":9,"column":65,"nodeType":"745","messageId":"746","endLine":9,"endColumn":66,"suggestions":"750"},{"ruleId":"673","severity":1,"message":"674","line":1,"column":17,"nodeType":"675","messageId":"676","endLine":1,"endColumn":26},{"ruleId":"673","severity":1,"message":"677","line":1,"column":28,"nodeType":"675","messageId":"676","endLine":1,"endColumn":36},{"ruleId":"673","severity":1,"message":"751","line":3,"column":10,"nodeType":"675","messageId":"676","endLine":3,"endColumn":18},"no-native-reassign",["752"],"no-negated-in-lhs",["753"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'account' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'web3Handler'. Either include it or remove the dependency array.","ArrayExpression",["754"],["755"],"'handleBtnClick' is assigned a value but never used.","'handleBtnClick1' is assigned a value but never used.","'handleBtnClick2' is assigned a value but never used.","'handleBtnClick3' is assigned a value but never used.","'ref' is assigned a value but never used.","'ref1' is assigned a value but never used.","'ref2' is assigned a value but never used.","'ref3' is assigned a value but never used.",["756"],"'ColumnNewRedux' is defined but never used.","React Hook useEffect has missing dependencies: 'btnhandler' and 'web3Handler'. Either include them or remove the dependency array.",["757"],"'connect' is defined but never used.","'PropTypes' is defined but never used.","'formData' is assigned a value but never used.","'setFromData' is assigned a value but never used.",["752"],["753"],["752"],["753"],"'ColumnNewMint' is defined but never used.","'api' is defined but never used.","'fetch' is defined but never used.","'status' is assigned a value but never used.",["758"],"'connectWalletPressed' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'url'. Either exclude it or remove the dependency array.",["759"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buffer' is assigned a value but never used.","'setBuffer' is assigned a value but never used.",["760"],["761"],"'memo' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'selectors' is defined but never used.","'actions' is defined but never used.","'clearNfts' is defined but never used.","'clearFilter' is defined but never used.","'NftCard' is defined but never used.","'shuffleArray' is defined but never used.","React Hook useEffect has a missing dependency: 'loadMarketplaceItems'. Either include it or remove the dependency array.",["762"],["763"],"The 'getAddress' function makes the dependencies of useEffect Hook (at line 82) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'getAddress' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has missing dependencies: 'currentOwner', 'currentSide', and 'fetchData'. Either include them or remove the dependency array.",["764"],["765"],"React Hook useEffect has a missing dependency: 'loadListedItems'. Either include it or remove the dependency array.",["766"],"'navigateTo' is assigned a value but never used.",["767"],"'res' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["768","769"],["770","771"],["772","773"],["774","775"],"'Navigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"776","fix":"777"},{"desc":"776","fix":"778"},{"desc":"776","fix":"779"},{"desc":"780","fix":"781"},{"desc":"776","fix":"782"},{"desc":"783","fix":"784"},{"desc":"776","fix":"785"},{"desc":"783","fix":"786"},{"desc":"787","fix":"788"},{"desc":"787","fix":"789"},{"desc":"790","fix":"791"},{"desc":"790","fix":"792"},{"desc":"793","fix":"794"},{"desc":"787","fix":"795"},{"messageId":"796","fix":"797","desc":"798"},{"messageId":"799","fix":"800","desc":"801"},{"messageId":"796","fix":"802","desc":"798"},{"messageId":"799","fix":"803","desc":"801"},{"messageId":"796","fix":"804","desc":"798"},{"messageId":"799","fix":"805","desc":"801"},{"messageId":"796","fix":"806","desc":"798"},{"messageId":"799","fix":"807","desc":"801"},"Update the dependencies array to be: [web3Handler]",{"range":"808","text":"809"},{"range":"810","text":"809"},{"range":"811","text":"809"},"Update the dependencies array to be: [dispatch, collectionId, web3Handler, btnhandler]",{"range":"812","text":"813"},{"range":"814","text":"809"},"Update the dependencies array to be: [name, description]",{"range":"815","text":"816"},{"range":"817","text":"809"},{"range":"818","text":"816"},"Update the dependencies array to be: [loadMarketplaceItems]",{"range":"819","text":"820"},{"range":"821","text":"820"},"Update the dependencies array to be: [side, owner, currentOwner, currentSide, fetchData]",{"range":"822","text":"823"},{"range":"824","text":"823"},"Update the dependencies array to be: [loadListedItems]",{"range":"825","text":"826"},{"range":"827","text":"820"},"removeEscape",{"range":"828","text":"829"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"830","text":"831"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"832","text":"829"},{"range":"833","text":"831"},{"range":"834","text":"829"},{"range":"835","text":"831"},{"range":"836","text":"829"},{"range":"837","text":"831"},[2741,2743],"[web3Handler]",[1844,1846],[2549,2551],[4461,4485],"[dispatch, collectionId, web3Handler, btnhandler]",[4054,4056],[6867,6891],"[name, description]",[4151,4153],[5753,5777],[2281,2283],"[loadMarketplaceItems]",[2813,2815],[2029,2042],"[side, owner, currentOwner, currentSide, fetchData]",[2833,2846],[2038,2040],"[loadListedItems]",[2978,2980],[196,197],"",[196,196],"\\",[221,222],[221,221],[230,231],[230,230],[234,235],[234,234]]